export default class VocoderNode {
    readonly context: AudioContext;
    private _maxFreq;
    private _minFreq;
    private _nBands;
    private _shift;
    private _bandwidthScale;
    private _gateThreshold;
    private _noiseLevel;
    carrierInput: GainNode;
    modulatorInput: GainNode;
    private _output;
    private _noiseCarrier;
    private _noiseGain;
    private _carrierFilters;
    private _modFilters;
    private _bandFollowers;
    private _bandGains;
    constructor(context: AudioContext, _maxFreq: number, _minFreq: number, _nBands: number);
    private initFollowersAndGains;
    private connectGraph;
    private setCarrierFilterBankRange;
    private setFilterBankRange;
    private setFilterBankBandwidthScale;
    private setBandFollowerGateThresholds;
    get minFreq(): number;
    set minFreq(freq: number);
    get maxFreq(): number;
    set maxFreq(freq: number);
    get shift(): number;
    set shift(shift: number);
    get nBands(): number;
    set nBands(nBands: number);
    get bandwidthScale(): number;
    set bandwidthScale(bandwidthScale: number);
    get gateThreshold(): number;
    set gateThreshold(threshold: number);
    get noiseLevel(): number;
    set noiseLevel(level: number);
    connect(destination: any): void;
    disconnect(destination: any): void;
    deconstruct(): void;
}
