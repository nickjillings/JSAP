{"version":3,"sources":["webpack://jsap/webpack/universalModuleDefinition","webpack://jsap/jsXtract/webpack/universalModuleDefinition","webpack://jsap/jsXtract/webpack/bootstrap","webpack://jsap/jsXtract/modules/freeFFT.js","webpack://jsap/jsXtract/modules/functions/xtract_amdf.js","webpack://jsap/jsXtract/modules/functions/xtract_apply_window.js","webpack://jsap/jsXtract/modules/functions/xtract_array_bound.js","webpack://jsap/jsXtract/modules/functions/xtract_array_copy.js","webpack://jsap/jsXtract/modules/functions/xtract_array_deinterlace.js","webpack://jsap/jsXtract/modules/functions/xtract_array_interlace.js","webpack://jsap/jsXtract/modules/functions/xtract_array_max.js","webpack://jsap/jsXtract/modules/functions/xtract_array_min.js","webpack://jsap/jsXtract/modules/functions/xtract_array_normalise.js","webpack://jsap/jsXtract/modules/functions/xtract_array_scale.js","webpack://jsap/jsXtract/modules/functions/xtract_array_sum.js","webpack://jsap/jsXtract/modules/functions/xtract_array_to_JSON.js","webpack://jsap/jsXtract/modules/functions/xtract_asdf.js","webpack://jsap/jsXtract/modules/functions/xtract_assert_array.js","webpack://jsap/jsXtract/modules/functions/xtract_assert_positive_integer.js","webpack://jsap/jsXtract/modules/functions/xtract_autocorrelation.js","webpack://jsap/jsXtract/modules/functions/xtract_average_deviation.js","webpack://jsap/jsXtract/modules/functions/xtract_bark_coefficients.js","webpack://jsap/jsXtract/modules/functions/xtract_chroma.js","webpack://jsap/jsXtract/modules/functions/xtract_complex_spectrum.js","webpack://jsap/jsXtract/modules/functions/xtract_create_window.js","webpack://jsap/jsXtract/modules/functions/xtract_crest.js","webpack://jsap/jsXtract/modules/functions/xtract_dct.js","webpack://jsap/jsXtract/modules/functions/xtract_dct_2.js","webpack://jsap/jsXtract/modules/functions/xtract_energy.js","webpack://jsap/jsXtract/modules/functions/xtract_f0.js","webpack://jsap/jsXtract/modules/functions/xtract_failsafe_f0.js","webpack://jsap/jsXtract/modules/functions/xtract_flatness.js","webpack://jsap/jsXtract/modules/functions/xtract_flatness_db.js","webpack://jsap/jsXtract/modules/functions/xtract_frame_from_array.js","webpack://jsap/jsXtract/modules/functions/xtract_get_data_frames.js","webpack://jsap/jsXtract/modules/functions/xtract_get_number_of_frames.js","webpack://jsap/jsXtract/modules/functions/xtract_harmonic_spectrum.js","webpack://jsap/jsXtract/modules/functions/xtract_highest_value.js","webpack://jsap/jsXtract/modules/functions/xtract_hps.js","webpack://jsap/jsXtract/modules/functions/xtract_init_bark.js","webpack://jsap/jsXtract/modules/functions/xtract_init_chroma.js","webpack://jsap/jsXtract/modules/functions/xtract_init_dct.js","webpack://jsap/jsXtract/modules/functions/xtract_init_dft.js","webpack://jsap/jsXtract/modules/functions/xtract_init_mfcc.js","webpack://jsap/jsXtract/modules/functions/xtract_init_pcp.js","webpack://jsap/jsXtract/modules/functions/xtract_init_wavelet.js","webpack://jsap/jsXtract/modules/functions/xtract_irregularity_j.js","webpack://jsap/jsXtract/modules/functions/xtract_irregularity_k.js","webpack://jsap/jsXtract/modules/functions/xtract_is_denormal.js","webpack://jsap/jsXtract/modules/functions/xtract_kurtosis.js","webpack://jsap/jsXtract/modules/functions/xtract_loudness.js","webpack://jsap/jsXtract/modules/functions/xtract_lowest_value.js","webpack://jsap/jsXtract/modules/functions/xtract_lowhigh.js","webpack://jsap/jsXtract/modules/functions/xtract_lpc.js","webpack://jsap/jsXtract/modules/functions/xtract_lpcc.js","webpack://jsap/jsXtract/modules/functions/xtract_mean.js","webpack://jsap/jsXtract/modules/functions/xtract_mfcc.js","webpack://jsap/jsXtract/modules/functions/xtract_midicent.js","webpack://jsap/jsXtract/modules/functions/xtract_noisiness.js","webpack://jsap/jsXtract/modules/functions/xtract_nonzero_count.js","webpack://jsap/jsXtract/modules/functions/xtract_odd_even_ratio.js","webpack://jsap/jsXtract/modules/functions/xtract_onset.js","webpack://jsap/jsXtract/modules/functions/xtract_pcp.js","webpack://jsap/jsXtract/modules/functions/xtract_peak_spectrum.js","webpack://jsap/jsXtract/modules/functions/xtract_power.js","webpack://jsap/jsXtract/modules/functions/xtract_process_frame_data.js","webpack://jsap/jsXtract/modules/functions/xtract_resample.js","webpack://jsap/jsXtract/modules/functions/xtract_rms_amplitude.js","webpack://jsap/jsXtract/modules/functions/xtract_rolloff.js","webpack://jsap/jsXtract/modules/functions/xtract_sharpness.js","webpack://jsap/jsXtract/modules/functions/xtract_skewness.js","webpack://jsap/jsXtract/modules/functions/xtract_skewness_kurtosis.js","webpack://jsap/jsXtract/modules/functions/xtract_smoothness.js","webpack://jsap/jsXtract/modules/functions/xtract_spectral_centroid.js","webpack://jsap/jsXtract/modules/functions/xtract_spectral_fundamental.js","webpack://jsap/jsXtract/modules/functions/xtract_spectral_inharmonicity.js","webpack://jsap/jsXtract/modules/functions/xtract_spectral_kurtosis.js","webpack://jsap/jsXtract/modules/functions/xtract_spectral_mean.js","webpack://jsap/jsXtract/modules/functions/xtract_spectral_skewness.js","webpack://jsap/jsXtract/modules/functions/xtract_spectral_slope.js","webpack://jsap/jsXtract/modules/functions/xtract_spectral_spread.js","webpack://jsap/jsXtract/modules/functions/xtract_spectral_standard_deviation.js","webpack://jsap/jsXtract/modules/functions/xtract_spectral_variance.js","webpack://jsap/jsXtract/modules/functions/xtract_spectrum.js","webpack://jsap/jsXtract/modules/functions/xtract_standard_deviation.js","webpack://jsap/jsXtract/modules/functions/xtract_sum.js","webpack://jsap/jsXtract/modules/functions/xtract_temporal_centroid.js","webpack://jsap/jsXtract/modules/functions/xtract_tonality.js","webpack://jsap/jsXtract/modules/functions/xtract_tristimulus.js","webpack://jsap/jsXtract/modules/functions/xtract_variance.js","webpack://jsap/jsXtract/modules/functions/xtract_wavelet_f0.js","webpack://jsap/jsXtract/modules/functions/xtract_yin.js","webpack://jsap/jsXtract/modules/functions/xtract_zcr.js","webpack://jsap/jsXtract/modules/index.js","webpack://jsap/jsXtract/modules/objects/CommonMemory.js","webpack://jsap/jsXtract/modules/objects/DataPrototype.js","webpack://jsap/jsXtract/modules/objects/HarmonicSpectrumData.js","webpack://jsap/jsXtract/modules/objects/PeakSpectrumData.js","webpack://jsap/jsXtract/modules/objects/SpectrumData.js","webpack://jsap/jsXtract/modules/objects/TimeData.js","webpack://jsap/./node_modules/rxjs/src/internal/NotificationFactories.ts","webpack://jsap/./node_modules/rxjs/src/internal/Observable.ts","webpack://jsap/./node_modules/rxjs/src/internal/Subscriber.ts","webpack://jsap/./node_modules/rxjs/src/internal/Subscription.ts","webpack://jsap/./node_modules/rxjs/src/internal/config.ts","webpack://jsap/./node_modules/rxjs/src/internal/observable/from.ts","webpack://jsap/./node_modules/rxjs/src/internal/observable/fromArray.ts","webpack://jsap/./node_modules/rxjs/src/internal/observable/of.ts","webpack://jsap/./node_modules/rxjs/src/internal/scheduled/scheduleArray.ts","webpack://jsap/./node_modules/rxjs/src/internal/scheduled/scheduleAsyncIterable.ts","webpack://jsap/./node_modules/rxjs/src/internal/scheduled/scheduleIterable.ts","webpack://jsap/./node_modules/rxjs/src/internal/scheduled/scheduleObservable.ts","webpack://jsap/./node_modules/rxjs/src/internal/scheduled/schedulePromise.ts","webpack://jsap/./node_modules/rxjs/src/internal/scheduled/scheduleReadableStreamLike.ts","webpack://jsap/./node_modules/rxjs/src/internal/scheduled/scheduled.ts","webpack://jsap/./node_modules/rxjs/src/internal/scheduler/timeoutProvider.ts","webpack://jsap/./node_modules/rxjs/src/internal/symbol/iterator.ts","webpack://jsap/./node_modules/rxjs/src/internal/symbol/observable.ts","webpack://jsap/./node_modules/rxjs/src/internal/util/UnsubscriptionError.ts","webpack://jsap/./node_modules/rxjs/src/internal/util/args.ts","webpack://jsap/./node_modules/rxjs/src/internal/util/arrRemove.ts","webpack://jsap/./node_modules/rxjs/src/internal/util/caughtSchedule.ts","webpack://jsap/./node_modules/rxjs/src/internal/util/createErrorClass.ts","webpack://jsap/./node_modules/rxjs/src/internal/util/errorContext.ts","webpack://jsap/./node_modules/rxjs/src/internal/util/identity.ts","webpack://jsap/./node_modules/rxjs/src/internal/util/isArrayLike.ts","webpack://jsap/./node_modules/rxjs/src/internal/util/isAsyncIterable.ts","webpack://jsap/./node_modules/rxjs/src/internal/util/isFunction.ts","webpack://jsap/./node_modules/rxjs/src/internal/util/isInteropObservable.ts","webpack://jsap/./node_modules/rxjs/src/internal/util/isIterable.ts","webpack://jsap/./node_modules/rxjs/src/internal/util/isPromise.ts","webpack://jsap/./node_modules/rxjs/src/internal/util/isReadableStreamLike.ts","webpack://jsap/./node_modules/rxjs/src/internal/util/isScheduler.ts","webpack://jsap/./node_modules/rxjs/src/internal/util/noop.ts","webpack://jsap/./node_modules/rxjs/src/internal/util/pipe.ts","webpack://jsap/./node_modules/rxjs/src/internal/util/reportUnhandledError.ts","webpack://jsap/./node_modules/rxjs/src/internal/util/throwUnobservableError.ts","webpack://jsap/./node_modules/tslib/tslib.es6.js","webpack://jsap/./src/BasePlugin/AudioPlugin.ts","webpack://jsap/./src/BasePlugin/LinkedStoreInterface.ts","webpack://jsap/./src/BasePlugin/ParameterManager.ts","webpack://jsap/./src/BasePlugin/PluginFeatureInterface/PluginFeatureInterfaceReceiver.ts","webpack://jsap/./src/BasePlugin/PluginFeatureInterface/PluginFeatureInterfaceSender.ts","webpack://jsap/./src/BasePlugin/PluginFeatureInterface/index.ts","webpack://jsap/./src/BasePlugin/PluginInterfaceMessageHub.ts","webpack://jsap/./src/BasePlugin/index.ts","webpack://jsap/./src/BasePlugin/parameters/AssetParameter.ts","webpack://jsap/./src/BasePlugin/parameters/ButtonParameter.ts","webpack://jsap/./src/BasePlugin/parameters/IPluginParameter.ts","webpack://jsap/./src/BasePlugin/parameters/ListParameter.ts","webpack://jsap/./src/BasePlugin/parameters/NumberParameter.ts","webpack://jsap/./src/BasePlugin/parameters/ParameterAutomation.ts","webpack://jsap/./src/BasePlugin/parameters/PluginParameter.ts","webpack://jsap/./src/BasePlugin/parameters/StringParameter.ts","webpack://jsap/./src/BasePlugin/parameters/SwitchParameter.ts","webpack://jsap/./src/BasePlugin/parameters/URLParameter.ts","webpack://jsap/./src/Factory/AudioPluginChainManager/SubFactoryFeatureSender/index.ts","webpack://jsap/./src/Factory/AudioPluginChainManager/index.ts","webpack://jsap/./src/Factory/Extractors/Extractor.ts","webpack://jsap/./src/Factory/Extractors/OutputNode.ts","webpack://jsap/./src/Factory/Extractors/WorkerExtractor.ts","webpack://jsap/./src/Factory/FeatureMap/index.ts","webpack://jsap/./src/Factory/MidiSynthesisInstance.ts","webpack://jsap/./src/Factory/MidiSynthesiserHost.ts","webpack://jsap/./src/Factory/PluginAssets/PluginAsset.ts","webpack://jsap/./src/Factory/PluginAssets/PluginAssetManager.ts","webpack://jsap/./src/Factory/PluginAssets/PluginAssetsList.ts","webpack://jsap/./src/Factory/PluginAssets/defaultAssetFetch.ts","webpack://jsap/./src/Factory/PluginFactory.ts","webpack://jsap/./src/Factory/PluginInstance.ts","webpack://jsap/./src/Factory/PluginPrototype.ts","webpack://jsap/./src/Factory/PluginUserInterfaceMessageHub.ts","webpack://jsap/./src/LinkedStore.ts","webpack://jsap/./src/SynthesiserBasePlugin/index.ts","webpack://jsap/./src/utility/uniqueMergeArray.ts","webpack://jsap/webpack/bootstrap","webpack://jsap/webpack/runtime/compat get default export","webpack://jsap/webpack/runtime/define property getters","webpack://jsap/webpack/runtime/global","webpack://jsap/webpack/runtime/hasOwnProperty shorthand","webpack://jsap/webpack/runtime/make namespace object","webpack://jsap/./src/index.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;;;;;;;;;ACVA;AACA,IAAI,IAAyD;AAC7D;AACA,MAAM,EAKyB;AAC/B,CAAC;AACD,O;QCVA;QACA;;QAEA;QACA,WAAW,8BAAmB;;QAE9B;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA,kEAAkE,8BAAmB;;QAErF;QACA;;QAEA;QACA;QACA;;;QAGA;QACA,EAAE,8BAAmB;;QAErB;QACA,EAAE,8BAAmB;;QAErB;QACA,EAAE,8BAAmB;QACrB,OAAO,8BAAmB;QAC1B,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA,EAAE,8BAAmB;QACrB;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA,EAAE,8BAAmB;QACrB,wBAAwB,8BAAmB;QAC3C;QACA;QACA;QACA,GAAG,8BAAmB;QACtB,yCAAyC,iCAAiC;QAC1E,kEAAkE,8BAAmB,2BAA2B,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA,EAAE,8BAAmB;QACrB;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD,GAAG,8BAAmB;QACtB;QACA;;QAEA;QACA,EAAE,8BAAmB,iCAAiC,+DAA+D;;QAErH;QACA,EAAE,8BAAmB;;;QAGrB;QACA,SAAS,8BAAmB,CAAC,8BAAmB;;;;;;;;;;;;;AClFhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACO;AACP;AACA;;;AAGA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,sBAAsB,WAAW;AACjC;AACA;;AAEA;AACA;AACA;AACA,uBAAuB,UAAU;AACjC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B,8BAA8B,kBAAkB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,QAAQ;AAC3B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B,gCAAgC;AAChC;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;;AAEA,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,eAAe,OAAO;AACtB;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,kBAAkB;AACrC;AACA;AACA;;;AAGA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO,OAAO;AAC7B;AACA;AACA;AACA;;;;;;;;;;;;;AC9OA;AAAA;AAAA;AAAA;AAC0D;;AAEnD;AACP,SAAS,gFAAmB;AAC5B;AACA;AACA;AACA;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AChBA;AAAA;AAAA;AAAA;AAC0D;AACnD;AACP,SAAS,gFAAmB,QAAQ,gFAAmB;AACvD;AACA;AACA;AACA;AACA;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;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,yBAAyB;AAC5C;AACA,uBAAuB,wBAAwB;AAC/C;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACrBA;AAAA;AAAA;AAAA;AAAA;AAC0D;AACrB;;AAE9B;AACP,SAAS,gFAAmB;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B;AACA;AACA,IAAI,0DAAS;AACb,uBAAuB,uBAAuB;AAC9C;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACrCA;AAAA;AAAA;AAAA;AACgF;;AAEhF;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA;AACA;;AAEO;AACP,SAAS,sGAA8B;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC/DA;AAAA;AAAA;AAAA;AAAA;AAAA;AAC0D;AACN;AACV;;AAEnC;AACP,SAAS,gFAAmB;AAC5B;AACA;AACA,cAAc,0EAAgB;AAC9B;AACA;AACA,eAAe,gEAAW;AAC1B;AACA;AACA;;;;;;;;;;;;;ACfA;AAAA;AAAA;AAAA;AAC0D;;AAEnD;AACP,SAAS,gFAAmB;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT,KAAK;AACL,uBAAuB,OAAO;AAC9B;AACA,2BAA2B,OAAO;AAClC;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACxBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAC0D;AACR;AACE;;AAE7C;AACP,SAAS,gFAAmB;AAC5B;AACA;AACA;AACA,cAAc,wEAAe;AAC7B;AACA;AACA,gBAAgB,0EAAgB;AAChC;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT,KAAK;AACL,uBAAuB,OAAO;AAC9B,2BAA2B,OAAO;AAClC;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC5BA;AAAA;AAAA;AAAA;AAAA;AAC0D;AACE;;AAErD;AACP,SAAS,gFAAmB;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B;AACA,kBAAkB,kFAAoB;AACtC;AACA;AACA;AACA;;;;;;;;;;;;;AC3BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAC0D;AACJ;AACF;AACI;;AAExD;AACA;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA;AACA;;AAEO;AACP,SAAS,gFAAmB;AAC5B;AACA;AACA;AACA;AACA,kBAAkB,4EAAiB;AACnC;AACA;AACA;;AAEA;AACA;AACA;;AAEA,gBAAgB,0EAAgB;AAChC;AACA;;AAEA,cAAc,8EAAkB;;AAEhC;AACA;AACA,KAAK;;AAEL;AACA,qBAAqB,SAAS;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AChDA;AAAA;AAAA;AAAA;AACsC;;AAE/B;AACP,WAAW,4DAAS;AACpB;;;;;;;;;;;;;ACLA;AAAA;AAAA;AAAA;AAC0D;;AAEnD;AACP,SAAS,gFAAmB;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;AC3BA;AAAA;AAAA;AAAA;AAAA;AAC0D;AACR;;AAE3C;AACP,SAAS,gFAAmB;AAC5B;AACA;AACA,mBAAmB,wEAAe;AAClC;AACA;AACA;;;;;;;;;;;;;ACXA;AAAA;AAAA;AAAA;AAAA;AAAA;AACgF;AACtB;AACgB;;AAEnE;AACP;AACA;AACA;AACA,SAAS,sGAA8B;AACvC;AACA;AACA,SAAS,sGAA8B;AACvC;AACA;AACA,SAAS,gFAAmB;AAC5B;AACA;AACA,SAAS,gFAAmB;AAC5B;AACA;AACA,SAAS,sGAA8B;AACvC;AACA;AACA,YAAY,gGAA2B;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACrCA;AAAA;AAAA;AAAA;AAAA;AAC0D;AACsB;;AAEzE;AACP;AACA;AACA;AACA;AACA,aAAa,gFAAmB;AAChC;AACA;AACA,aAAa,sGAA8B;AAC3C;AACA;AACA,aAAa,sGAA8B;AAC3C;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B;AACA;AACA;AACA,2BAA2B,4CAA4C;AACvE;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,+BAA+B,sBAAsB;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC9CA;AAAA;AAAA;AAAA;AAC0D;AACnD;AACP,SAAS,gFAAmB;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACVA;AAAA;AAAA;AAAA;AAC0D;;AAEnD;AACP,SAAS,gFAAmB;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACtCA;AAAA;AAAA;AAAA;AAAA;AAC0D;AACV;;AAEzC;AACP,SAAS,gFAAmB;AAC5B;AACA;AACA;AACA;AACA,WAAW,sEAAc;AACzB;;;;;;;;;;;;;ACXA;AAAA;AAAA;AAAA;AAC0D;;AAE1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEO;AACP,SAAS,gFAAmB;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;;;;;;;;;;;;ACpDA;AAAA;AAAA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACXA;AAAA;AAAA;AAAA;AACoD;AAC7C;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB,eAAe;AACf,iDAAiD;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,QAAQ;AACvB;AACA;AACA,gDAAgD;AAChD,eAAe,YAAY;AAC3B;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,WAAW;AAC1B;AACA,mBAAmB,QAAQ;AAC3B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B;AACA;AACA,mBAAmB,OAAO;AAC1B,uBAAuB,OAAO;AAC9B;AACA;AACA;AACA;AACA;AACA,2CAA2C,kEAAgB;AAC3D,eAAe,WAAW;AAC1B,mBAAmB,QAAQ;AAC3B;AACA;AACA;AACA;AACA,mBAAmB,WAAW;AAC9B,uBAAuB,QAAQ;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AClGA;AAAA;AAAA;AACO;AACP;AACA;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B;AACA,uBAAuB,OAAO;AAC9B;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACbA;AAAA;AAAA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,WAAW;AAC9B;AACA;AACA;AACA,uBAAuB,OAAO;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACnBA;AAAA;AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAe,sBAAsB;AACrC;AACA;AACA;AACA;AACA;;AAEA,eAAe,gBAAgB;AAC/B;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,gBAAgB;AAC/B;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,kBAAkB;AAChC;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,uCAAuC,iBAAiB;AACxD;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACzFA;AAAA;AAAA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACtBA;AAAA;AAAA;AACO;AACP;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACNA;AAAA;AAAA;AAAA;AAC0D;AACnD;AACP,SAAS,gFAAmB;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,WAAW;AAC9B;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACfA;AAAA;AAAA;AAAA;AAC0D;;AAEnD;AACP,SAAS,gFAAmB;AAC5B;AACA;AACA;AACA;AACA;AACA,mBAAmB,WAAW;AAC9B;AACA;AACA;AACA;;;;;;;;;;;;;ACdA;AAAA;AAAA;AACO;AACP;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACNA;AAAA;AAAA;AAAA;AACoE;;AAE7D;AACP,WAAW,0FAAwB;AACnC;;;;;;;;;;;;;ACLA;AAAA;AAAA;AAAA;AAC0D;AACnD;AACP,SAAS,gFAAmB;AAC5B;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL,uBAAuB,2BAA2B;AAClD;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AChBA;AAAA;AAAA;AAAA;AAAA;AAC0D;AACV;;AAEzC;AACP,SAAS,gFAAmB;AAC5B;AACA;AACA;AACA;AACA,WAAW,sEAAc;AACzB;;;;;;;;;;;;;ACXA;AAAA;AAAA;AACO;AACP;AACA;AACA;AACA;AACA,mBAAmB,iBAAiB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACfA;AAAA;AAAA;AAAA;AAC0D;;AAEnD;AACP,SAAS,gFAAmB;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,mBAAmB,OAAO;AAC1B;AACA,uBAAuB,OAAO;AAC9B;AACA;AACA;AACA;;AAEA;AACA,uBAAuB,cAAc;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;;;;;;;;;;;;ACrCA;AAAA;AAAA;AAAA;AAC0D;;AAEnD;AACP,SAAS,gFAAmB;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,yBAAyB;AAC5C;AACA,uBAAuB,OAAO;AAC9B;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,2BAA2B,iBAAiB;AAC5C;AACA,qCAAqC,OAAO;AAC5C;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;;;;;;;;;;;;AClCA;AAAA;AAAA;AAAA;AAAA;AAC0D;AACN;AAC7C;AACP,SAAS,gFAAmB;AAC5B;AACA,WAAW,0EAAgB;AAC3B;;;;;;;;;;;;;ACPA;AAAA;AAAA;AAAA;AAAA;AAC0D;AAClB;AACjC;AACP,SAAS,gFAAmB;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,mBAAmB;AAC1C;AACA;AACA;AACA,KAAK;AACL,WAAW,8DAAU;AACrB;;;;;;;;;;;;;AC1BA;AAAA;AAAA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACVA;AAAA;AAAA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACRA;AAAA;AAAA;AAAA;AAC0D;AACnD;AACP,SAAS,gFAAmB;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,mBAAmB,iBAAiB;AACpC;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACpBA;AAAA;AAAA;AAAA;AAC0D;;AAEnD;AACP,SAAS,gFAAmB;AAC5B;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACnCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACqC;AAC2B;AACN;AACM;;AAEhE;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B,mBAAmB,eAAe;AAClC;AACA;AACA;AACA,QAAQ,0DAAS;AACjB,eAAe,sFAAsB;AACrC;AACA;AACA;;AAEO;;AAEP,SAAS,gFAAmB;AAC5B;AACA;AACA;AACA;AACA,iBAAiB,sFAAsB;AACvC;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,OAAO;AAC1B;AACA;AACA,mBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAe,OAAO;AACtB;AACA;AACA;AACA;;;;;;;;;;;;;ACvFA;AAAA;AAAA;AAAA;AAAA;AAC0D;AACR;AAC3C;AACP,SAAS,gFAAmB;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,wEAAe;AAC3B;AACA;AACA;AACA,mBAAmB,iBAAiB;AACpC;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACpBA;AAAA;AAAA;AAAA;AAAA;AAC0D;AACN;;AAE7C;AACP,SAAS,gFAAmB;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,0EAAgB;AAC1B;AACA,mBAAmB,WAAW;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC9CA;AAAA;AAAA;AACO;AACP;AACA;;;;;;;;;;;;;ACHA;AAAA;AAAA;AAAA;AAAA;AACgE;AACd;AAC3C;AACP,iBAAiB,sFAAsB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,oBAAoB;AACxC;AACA;AACA,4BAA4B,wEAAe;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACxCA;AAAA;AAAA;AAAA;AAAA;AAAA;AACuD;AACS;AACN;;AAE1D;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAAS;AACxB;AACA;AACA,yBAAyB,OAAO;AAChC;AACA;AACA,IAAI,iEAAgB;AACpB;AACA,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,cAAc;AACjC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI,0DAAS;AACb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;;AAEA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA,aAAa,sFAAsB;AACnC,aAAa,sFAAsB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,eAAe;AAC9B,mBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,0DAAS;AACjB,mBAAmB,QAAQ;AAC3B;AACA;AACA;AACA,QAAQ,0DAAS;AACjB;AACA,mBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP,SAAS,gFAAmB;AAC5B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC5KA;AAAA;AAAA;AAAA;AAC0D;;AAEnD;AACP,SAAS,gFAAmB;AAC5B;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL,uBAAuB,sBAAsB;AAC7C;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACjBA;AAAA;AAAA;AAAA;AAAA;AAC0D;AACN;;AAE7C;AACP,SAAS,gFAAmB;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,YAAY,0EAAgB;;AAE5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC3BA;AAAA;AAAA;AAAA;AAC0D;;AAEnD;AACP,SAAS,gFAAmB;AAC5B;AACA;;AAEA;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AClBA;AAAA;AAAA;AAAA;AACoE;AAC7D;AACP,WAAW,0FAAwB;AACnC;;;;;;;;;;;;;ACJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAC0D;AAChB;AAC4B;AACpB;;AAE3C;AACP,SAAS,gFAAmB;AAC5B;AACA;AACA,eAAe,gEAAW;AAC1B;AACA;AACA,6BAA6B,4FAAyB,QAAQ,wEAAe;AAC7E;AACA;AACA;AACA;AACA;AACA,mBAAmB,kBAAkB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC1BA;AAAA;AAAA;AAAA;AAC0D;;AAEnD;AACP,SAAS,gFAAmB;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,WAAW;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACrBA;AAAA;AAAA;AAAA;AAAA;AAC0D;AACN;AAC7C;AACP,SAAS,gFAAmB;AAC5B;AACA;AACA;AACA;AACA;AACA,cAAc,0EAAgB;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACnBA;AAAA;AAAA;AAAA;AAAA;AAC0D;AACX;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,oBAAoB;AACxC;AACA;AACA,yBAAyB,gBAAgB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA,SAAS,gFAAmB;AAC5B;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA;;AAEA;AACA;AACA,IAAI,oEAAgB;AACpB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;AC7DA;AAAA;AAAA;AAAA;AAC0D;;AAEnD;AACP,SAAS,gFAAmB;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC1BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAC0D;AACU;AACoB;AACpB;AAChB;;AAE7C;AACP,SAAS,gFAAmB;AAC5B;AACA;AACA,4BAA4B,0FAAwB;AACpD;AACA;AACA,sCAAsC,8GAAkC,WAAW,0FAAwB;AAC3G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,0EAAgB;AAC9B,mBAAmB,OAAO;AAC1B;AACA;AACA;AACA;;;;;;;;;;;;;AC7BA;AAAA;AAAA;AAAA;AAAA;AAC0D;AACN;;AAE7C;AACP,SAAS,gFAAmB;AAC5B;AACA;AACA;AACA;AACA,cAAc,0EAAgB;AAC9B;AACA;AACA;;;;;;;;;;;;;ACbA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAC0D;AACU;AACoB;AACpB;AAChB;;AAE7C;AACP,SAAS,gFAAmB;AAC5B;AACA;AACA,4BAA4B,0FAAwB;AACpD;AACA;AACA,sCAAsC,8GAAkC,WAAW,0FAAwB;AAC3G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,0EAAgB;AAC9B,mBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC9BA;AAAA;AAAA;AAAA;AAAA;AAC0D;AACN;;AAE7C;AACP,SAAS,gFAAmB;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,0EAAgB;AACxB,QAAQ,0EAAgB;AACxB,mBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACtBA;AAAA;AAAA;AAAA;AACoE;AAC7D;AACP,WAAW,0FAAwB;AACnC;;;;;;;;;;;;;ACJA;AAAA;AAAA;AAAA;AAAA;AAC0D;AACU;AAC7D;AACP,SAAS,gFAAmB;AAC5B;AACA;AACA,4BAA4B,0FAAwB;AACpD;AACA;AACA;;;;;;;;;;;;;ACVA;AAAA;AAAA;AAAA;AAAA;AAAA;AAC0D;AACU;AAChB;AAC7C;AACP,SAAS,gFAAmB;AAC5B;AACA;AACA,4BAA4B,0FAAwB;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,0EAAgB;AAC9B;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACrBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAC0D;AACM;AAC3B;;AAE9B;AACP;AACA;AACA;AACA;AACA,KAAK;AACL,SAAS,gFAAmB;AAC5B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,IAAI,0DAAS;AACb,uBAAuB,wBAAwB;AAC/C;AACA;AACA;AACA;AACA,eAAe,sFAAsB;AACrC;AACA;AACA;;;;;;;;;;;;;AC3CA;AAAA;AAAA;AAAA;AAAA;AAC0D;AACR;AAC3C;AACP,SAAS,gFAAmB;AAC5B;AACA;AACA,mBAAmB,wEAAe;AAClC;AACA;AACA;;;;;;;;;;;;;ACVA;AAAA;AAAA;AAAA;AAAA;AAC0D;AACN;;AAE7C;AACP,SAAS,gFAAmB;AAC5B;AACA,WAAW,0EAAgB;AAC3B;;;;;;;;;;;;;ACRA;AAAA;AAAA;AAAA;AACoD;AAC7C;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,0EAAgB;AAC9B;AACA,mBAAmB,wBAAwB;AAC3C;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACvBA;AAAA;AAAA;AAAA;AAAA;AAC0D;AACF;;AAEjD;AACP,SAAS,gFAAmB;AAC5B;AACA;AACA,sBAAsB,8EAAkB;AACxC;AACA;AACA;;;;;;;;;;;;;ACXA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAC0D;AACnD;AACP;AACA,SAAS,gFAAmB;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,mBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;;AAEO;AACP;AACA;;AAEO;AACP;AACA;;;;;;;;;;;;;AC9CA;AAAA;AAAA;AAAA;AAAA;AAC0D;AAChB;;AAEnC;AACP,SAAS,gFAAmB;AAC5B;AACA;AACA,eAAe,gEAAW;AAC1B;AACA,SAAS,gFAAmB;AAC5B;AACA;AACA,eAAe,gEAAW;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL,uBAAuB,kBAAkB;AACzC;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC5BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAC0D;AACN;AACV;;AAEnC,iEAAiE;AACxE,SAAS,gFAAmB;AAC5B;AACA;AACA;AACA;AACA,QAAQ,0EAAgB;AACxB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B;AACA;AACA;AACA;;AAEA;AACA,wCAAwC;AACxC,oCAAoC;AACpC;AACA;;AAEA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB,uBAAuB,cAAc;AACrC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,uBAAuB,YAAY;AACnC,2BAA2B,OAAO;AAClC;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,YAAY;AACnC,2BAA2B,OAAO;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,uBAAuB,cAAc;AACrC;AACA,gCAAgC,YAAY;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,4BAA4B,YAAY;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,kBAAkB;AACzC;AACA;AACA,SAAS;AACT;AACA;;AAEA,6DAA6D;AAC7D;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe,iBAAiB;AAChC;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,eAAe,gEAAW;AAC1B;;AAEA;AACA;AACA;AACA;AACA,mBAAmB,iBAAiB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;ACtXA;AAAA;AAAA;AAAA;AAC0D;;AAEnD;AACP;AACA,SAAS,gFAAmB;AAC5B;AACA;AACA;AACA;;AAEA;AACA,qBAAqB,SAAS;AAC9B;AACA,uBAAuB,aAAa;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACtBA;AAAA;AAAA;AAAA;AAC0D;AACnD;AACP,SAAS,gFAAmB;AAC5B;AACA;AACA,mBAAmB,sBAAsB;AACzwC;AAGC;AAGW;AAGd;AAGC;AAGD;AAGA;AAGE;AAGI;AAGJ;AAGI;AAGE;AAGG;AAGL;AAGG;AAGL;AAGG;AAGZ;AAGa;AAGT;AAGU;AAGD;AAGA;AAGT;AAGA;AAGS;AAGJ;AAGI;AAGF;AAGY;AAGV;AAGA;AAGH;AAGA;AAMH;AAGD;AAGP;AAGI;AAGC;AAGA;AAGG;AAGH;AAGH;AAGI;AAGI;AAGS;AAGjB;AAGS;AAGL;AAGK;AAGP;AAGK;AAGC;AAGV;AAGU;AAGV;AAGD;AAGS;AAGD;AAGF;AAGY;AAGd;AAGE;AAGQ;AAGZ;AAGD;AAGE;AAGU;AAGX;AAGA;AAGa;AAGJ;AAGI;AAGd;AAGC;AAGD;AAGA;AAGE;AAGG;AAGA;AAGA;AAGC;AAGG;AAGJ;AAGC;AAGE;AAGC;AAGC;AAGP;;AAIK;AAGJ;AAGJ;AAGJ;;;AAG5B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,2DAAQ;AACxC,oCAAoC,mEAAY;AAChD;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,uBAAuB,kBAAkB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4BAA4B;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,OAAO;AAClC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAiB,gHAA8B;AAC/C;AACA;AACA,iBAAiB,gHAA8B;AAC/C;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,uBAAuB,2BAA2B;AAClD;AACA;AACA,2BAA2B,OAAO;AAClC,gCAAgC,2DAAQ;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,eAAe,2GAA2B;AAC1C;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAiB,gHAA8B;AAC/C;AACA;AACA,iBAAiB,gHAA8B;AAC/C;AACA;AACA,iBAAiB,gHAA8B;AAC/C;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAoGE;;;;;;;;;;;;;ACjhBF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAE6D;AACE;AACA;AACI;;AAEnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA,YAAY,SAAI;AAChB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,sBAAsB,kFAAe;AACrC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,YAAY,SAAI;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,oFAAgB;AACzC;AACA;AACA;AACA;AACA;;AAEA;AACA,YAAY,SAAI;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,oFAAgB;AACzC;AACA;AACA;AACA;AACA;;;AAGA;AACA,YAAY,SAAI;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,wFAAkB;AAC3C;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;;AAEO;AACP;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;;;;;;;;;;;;;ACtHA;AAAA;AAAA;AAAA;AAAA;AACuE;AACwD;;AAE/H;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,+BAA+B,SAAS;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,OAAO;AAC9B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,iBAAiB;AACjB,4CAA4C,4FAAoB;AAChE,iBAAiB;AACjB;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,eAAe,2EAAqB;AACpC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,4EAAsB;AACrC;;AAEA;AACA;AACA;AACA;AACA,eAAe,4EAAsB;AACrC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,8EAAwB;AACvC;AACA;;;;;;;;;;;;;AC/KA;AAAA;AAAA;AAAA;AAAA;AAAA;AACoD;AACqB;AACV;;AAExD,mCAAmC,kEAAgB;AAC1D;AACA;AACA;AACA;AACA;AACA,yCAAyC,8FAAqB;AAC9D;AACA;AACA;;AAEA;AACA,mCAAmC,kEAAgB;AACnD;AACA,SAAS;AACT,oCAAoC,oFAAgB;AACpD;AACA;AACA;AACA;;AAEA,0CAA0C,kEAAgB;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACzCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAC4C;AACgB;AAC6B;AACV;;;AAGxE,+BAA+B,0DAAY;AAClD;AACA;AACA,iDAAiD,8GAA6B;AAC9E;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,gDAAgD,0EAAoB;AACpE,qBAAqB,oGAAwB;AAC7C;AACA;AACA;AACA;AACA;;AAEA,sCAAsC,0DAAY;AAClD;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,CAAC;;;;;;;;;;;;;AChDD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAC8C;AACM;AACW;AACA;AACA;AACA;AACgB;AACR;AACQ;AACJ;AACwB;AACpB;AACA;AACN;AACA;AACwC;AAChD;AACN;AACE;AACE;AACF;AACM;AACN;AACN;AACkB;AACY;AACd;AACpB;AACE;AACE;AACwB;AACtB;AACc;;AAEhE,2BAA2B,4DAAa;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,uBAAuB,kBAAkB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,oFAAgB;AAC7C;;AAEA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,kCAAkC,oFAAgB;AAClD;AACA;AACA;;AAEA;AACA;AACA,kCAAkC,oFAAgB;AAClD;AACA;AACA;;AAEA;AACA;AACA,8BAA8B,oFAAgB;AAC9C;AACA;AACA;;AAEA;AACA;AACA,4CAA4C,oGAAwB;AACpE;AACA;AACA;;AAEA;AACA;AACA,wCAAwC,4FAAoB;AAC5D;AACA;AACA;;AAEA;AACA;AACA,4CAA4C,oGAAwB;AACpE;AACA;AACA;;AAEA;AACA;AACA,0CAA0C,gGAAsB;AAChE;AACA;AACA;;AAEA;AACA;AACA,sDAAsD,yHAAkC;AACxF;AACA;AACA;;AAEA;AACA;AACA,4CAA4C,qGAAwB;AACpE;AACA;AACA;;AAEA;AACA;AACA,4CAA4C,qGAAwB;AACpE;AACA;AACA;;AAEA;AACA;AACA,yCAAyC,+FAAqB;AAC9D;AACA;AACA;;AAEA;AACA;AACA,yCAAyC,+FAAqB;AAC9D;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,wCAAwC,2FAAoB;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,2FAAoB;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,2FAAoB;AAC5D;AACA;AACA;;AAEA;AACA;AACA,qCAAqC,uFAAiB;AACtD;AACA;AACA;;AAEA;AACA;AACA,kCAAkC,iFAAc;AAChD;AACA;AACA;;AAEA;AACA;AACA,mCAAmC,mFAAe;AAClD;AACA;AACA;;AAEA;AACA;AACA,oCAAoC,qFAAgB;AACpD;AACA;AACA;;AAEA;AACA;AACA,mCAAmC,mFAAe;AAClD;AACA;AACA;;AAEA;AACA;AACA,sCAAsC,yFAAkB;AACxD;AACA;AACA;;AAEA;AACA;AACA,mCAAmC,mFAAe;AAClD;AACA;AACA;;AAEA;AACA;AACA,gDAAgD,6EAAY;AAC5D;AACA;AACA;;AAEA;AACA;AACA,yCAAyC,+FAAqB;AAC9D;AACA;AACA;;AAEA;AACA;AACA,+CAA+C,2GAA2B;AAC1E;AACA;AACA;AACA;;AAEA;AACA;AACA,wCAAwC,6FAAoB;AAC5D;AACA;AACA;;AAEA;AACA;AACA,8BAA8B,yEAAU;AACxC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,+BAA+B,2EAAW;AAC1C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,8BAA8B,6EAAY;AAC1C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,4CAA4C,qGAAwB;AACpE;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iCAAiC,+EAAa;AAC9C;AACA;AACA;;AAEA;AACA;AACA,4CAA4C,kEAAgB;AAC5D,qBAAqB,6FAAoB;AACzC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,CAAC;;;;;;;;;;;;;AC3nBD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAC8C;AACF;AACyB;AACN;AACA;AACA;AACV;AAC0B;AAClB;AACoB;AACF;AAClB;AACA;AACV;AACI;AACgB;AACF;AACE;AACN;AACR;AACI;AACN;AACoB;AACtB;AACA;AACF;AACI;AACM;;AAEtD,uBAAuB,4DAAa;AAC3C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;;AAEA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA,wBAAwB,0FAAmB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,gBAAgB;AACvC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,kCAAkC,oFAAgB;AAClD;AACA;AACA;;AAEA;AACA;AACA,kCAAkC,oFAAgB;AAClD;AACA;AACA;;AAEA;AACA;AACA,8BAA8B,oFAAgB;AAC9C;AACA;AACA;;AAEA;AACA;AACA,+BAA+B,0EAAW;AAC1C;AACA;AACA;;AAEA;AACA;AACA;AACA,4CAA4C,oGAAwB;AACpE;AACA;AACA;;AAEA;AACA;AACA,mCAAmC,kFAAe;AAClD;AACA;AACA;;AAEA;AACA;AACA,6CAA6C,sGAAyB;AACtE;AACA;AACA;;AAEA;AACA;AACA,4CAA4C,qGAAwB;AACpE;AACA;AACA;;AAEA;AACA;AACA,mCAAmC,mFAAe;AAClD;AACA;AACA;;AAEA;AACA;AACA,mCAAmC,mFAAe;AAClD;AACA;AACA;;AAEA;AACA;AACA,8BAA8B,yEAAU;AACxC;AACA;AACA;;AAEA;AACA;AACA,uCAAuC,6EAAY;AACnD;AACA;AACA;;AAEA;AACA;AACA,wCAAwC,6FAAoB;AAC5D;AACA;AACA;;AAEA;AACA;AACA,uCAAuC,2FAAmB;AAC1D;AACA;AACA;;AAEA;AACA;AACA,wCAAwC,6FAAoB;AAC5D;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,6BAA6B,uFAAiB;AAC9C;AACA;AACA;;AAEA;AACA;AACA;AACA,wBAAwB,+EAAa;AACrC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,wBAAwB,mFAAe;AACvC,uCAAuC,0DAAY;AACnD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,8BAA8B,6EAAY;AAC1C;AACA;AACA;;AAEA;AACA;AACA,0CAA0C,iGAAsB;AAChE;AACA;AACA;;AAEA;AACA;AACA,+BAA+B,2EAAW;AAC1C;AACA;AACA;;AAEA;AACA;AACA,+BAA+B,2EAAW;AAC1C;AACA;AACA;;AAEA;AACA;AACA,8BAA8B,yEAAU;AACxC;AACA;AACA;;AAEA;AACA;AACA;AACA,wBAAwB,6EAAY;AACpC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,mFAAe;AACvC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AAC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CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;AC9BA;AAC+D;AACA;AACA;AACA;AACJ;AACF;AACI;AAC8B;AAC3F;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,UAAU,GAAG,sBAAsB;AAC1E;AACA;AACA,4EAA4E,iBAAiB;AAC7F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,wEAAe;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,wEAAe;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,wEAAe;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,wEAAe;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,oEAAa;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,kEAAY;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,sEAAc;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,qEAAqE,OAAO,GAAG,cAAc;AAC7F;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,+EAAiB;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,qFAAuB;AACpD;AACA;AACA;AACA,6BAA6B,+EAAiB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,+EAAiB;AACtC;AACA;AACA;AACA,SAAS,IAAI;AACb;AACA,sBAAsB,oCAAoC;AAC1D,yBAAyB,kCAAkC;AAC3D;;;;;;;;;;;;;;;;ACzSA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA,uBAAuB,wBAAwB;AAC/C;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,wBAAwB;AAC9C,0BAA0B,wBAAwB;AAClD;;;;;;;;;;;;;;;;;AC7DiE;AAC1D;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,sEAAU;AAC1D;AACA,wBAAwB,2BAA2B;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;;;;;;;;;;;;;;;;;ACrCkF;AACJ;AACvE;AACP;AACA;AACA,4BAA4B,2FAA8B;AAC1D,0BAA0B,uFAA4B;AACtD;AACA,sBAAsB,iCAAiC;AACvD,0BAA0B,iCAAiC;AAC3D;;;;;;;;;;;;;;;;;ACV8F;AACvF;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,+EAAiB;AACjC;AACA;AACA,oBAAoB,wFAA0B;AAC9C;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,+EAAiB;AACjC;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,+EAAiB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,wFAA0B;AAClD,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;AClLA;AACA;AACA;AACA;AACsD;AACkB;AACA;AAC3B;AACiB;AACpC;AAC1B;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,iFAAyB;AAC9D;AACA,8BAA8B,iFAAsB;AACpD,8BAA8B,+DAAgB;AAC9C,8BAA8B,qDAAW;AACzC,wCAAwC,uEAAoB;AAC5D,qCAAqC,uEAAoB;AACzD,sCAAsC,uEAAoB;AAC1D,uCAAuC,uEAAoB;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA,4EAA4E,mBAAmB;AAC/F,SAAS;AACT;AACA,aAAa;AACb,cAAc;AACd,gBAAgB;AAChB,kBAAkB;AAClB,mBAAmB;AACnB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,uBAAuB;AACxC,kBAAkB,wBAAwB;AAC1C,yBAAyB,4CAA4C;AACrE,8BAA8B,iDAAiD;AAC/E,0BAA0B,6CAA6C;AACvE,8DAA8D,0EAA0E;AACxI,qDAAqD,wEAAwE;AAC7H;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,wCAAE;AACjB;AACA;AACA;AACA,SAAS;AACT;AACA,iBAAiB,yBAAyB;AAC1C,qBAAqB,8BAA8B;AACnD,sBAAsB,+BAA+B;AACrD,yBAAyB,sCAAsC;AAC/D,kBAAkB,uBAAuB;AACzC,mBAAmB,wBAAwB;AAC3C,oCAAoC,0BAA0B;AAC9D,2CAA2C,2CAA2C;AACtF,oCAAoC,4DAA4D;AAChG,2CAA2C,2CAA2C;AACtF,qBAAqB,QAAQ,kFAAkF;AAC/G;;;;;;;;;;;;;;;;;;ACvKqE;AACjB;AAC7C,6BAA6B,6DAAe;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,yBAAyB,0EAAW;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;AChHoD;AACpD;AACO,8BAA8B,6DAAe;AACpD;AACA;AACA,sCAAsC;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;AC1BO;AACP;AACA;AACO;AACP;AACA;AACO;AACP;AACA;AACO;AACP;AACA;;;;;;;;;;;;;;;;;;ACXA;AACoD;AACY;AACzD,4BAA4B,6DAAe;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,UAAU;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,yEAAuB;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;AChKA;AACoD;AACc;AAC3D,8BAA8B,6DAAe;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,2EAAyB;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,uBAAuB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,4BAA4B;AACvD,uBAAuB,sCAAsC;AAC7D,4BAA4B,wBAAwB;AACpD,mBAAmB,QAAQ,+EAA+E;AAC1G;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;AC5HA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sEAAsE,qBAAqB;AAC3F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;AC9PO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;AC/FoD;AAC7C,8BAA8B,6DAAe;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,eAAe;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,wBAAwB;AAC1C,2BAA2B,4BAA4B;AACvD;;;;;;;;;;;;;;;;;;ACpEA;AACoD;AACY;AACzD,8BAA8B,6DAAe;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,yEAAuB;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,wBAAwB;AAC1C,2BAA2B,4BAA4B;AACvD,uBAAuB,sCAAsC;AAC7D,4BAA4B,wBAAwB;AACpD,mBAAmB,QAAQ,+EAA+E;AAC1G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACzGoD;AAC7C,2BAA2B,6DAAe;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,kDAAkD,eAAe;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,oBAAoB;AACrC;AACA,kBAAkB,kBAAkB;AACpC;;;;;;;;;;;;;;;;;AC5EA;AACyD;AAClD;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,8DAAU;AAC1D;AACA,wBAAwB,2BAA2B;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,eAAe;AACf;;;;;;;;;;;;;;;;;;AC7CA,iBAAiB,SAAI,IAAI,SAAI;AAC7B,2BAA2B,+DAA+D,gBAAgB,EAAE,EAAE;AAC9G;AACA,mCAAmC,MAAM,6BAA6B,EAAE,YAAY,WAAW,EAAE;AACjG,kCAAkC,MAAM,iCAAiC,EAAE,YAAY,WAAW,EAAE;AACpG,+BAA+B,qFAAqF;AACpH;AACA,KAAK;AACL;AACA;AACgD;AAC0B;AAC1E;AACA;AACA;AACA;AACA,CAAC,oEAAoE;AAC9D;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,mFAAuB;AACxD;AACA;AACA;AACA,6BAA6B,qDAAW;AACxuBAAuB,OAAO;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,uCAAuC;AAC9D,oBAAoB,oCAAoC;AACxD,oCAAoC,uCAAuC;AAC3E,oCAAoC,8EAA8E;AAClH;;;;;;;;;;;;;;;;;;AC7RqC;AAC9B;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,+CAAQ;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,2BAA2B;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,2EAA2E;AAC1G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,sBAAsB;AAC3C;;;;;;;;;;;;;;;;;;AC3FwC;AACY;AAC7C;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,6DAAe;AACrC;AACA;AACA,sBAAsB,iDAAS;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACtCO;AACP;AACA;AACA;AACA,0DAA0D,iBAAiB;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,oCAAoC;AACvD;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,aAAa;AAClD;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,sBAAsB;AAC3C;;;;;;;;;;;;;;;;;AChEkE;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,2EAAgB;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,2EAAgB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,2EAAgqFAAqF;AACrF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;ACxNA;AACuE;AAChE;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,kCAAkC;AAC7D,6BAA6B,oCAAoC;AACjE;AACO;AACP,kCAAkC,+EAAqB;AACvD;;;;;;;;;;;;;;;;;ACjBA;AACA,iBAAiB,SAAI,IAAI,SAAI;AAC7B,2BAA2B,+DAA+D,gBAAgB,EAAE,EAAE;AAC9G;AACA,mCAAmC,MAAM,6BAA6B,EAAE,YAAY,WAAW,EAAE;AACjG,kCAAkC,MAAM,iCAAiC,EAAE,YAAY,WAAW,EAAE;AACpG,+BAA+B,qFAAqF;AACpH;AACA,KAAK;AACL;AAC6C;AACtC;AACP;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,qDAAW;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,2BAA2B,2BAA2B;AACtD;;;;;;;;;;;;;;;;AC9LA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,2BAA2B;AAC1C,uBAAuB,yBAAyB;AAChD;AACA;AACA;AACA;AACuB;;;;;;;;;;;;;;;;;;ACpEvB;AACA;AACA,iBAAiB,SAAI,IAAI,SAAI;AAC7B,2BAA2B,+DAA+D,gBAAgB,EAAE,EAAE;AAC9G;AACA,mCAAmC,MAAM,6BAA6B,EAAE,YAAY,WAAW,EAAE;AACjG,kCAAkC,MAAM,iCAAiC,EAAE,YAAY,WAAW,EAAE;AACpG,+BAA+B,qFAAqF;AACpH;AACA,KAAK;AACL;AACsD;AACQ;AAC9D;AACA;AACA;AACA,KAAK;AACL;AACO;AACP;AACA;AACA,kCAAkC,uEAAuB;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,KAAK;AACnD;AACA,8BAA8B,+DAAgB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,kCAAkC;AACrE;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACxGA;AACA;AAC4C;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,IAAI;AACvC;AACA,mCAAmC,qDAAW;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAC4B;;;;;;;;;;;;;;;;AC5C5B,iBAAiB,SAAI,IAAI,SAAI;AAC7B,2BAA2B,+DAA+D,gBAAgB,EAAE,EAAE;AAC9G;AACA,mCAAmC,MAAM,6BAA6B,EAAE,YAAY,WAAW,EAAE;AACjG,kCAAkC,MAAM,iCAAiC,EAAE,YAAY,WAAW,EAAE;AACpG,+BAA+B,qFAAqF;AACpH;AACA,KAAK;AACL;AACO;AACP;AACA;AACA;AACA,KAAK;AACL;;;;;;;;;;;;;;;;;;;;;;;;;ACdA;AACA;AACA;AACA;AACA;AACA,iBAAiB,SAAI,IAAI,SAAI;AAC7B,2BAA2B,+DAA+D,gBAAgB,EAAE,EAAE;AAC9G;AACA,mCAAmC,MAAM,6BAA6B,EAAE,YAAY,WAAW,EAAE;AACjG,kCAAkC,MAAM,iCAAiC,EAAE,YAAY,WAAW,EAAE;AACpG,+BAA+B,qFAAqF;AACpH;AACA,KAAK;AACL;AAC6C;AAC0B;AACG;AAC1B;AAC0B;AACd;AACoB;AAC5B;AACc;AAC3D;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,yFAA6B;AAC1D;AACA,+BAA+B,qDAAW;AAC1C,4BAA4B,qDAAW;AACvC,8BAA8B,yDAAU;AACxC,gCAAgC,gFAAkB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,qBAAM;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,2CAA2C,6DAAe;AAC1D;AACA;AACA;AACA;AACA,2CAA2C,kEAAoB;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,yBAAyB,mFAAuB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,qEAAmB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,iEAAgB;AAChC;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,qBAAqB,+EAAuB;AAC5C;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,qDAAW;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,0BAA0B;AACrD,yBAAyB,qBAAqB;AAC9C,0BAA0B,kBAAkB;AAC5C,wBAAwB,sCAAsC;AAC9D;;;;;;;;;;;;;;;;;;ACzZA;AACwD;AACxD;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,iBAAiB;AAClC,kBAAkB,kBAAkB;AACpC,oBAAoB,uBAAuB;AAC3C,2BAA2B,kCAAkC;AAC7D,6BAA6B,oCAAoC;AACjE;AACO;AACP,kCAAkC,gEAAW;AAC7C;;;;;;;;;;;;;;;;;;;AC7FA,iBAAiB,SAAI,IAAI,SAAI;AAC7B,2BAA2B,+DAA+D,gBAAgB,EAAE,EAAE;AAC9G;AACA,mCAAmC,MAAM,6BAA6B,EAAE,YAAY,WAAW,EAAE;AACjG,kCAAkC,MAAM,iCAAiC,EAAE,YAAY,WAAW,EAAE;AACpG,+BAA+B,qFAAqF;AACpH;AACA,KAAK;AACL;AACA;AACkD;AACc;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,2DAAc;AAC3C;AACA;AACA,SAAS;AACT;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,yEAAqB;AAClD;AACA;AACA,SAAS;AACT;AACA;;;;;;;;;;;;;;;;AChEA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;;;;;;;;;;;;;;;ACzCA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAA0D,UAAU,2BAA2B,EAAE;AACjG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;AC7HA;AACiD;AAC1C,oCAAoC,yDAAU;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,wBAAwB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,SAAS;AAChC;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;;;;;;;;;;;;;;;;AClFO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;UCbA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA;WACA,gCAAgC,YAAY;WAC5C;WACA,E;;;;;WCPA;WACA;WACA;WACA;WACA,wCAAwC,yCAAyC;WACjF;WACA;WACA,E;;;;;WCPA;WACA;WACA;WACA;WACA,EAAE;WACF;WACA;WACA,CAAC,I;;;;;WCPD,wF;;;;;WCAA;WACA;WACA;WACA,sDAAsD,kBAAkB;WACxE;WACA,+CAA+C,cAAc;WAC7D,E;;;;;;;;;;;;;;;;;;;;;;;ACNA;AACA;AACA;AACA;AACA;AACmC;AACW;AACN;AACC","file":"index.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"jsap\"] = factory();\n\telse\n\t\troot[\"jsap\"] = factory();\n})(this, function() {\nreturn ","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"jsXtract\"] = factory();\n\telse\n\t\troot[\"jsXtract\"] = factory();\n})(this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./modules/index.js\");\n","/*\n * Free FFT and convolution (JavaScript)\n *\n * Copyright (c) 2014 Project Nayuki\n * https://www.nayuki.io/page/free-small-fft-in-multiple-languages\n *\n * (MIT License)\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n * the Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n * - The above copyright notice and this permission notice shall be included in\n *   all copies or substantial portions of the Software.\n * - The Software is provided \"as is\", without warranty of any kind, express or\n *   implied, including but not limited to the warranties of merchantability,\n *   fitness for a particular purpose and noninfringement. In no event shall the\n *   authors or copyright holders be liable for any claim, damages or other\n *   liability, whether in an action of contract, tort or otherwise, arising from,\n *   out of or in connection with the Software or the use or other dealings in the\n *   Software.\n */\n\n\n/*\n * Computes the discrete Fourier transform (DFT) of the given complex vector, storing the result back into the vector.\n * The vector can have any length. This is a wrapper function.\n */\nexport function transform(real, imag) {\n    if (real.length !== imag.length)\n        throw \"Mismatched lengths\";\n\n    var n = real.length;\n    if (n === 0)\n        return;\n    else if ((n & (n - 1)) === 0) // Is power of 2\n        transformRadix2(real, imag);\n    else // More complicated algorithm for arbitrary sizes\n        transformBluestein(real, imag);\n}\n\n\n/*\n * Computes the inverse discrete Fourier transform (IDFT) of the given complex vector, storing the result back into the vector.\n * The vector can have any length. This is a wrapper function. This transform does not perform scaling, so the inverse is not a true inverse.\n */\nexport function inverseTransform(real, imag) {\n    transform(imag, real);\n}\n\n\n/*\n * Computes the discrete Fourier transform (DFT) of the given complex vector, storing the result back into the vector.\n * The vector's length must be a power of 2. Uses the Cooley-Tukey decimation-in-time radix-2 algorithm.\n */\n\nexport function transformRadix2(real, imag) {\n    // Initialization\n    if (real.length !== imag.length)\n        throw \"Mismatched lengths\";\n    var n = real.length;\n    if (n === 1) // Trivial transform\n        return;\n    var levels = calculateNumberLevels(n);\n    if (levels === -1)\n        throw \"Length is not a power of 2\";\n    var cosTable = new Float64Array(n / 2);\n    var sinTable = new Float64Array(n / 2);\n    calculateCosSineTables(cosTable, sinTable);\n\n    // Bit-reversed addressing permutation\n    bitReverseMap(real, imag);\n\n    // Cooley-Tukey decimation-in-time radix-2 FFT\n    for (var size = 2; size <= n; size *= 2) {\n        cooleyTukey(real, imag, sinTable, cosTable, size);\n    }\n\n    // Returns the integer whose value is the reverse of the lowest 'bits' bits of the integer 'x'.\n    function reverseBits(x, bits) {\n        var y = 0;\n        for (var i = 0; i < bits; i++) {\n            y = (y << 1) | (x & 1);\n            x >>>= 1;\n        }\n        return y;\n    }\n\n    function cooleyTukey(real, imag, sinTable, cosTable, size) {\n        var i, j, k;\n        var n = real.length;\n        var halfsize = size / 2;\n        var tablestep = n / size;\n        for (i = 0; i < n; i += size) {\n            for (j = i, k = 0; j < i + halfsize; j++, k += tablestep) {\n                var tpre = real[j + halfsize] * cosTable[k] + imag[j + halfsize] * sinTable[k];\n                var tpim = -real[j + halfsize] * sinTable[k] + imag[j + halfsize] * cosTable[k];\n                real[j + halfsize] = real[j] - tpre;\n                imag[j + halfsize] = imag[j] - tpim;\n                real[j] += tpre;\n                imag[j] += tpim;\n            }\n        }\n    }\n\n    function calculateNumberLevels(N) {\n        var i;\n        for (i = 0; i < 32; i++) {\n            if (1 << i === N) {\n                return i;\n            }\n        }\n        return -1;\n    }\n\n    function bitReverseMap(real, imag) {\n        var i, j, temp;\n        for (i = 0; i < n; i++) {\n            j = reverseBits(i, levels);\n            if (j > i) {\n                temp = real[i];\n                real[i] = real[j];\n                real[j] = temp;\n                temp = imag[i];\n                imag[i] = imag[j];\n                imag[j] = temp;\n            }\n        }\n    }\n\n    function calculateCosSineTables(cosTable, sinTable) {\n        var n = cosTable.length,\n            i;\n        for (i = 0; i < n; i++) {\n            cosTable[i] = Math.cos(Math.PI * i / n);\n            sinTable[i] = Math.sin(Math.PI * i / n);\n        }\n    }\n}\n\n\n/*\n * Computes the discrete Fourier transform (DFT) of the given complex vector, storing the result back into the vector.\n * The vector can have any length. This requires the convolution function, which in turn requires the radix-2 FFT function.\n * Uses Bluestein's chirp z-transform algorithm.\n */\nexport function transformBluestein(real, imag) {\n    // Find a power-of-2 convolution length m such that m >= n * 2 + 1\n    if (real.length !== imag.length)\n        throw \"Mismatched lengths\";\n    var i, j;\n    var n = real.length;\n    var m = 1;\n    while (m < n * 2 + 1)\n        m *= 2;\n\n    // Trignometric tables\n    var cosTable = new Float64Array(n);\n    var sinTable = new Float64Array(n);\n    (function (cosTable, sinTable) {\n        for (i = 0; i < n; i++) {\n            j = i * i % (n * 2); // This is more accurate than j = i * i\n            cosTable[i] = Math.cos(Math.PI * j / n);\n            sinTable[i] = Math.sin(Math.PI * j / n);\n        }\n    })(cosTable, sinTable);\n\n    // Temporary vectors and preprocessing\n    var areal = new Float64Array(m);\n    var aimag = new Float64Array(m);\n\n    for (i = 0; i < n; i++) {\n        areal[i] = real[i] * cosTable[i] + imag[i] * sinTable[i];\n        aimag[i] = -real[i] * sinTable[i] + imag[i] * cosTable[i];\n    }\n    var breal = new Float64Array(m);\n    var bimag = new Float64Array(m);\n    breal[0] = cosTable[0];\n    bimag[0] = sinTable[0];\n    for (i = 1; i < n; i++) {\n        breal[i] = breal[m - i] = cosTable[i];\n        bimag[i] = bimag[m - i] = sinTable[i];\n    }\n\n    // Convolution\n    var creal = new Float64Array(m);\n    var cimag = new Float64Array(m);\n    convolveComplex(areal, aimag, breal, bimag, creal, cimag);\n\n    // Postprocessing\n    for (i = 0; i < n; i++) {\n        real[i] = creal[i] * cosTable[i] + cimag[i] * sinTable[i];\n        imag[i] = -creal[i] * sinTable[i] + cimag[i] * cosTable[i];\n    }\n}\n\n\n/*\n * Computes the circular convolution of the given real vectors. Each vector's length must be the same.\n */\nfunction convolveReal(x, y, out) {\n    if (x.length !== y.length || x.length !== out.length)\n        throw \"Mismatched lengths\";\n    var zeros = new Array(x.length);\n    for (var i = 0; i < zeros.length; i++)\n        zeros[i] = 0;\n    convolveComplex(x, zeros, y, zeros.slice(), out, zeros.slice());\n}\n\n\n/*\n * Computes the circular convolution of the given complex vectors. Each vector's length must be the same.\n */\nexport function convolveComplex(xreal, ximag, yreal, yimag, outreal, outimag) {\n    (function () {\n        if (xreal.length !== ximag.length || xreal.length !== yreal.length || yreal.length !== yimag.length || xreal.length !== outreal.length || outreal.length !== outimag.length)\n            throw \"Mismatched lengths\";\n    })();\n    var i;\n    var n = xreal.length;\n    xreal = xreal.slice();\n    ximag = ximag.slice();\n    yreal = yreal.slice();\n    yimag = yimag.slice();\n\n    transform(xreal, ximag);\n    transform(yreal, yimag);\n    for (i = 0; i < n; i++) {\n        var temp = xreal[i] * yreal[i] - ximag[i] * yimag[i];\n        ximag[i] = ximag[i] * yreal[i] + xreal[i] * yimag[i];\n        xreal[i] = temp;\n    }\n    inverseTransform(xreal, ximag);\n    for (i = 0; i < n; i++) { // Scaling (because this FFT implementation omits it)\n        outreal[i] = xreal[i] / n;\n        outimag[i] = ximag[i] / n;\n    }\n}\n","/// <reference path=\"../../typings/functions.d.ts\" />\nimport {xtract_assert_array} from \"./xtract_assert_array\";\n\nexport function xtract_amdf(array) {\n    if (!xtract_assert_array(array))\n        return 0;\n    var n = array.length;\n    var result = new Float64Array(n);\n    while (n--) {\n        var md = 0.0;\n        for (var i = 0; i < array.length - n; i++) {\n            md += Math.abs(array[i] - array[i + n]);\n        }\n        result[n] = md / array.length;\n    }\n    return result;\n}\n","/// <reference path=\"../../typings/functions.d.ts\" />\nimport {xtract_assert_array} from \"./xtract_assert_array\";\nexport function xtract_apply_window(X, W) {\n    if (!xtract_assert_array(X) || !xtract_assert_array(W)) {\n        throw (\"Both X and W must be defined\");\n    }\n    if (X.length !== W.length) {\n        throw (\"Both X and W must be the same lengths\");\n    }\n    var N = X.length;\n    var Y = new Float64Array(N);\n    var n;\n    for (n = 0; n < N; n++) {\n        Y[n] = X[n] * W[n];\n    }\n    return Y;\n}\n","/// <reference path=\"../../typings/functions.d.ts\" />\nimport {xtract_assert_array} from \"./xtract_assert_array\";\nimport {xtract_array_min} from \"./xtract_array_min\";\nimport {xtract_array_max} from \"./xtract_array_max\";\n\nexport function xtract_array_bound(data, min, max) {\n    if (!xtract_assert_array(data))\n        return 0;\n    if (typeof min !== \"number\") {\n        min = xtract_array_min(data);\n    }\n    if (typeof max !== \"number\") {\n        max = xtract_array_max(data);\n    }\n    if (min >= max) {\n        throw (\"Invalid boundaries! Minimum cannot be greater than maximum\");\n    }\n    var result = new data.constructor(data.length);\n    for (var n = 0; n < data.length; n++) {\n        result[n] = Math.min(Math.max(data[n], min), max);\n    }\n    return result;\n}\n","/// <reference path=\"../../typings/functions.d.ts\" />\nexport function xtract_array_copy(src) {\n    var N = src.length,\n        dst = new src.constructor(N);\n    for (var n = 0; n < N; n++)\n        dst[n] = src[n];\n    return dst;\n}\n","/// <reference path=\"../../typings/functions.d.ts\" />\nimport {xtract_assert_array} from \"./xtract_assert_array\";\nimport {xtract_assert_positive_integer} from \"./xtract_assert_positive_integer\";\n\nexport function xtract_array_deinterlace(data, num_arrays) {\n    if (!xtract_assert_array(data)) {\n        return [];\n    }\n    var result, N;\n    if (!xtract_assert_positive_integer(num_arrays)) {\n        throw (\"num_arrays must be a positive integer\");\n    }\n    result = [];\n    N = data.length / num_arrays;\n    for (var n = 0; n < num_arrays; n++) {\n        result[n] = new data.constructor(N);\n    }\n    for (var k = 0; k < N; k++) {\n        for (var j = 0; j < num_arrays; j++) {\n            result[j][k] = data[k * num_arrays + j];\n        }\n    }\n    return result;\n}\n","/// <reference path=\"../../typings/functions.d.ts\" />\nimport {xtract_assert_array} from \"./xtract_assert_array\";\n\nexport function xtract_array_interlace(data) {\n    if (!xtract_assert_array(data)) {\n        return [];\n    }\n    var num_arrays = data.length,\n        length = data[0].length;\n    if (data.every(function (a) {\n            return a.length === length;\n        }) === false) {\n        throw (\"All argument lengths must be the same\");\n    }\n    var result = new data[0].constructor(num_arrays * length);\n    for (var k = 0; k < length; k++) {\n        for (var j = 0; j < num_arrays; j++) {\n            result[k * num_arrays + j] = data[j][k];\n        }\n    }\n    return result;\n}\n","/// <reference path=\"../../typings/functions.d.ts\" />\nimport {xtract_assert_array} from \"./xtract_assert_array\";\nexport function xtract_array_max(data) {\n    if (!xtract_assert_array(data))\n        return -Infinity;\n    if (data.reduce) {\n        return data.reduce(function (a, b) {\n            if (b > a) {\n                return b;\n            }\n            return a;\n        }, data[0]);\n    }\n    var max = data[0],\n        l = data.length;\n    for (var n = 1; n < l; n++) {\n        if (data[n] > max) {\n            max = data[n];\n        }\n    }\n    return max;\n}\n","/// <reference path=\"../../typings/functions.d.ts\" />\nimport {xtract_assert_array} from \"./xtract_assert_array\";\nexport function xtract_array_min(data) {\n    if (!xtract_assert_array(data))\n        return Infinity;\n    if (data.reduce) {\n        return data.reduce(function (a, b) {\n            if (b < a) {\n                return b;\n            }\n            return a;\n        }, data[0]);\n    }\n    var min = Infinity,\n        l = data.length;\n    for (var n = 0; n < l; n++) {\n        if (data[n] < min) {\n            min = data[n];\n        }\n    }\n    return min;\n}\n","/// <reference path=\"../../typings/functions.d.ts\" />\nimport {xtract_assert_array} from \"./xtract_assert_array\";\nimport {xtract_array_scale} from \"./xtract_array_scale\";\nimport {xtract_array_max} from \"./xtract_array_max\";\n\nexport function xtract_array_normalise(data) {\n    if (!xtract_assert_array(data))\n        return 0;\n    return xtract_array_scale(data, 1.0 / xtract_array_max(data));\n}\n","/// <reference path=\"../../typings/functions.d.ts\" />\nimport {xtract_assert_array} from \"./xtract_assert_array\";\nimport {xtract_array_copy} from \"./xtract_array_copy\";\nexport function xtract_array_scale(data, factor) {\n    if (!xtract_assert_array(data))\n        return 0;\n    if (typeof factor !== \"number\") {\n        return 0;\n    }\n    var i = 0,\n        l = data.length,\n        a = xtract_array_copy(data);\n    for (i = 0; i < l; i++) {\n        a[i] *= factor;\n    }\n    return a;\n}\n","/// <reference path=\"../../typings/functions.d.ts\" />\nimport {xtract_assert_array} from \"./xtract_assert_array\";\nexport function xtract_array_sum(data) {\n    if (!xtract_assert_array(data))\n        return 0;\n    if (data.reduce) {\n        return data.reduce(function (a, b) {\n            return a + b;\n        }, 0);\n    }\n    var sum = 0,\n        l = data.length;\n    for (var n = 0; n < l; n++) {\n        sum += data[n];\n    }\n    return sum;\n}\n","/// <reference path=\"../../typings/functions.d.ts\" />\nexport function xtract_array_to_JSON(array) {\n    if (array.join) {\n        return '[' + array.join(', ') + ']';\n    }\n    var json = '[';\n    var n = 0;\n    while (n < this.length) {\n        json = json + this[n];\n        if (this[n + 1] !== undefined) {\n            json = json + ',';\n        }\n        n++;\n    }\n    return json + ']';\n}\n","/// <reference path=\"../../typings/functions.d.ts\" />\nimport {xtract_assert_array} from \"./xtract_assert_array\";\nexport function xtract_asdf(array) {\n    if (!xtract_assert_array(array))\n        return 0;\n    var n = array.length;\n    var result = new Float64Array(n);\n    while (n--) {\n        var sd = 0.0;\n        for (var i = 0; i < array.length - n; i++) {\n            sd += Math.pow(array[i] - array[i + n], 2);\n        }\n        result[n] = sd / array.length;\n    }\n    return result;\n}\n","/// <reference path=\"../../typings/functions.d.ts\" />\nexport function xtract_assert_array(array) {\n    return (typeof array === \"object\" && array.length !== undefined && array.length > 0);\n}\n","/// <reference path=\"../../typings/functions.d.ts\" />\nexport function xtract_assert_positive_integer(number) {\n    return (typeof number === \"number\" && number >= 0 && number === Math.round(number));\n}\n","/// <reference path=\"../../typings/functions.d.ts\" />\nimport {xtract_assert_array} from \"./xtract_assert_array\";\n\nexport function xtract_autocorrelation(array) {\n    if (!xtract_assert_array(array))\n        return 0;\n    var n = array.length;\n    var result = new Float64Array(n);\n    while (n--) {\n        var corr = 0;\n        for (var i = 0; i < array.length - n; i++) {\n            corr += array[i] * array[i + n];\n        }\n        result[n] = corr / array.length;\n    }\n    return result;\n}\n","/// <reference path=\"../../typings/functions.d.ts\" />\nimport {xtract_assert_array} from \"./xtract_assert_array\";\nimport {xtract_mean} from \"./xtract_mean\";\nexport function xtract_average_deviation(array, mean) {\n    if (!xtract_assert_array(array))\n        return 0;\n    if (typeof mean !== \"number\") {\n        mean = xtract_mean(array);\n    }\n    var result = 0.0;\n    if (array.reduce) {\n        result = array.reduce(function (a, b) {\n            return a + Math.abs(b - mean);\n        }, 0);\n    } else {\n        for (var n = 0; n < array.length; n++) {\n            result += Math.abs(array[n] - mean);\n        }\n    }\n    return result / array.length;\n}\n","/// <reference path=\"../../typings/functions.d.ts\" />\nimport {xtract_assert_array} from \"./xtract_assert_array\";\nexport function xtract_bark_coefficients(spectrum, bark_limits) {\n    if (!xtract_assert_array(spectrum))\n        return 0;\n    if (bark_limits === undefined) {\n        throw (\"xtract_bark_coefficients requires compute limits from xtract_init_bark\");\n    }\n    var N = spectrum.length >> 1;\n    var bands = bark_limits.length;\n    var results = new Float64Array(bands);\n    for (var band = 0; band < bands - 1; band++) {\n        results[band] = 0.0;\n        for (var n = bark_limits[band]; n < bark_limits[band + 1]; n++) {\n            results[band] += spectrum[n];\n        }\n    }\n    return results;\n}\n","/// <reference path=\"../../typings/functions.d.ts\" />\nimport {xtract_assert_array} from \"./xtract_assert_array\";\nexport function xtract_chroma(spectrum, chromaFilters) {\n    if (!xtract_assert_array(spectrum)) {\n        return 0;\n    }\n    if (chromaFilters.wts === undefined) {\n        throw (\"xtract_chroma requires chroma filters from xtract_init_chroma\");\n    }\n    if (chromaFilters.nfft !== spectrum.length / 2) {\n        throw (\"the FFT lengths of the spectrum (\" + spectrum.length / 2 + \") and chroma filterbank (\" + chromaFilters.nfft + \") do not match\");\n    }\n    var result = new Float64Array(chromaFilters.nbins);\n    for (var i = 0; i < chromaFilters.nbins; i++) {\n        var sum = 0;\n        for (var j = 0; j < chromaFilters.nfft; j++) {\n            sum += chromaFilters.wts[i][j] * spectrum[j];\n        }\n        result[i] = sum;\n    }\n    return result;\n}\n","/// <reference path=\"../../typings/functions.d.ts\" />\nimport {xtract_assert_array} from \"./xtract_assert_array\";\nimport {transform} from \"../freeFFT\";\n\nexport function xtract_complex_spectrum(array, sample_rate, withDC) {\n    if (!xtract_assert_array(array))\n        return 0;\n    if (typeof sample_rate !== \"number\") {\n        console.error(\"Sample Rate must be defined\");\n        return null;\n    }\n    if (withDC === undefined) {\n        withDC = false;\n    }\n    var N = array.length;\n    var result, align = 0,\n        amps, freqs;\n    if (withDC) {\n        result = new Float64Array(3 * (N / 2 + 1));\n    } else {\n        align = 1;\n        result = new Float64Array(3 * (N / 2));\n    }\n    amps = result.subarray(0, 2 * (result.length / 3));\n    freqs = result.subarray(2 * (result.length / 3));\n    var reals = new Float64Array(N);\n    var imags = new Float64Array(N);\n    for (var i = 0; i < N; i++) {\n        reals[i] = array[i];\n    }\n    transform(reals, imags);\n    for (var k = align; k <= reals.length / 2; k++) {\n        amps[(k - align) * 2] = reals[k];\n        amps[(k - align) * 2 + 1] = imags[k];\n        freqs[k - align] = (2 * k / N) * (sample_rate / 2);\n    }\n    return result;\n}\n","/// <reference path=\"../../typings/functions.d.ts\" />\nimport {xtract_assert_positive_integer} from \"./xtract_assert_positive_integer\";\n\nfunction welch(N) {\n    var W = new Float64Array(N);\n    var n;\n    var N12 = (N - 1) / 2;\n    for (n = 0; n < N; n++) {\n        W[n] = 1.0 - Math.pow((n - N12) / N12, 2);\n    }\n    return W;\n}\n\nfunction sine(N) {\n    var w = new Float64Array(N),\n        n;\n    var arga = (Math.PI * n) / (N - 1);\n    for (n = 0; n < N; n++) {\n        w[n] = Math.sin(arga);\n    }\n    return w;\n}\n\nfunction hann(N) {\n    var w = new Float64Array(N),\n        n;\n    for (n = 0; n < N; n++) {\n        w[n] = 0.5 - (1 - Math.cos((Math.PI * 2 * n) / (N - 1)));\n    }\n    return w;\n}\n\nfunction hamming(N) {\n    var w = new Float64Array(N),\n        alpha = 25 / 46,\n        beta = 21 / 46,\n        n;\n    for (n = 0; n < N; n++) {\n        w[n] = alpha - beta * Math.cos((Math.PI * 2 * n) / (N - 1));\n    }\n    return w;\n}\n\nexport function xtract_create_window(N, type) {\n    if (!xtract_assert_positive_integer(N)) {\n        throw (\"N must be a defined, positive integer\");\n    }\n    if (typeof type !== \"string\" || type.length === 0) {\n        throw (\"Type must be defined\");\n    }\n    type = type.toLowerCase();\n    switch (type) {\n        case \"hamming\":\n            return hamming(N);\n        case \"welch\":\n            return welch(N);\n        case \"sine\":\n            return sine(N);\n        case \"hann\":\n            return hann(N);\n        default:\n            throw (\"Window function\\\"\" + type + \"\\\" not defined\");\n    }\n}\n","/// <reference path=\"../../typings/functions.d.ts\" />\nimport {xtract_assert_array} from \"./xtract_assert_array\";\nimport {xtract_array_max} from \"./xtract_array_max\";\nimport {xtract_mean} from \"./xtract_mean\";\n\nexport function xtract_crest(data, max, mean) {\n    if (!xtract_assert_array(data))\n        return 0;\n    if (typeof max !== \"number\") {\n        max = xtract_array_max(data);\n    }\n    if (typeof mean !== \"number\") {\n        mean = xtract_mean(data);\n    }\n    return max / mean;\n}\n","/// <reference path=\"../../typings/functions.d.ts\" />\nimport {xtract_assert_array} from \"./xtract_assert_array\";\n\nexport function xtract_dct(array) {\n    if (!xtract_assert_array(array))\n        return 0;\n    var N = array.length;\n    var result = new Float64Array(N);\n    if (array.reduce) {\n        result.forEach(function (e, i, a) {\n            var nN = i / N;\n            a[i] = array.reduce(function (r, d, m) {\n                return r + d * Math.cos(Math.PI * nN * (m + 0.5));\n            });\n        });\n    } else {\n        for (var n = 0; n < N; n++) {\n            var nN = n / N;\n            for (var m = 0; m < N; m++) {\n                result[n] += array[m] * Math.cos(Math.PI * nN * (m + 0.5));\n            }\n        }\n    }\n    return result;\n}\n","/// <reference path=\"../../typings/functions.d.ts\" />\nimport {xtract_assert_array} from \"./xtract_assert_array\";\nimport {xtract_init_dct} from \"./xtract_init_dct\";\nimport {xtract_array_sum} from \"./xtract_array_sum\";\n\nexport function xtract_dct_2(array, dct) {\n    if (!xtract_assert_array(array))\n        return 0;\n    var N = array.length;\n    if (dct === undefined) {\n        dct = xtract_init_dct(N);\n    }\n    var result = new Float64Array(N);\n    result[0] = xtract_array_sum(array);\n    if (result.forEach && array.reduce) {\n        result.forEach(function (e, k, ar) {\n            ar[k] = array.reduce(function (a, b, n) {\n                return a + b * dct.wt[k][n];\n            });\n        });\n    } else {\n        for (var k = 1; k < N; k++) {\n            for (var n = 0; n < N; n++) {\n                result[k] += array[n] * dct.wt[k][n];\n            }\n        }\n    }\n    return result;\n}\n","/// <reference path=\"../../typings/functions.d.ts\" />\nimport {xtract_assert_array} from \"./xtract_assert_array\";\nimport {xtract_rms_amplitude} from \"./xtract_rms_amplitude\";\n\nexport function xtract_energy(array, sample_rate, window_ms) {\n    if (!xtract_assert_array(array))\n        return 0;\n    if (typeof sample_rate !== \"number\") {\n        console.error(\"xtract_energy requires sample_rate to be defined\");\n        return;\n    }\n    if (typeof window_ms !== \"number\") {\n        window_ms = 100;\n    }\n    if (window_ms <= 0) {\n        window_ms = 100;\n    }\n    var N = array.length;\n    var L = Math.floor(sample_rate * (window_ms / 1000.0));\n    var K = Math.ceil(N / L);\n    var result = new Float64Array(K);\n    for (var k = 0; k < K; k++) {\n        var frame = array.subarray(k * L, k * L + L);\n        var rms = xtract_rms_amplitude(frame);\n        result[k] = rms;\n    }\n    return result;\n}\n","/// <reference path=\"../../typings/functions.d.ts\" />\nimport {xtract_assert_array} from \"./xtract_assert_array\";\nimport {xtract_array_copy} from \"./xtract_array_copy\";\nimport {xtract_array_max} from \"./xtract_array_max\";\nimport {xtract_array_bound} from \"./xtract_array_bound\";\n\nfunction calc_err_tau_x(sub_arr, M, tau) {\n    var err_tau = 0.0,\n        n;\n    for (n = 1; n < M; n++) {\n        err_tau += Math.abs(sub_arr[n] - sub_arr[n + tau]);\n    }\n    return err_tau;\n}\n\nexport function xtract_f0(timeArray, sampleRate) {\n    if (!xtract_assert_array(timeArray))\n        return 0;\n    if (typeof sampleRate !== \"number\") {\n        sampleRate = 44100.0;\n    }\n    var sub_arr = xtract_array_copy(timeArray);\n    var N = sub_arr.length;\n    var M = N / 2;\n    var n;\n\n    var threshold_peak = 0.8,\n        threshold_centre = 0.3,\n        array_max = 0;\n\n    array_max = xtract_array_max(sub_arr);\n    threshold_peak *= array_max;\n    threshold_centre *= array_max;\n\n    sub_arr = xtract_array_bound(sub_arr, -threshold_peak, threshold_peak);\n\n    sub_arr.forEach(function (v, i, a) {\n        a[i] = Math.max(0, v - threshold_centre);\n    });\n\n    var err_tau_1 = calc_err_tau_x(sub_arr, M, 1);\n    for (var tau = 2; tau < M; tau++) {\n        var err_tau_x = calc_err_tau_x(sub_arr, M, tau);\n        if (err_tau_x < err_tau_1) {\n            return sampleRate / (tau + (err_tau_x / err_tau_1));\n        }\n    }\n    return -0;\n}\n","/// <reference path=\"../../typings/functions.d.ts\" />\nimport {xtract_f0} from \"./xtract_f0\";\n\nexport function xtract_failsafe_f0(timeArray, sampleRate) {\n    return xtract_f0(timeArray, sampleRate);\n}\n","/// <reference path=\"../../typings/functions.d.ts\" />\nimport {xtract_assert_array} from \"./xtract_assert_array\";\n\nexport function xtract_flatness(spectrum) {\n    if (!xtract_assert_array(spectrum))\n        return 0;\n    var count = 0,\n        denormal_found = false,\n        num = 1.0,\n        den = 0.0,\n        temp = 0.0;\n    var N = spectrum.length;\n    var K = N >> 1;\n    var amps = spectrum.subarray(0, K);\n    for (var n = 0; n < K; n++) {\n        temp = Math.max(1e-32, amps[n]);\n        num *= temp;\n        den += temp;\n        count++;\n    }\n    if (count === 0) {\n        return 0;\n    }\n    num = Math.pow(num, 1.0 / count);\n    den /= count;\n\n    return num / den;\n}\n","/// <reference path=\"../../typings/functions.d.ts\" />\nimport {xtract_assert_array} from \"./xtract_assert_array\";\nimport {xtract_flatness} from \"./xtract_flatness\";\n\nexport function xtract_flatness_db(spectrum, flatness) {\n    if (!xtract_assert_array(spectrum))\n        return 0;\n    if (typeof flatness !== \"number\") {\n        flatness = xtract_flatness(spectrum);\n    }\n    return 10.0 * Math.log10(flatness);\n}\n","/// <reference path=\"../../typings/functions.d.ts\" />\nimport {xtract_assert_positive_integer} from \"./xtract_assert_positive_integer\";\nimport {xtract_assert_array} from \"./xtract_assert_array\";\nimport {xtract_get_number_of_frames} from \"./xtract_get_number_of_frames\";\n\nexport function xtract_frame_from_array(src, dst, index, frame_size, hop_size) {\n    if (hop_size === undefined) {\n        hop_size = frame_size;\n    }\n    if (!xtract_assert_positive_integer(index)) {\n        throw (\"xtract_get_frame requires the index to be an integer value\");\n    }\n    if (!xtract_assert_positive_integer(frame_size)) {\n        throw (\"xtract_get_frame requires the frame_size to be a positive integer\");\n    }\n    if (!xtract_assert_array(src)) {\n        throw (\"Invalid data parameter. Must be item with iterable list\");\n    }\n    if (!xtract_assert_array(dst)) {\n        throw (\"dst must be an Array-like object equal in length to frame_size\");\n    }\n    if (!xtract_assert_positive_integer(hop_size)) {\n        throw (\"xtract_get_frame requires the hop_size to be a positive integer\");\n    }\n    var K = xtract_get_number_of_frames(src, hop_size);\n    if (index >= K) {\n        throw (\"index number \" + index + \" out of bounds\");\n    }\n    var n = 0;\n    var offset = index * hop_size;\n    while (n < dst.length && n < src.length && n < frame_size) {\n        dst[n] = src[n + offset];\n        n++;\n    }\n    while (n < dst.length) {\n        dst[n] = 0.0;\n    }\n}\n","/// <reference path=\"../../typings/functions.d.ts\" />\nimport {xtract_assert_array} from \"./xtract_assert_array\";\nimport {xtract_assert_positive_integer} from \"./xtract_assert_positive_integer\";\n\nexport function xtract_get_data_frames(data, frame_size, hop_size, copy) {\n    if (hop_size === undefined) {\n        hop_size = frame_size;\n    }\n    (function (data, frame_size, hop_size) {\n        if (!xtract_assert_array(data)) {\n            throw (\"Invalid data parameter. Must be item with iterable list\");\n        }\n        if (!xtract_assert_positive_integer(frame_size)) {\n            throw (\"xtract_get_data_frames requires the frame_size to be a positive integer\");\n        }\n        if (!xtract_assert_positive_integer(hop_size)) {\n            throw (\"xtract_get_data_frames requires the hop_size to be a positive integer\");\n        }\n        return true;\n    })(data, frame_size, hop_size);\n\n    var frames = [];\n    var N = data.length;\n    var K = Math.ceil(N / hop_size);\n    var sub_frame;\n    for (var k = 0; k < K; k++) {\n        var offset = k * hop_size;\n        if (copy) {\n            sub_frame = new Float64Array(frame_size);\n            for (var n = 0; n < frame_size && n + offset < data.length; n++) {\n                sub_frame[n] = data[n + offset];\n            }\n        } else {\n            sub_frame = data.subarray(offset, offset + frame_size);\n            if (sub_frame.length < frame_size) {\n                // Must zero-pad up to the length\n                var c_frame = new Float64Array(frame_size);\n                for (var i = 0; i < sub_frame.length; i++) {\n                    c_frame[i] = sub_frame[i];\n                }\n                sub_frame = c_frame;\n            }\n        }\n        frames.push(sub_frame);\n    }\n    return frames;\n}\n","/// <reference path=\"../../typings/functions.d.ts\" />\nimport {xtract_assert_array} from \"./xtract_assert_array\";\nexport function xtract_get_number_of_frames(data, hop_size) {\n    if (!xtract_assert_array(data)) {\n        throw (\"Invalid data parameter. Must be item with iterable list\");\n    }\n    if (typeof hop_size !== \"number\" && hop_size <= 0) {\n        throw (\"Invalid hop_size. Must be positive integer\");\n    }\n    return Math.floor(data.length / hop_size);\n}\n","/// <reference path=\"../../typings/functions.d.ts\" />\nimport {xtract_assert_array} from \"./xtract_assert_array\";\n\nexport function xtract_harmonic_spectrum(peakSpectrum, f0, threshold) {\n    if (!xtract_assert_array(peakSpectrum))\n        return 0;\n    var N = peakSpectrum.length;\n    var K = N >> 1;\n    var result = new Float64Array(N);\n    var ampsIn = peakSpectrum.subarray(0, K);\n    var freqsIn = peakSpectrum.subarray(K);\n    var ampsOut = result.subarray(0, K);\n    var freqsOut = result.subarray(K);\n    var n = K;\n    if (f0 === undefined || threshold === undefined) {\n        throw (\"harmonic_spectrum requires f0 and threshold to be numbers and defined\");\n    }\n    if (threshold > 1) {\n        threshold /= 100.0;\n    }\n    while (n--) {\n        if (freqsIn[n] !== 0.0) {\n            var ratio = freqsIn[n] / f0;\n            var nearest = Math.round(ratio);\n            var distance = Math.abs(nearest - ratio);\n            if (distance > threshold) {\n                ampsOut[n] = 0.0;\n                freqsOut[n] = 0.0;\n            } else {\n                ampsOut[n] = ampsIn[n];\n                freqsOut[n] = freqsIn[n];\n            }\n        } else {\n            result[n] = 0.0;\n            freqsOut[n] = 0.0;\n        }\n    }\n    return result;\n}\n","/// <reference path=\"../../typings/functions.d.ts\" />\nimport {xtract_assert_array} from \"./xtract_assert_array\";\nimport {xtract_lowhigh} from \"./xtract_lowhigh\";\n\nexport function xtract_highest_value(data, threshold) {\n    if (!xtract_assert_array(data))\n        return 0;\n    if (typeof threshold !== \"number\") {\n        threshold = +Infinity;\n    }\n    return xtract_lowhigh(data, threshold).max;\n}\n","/// <reference path=\"../../typings/functions.d.ts\" />\nimport {xtract_assert_array} from \"./xtract_assert_array\";\n\nfunction get_peak_index(M, amps) {\n    var peak_index = 0,\n        peak = 0,\n        i;\n    var tempProduct = new Float64Array(M);\n    tempProduct.forEach(function (e, i, a) {\n        a[i] = amps[i] * amps[i * 2] * amps[i * 3];\n    });\n    tempProduct.forEach(function (v, i) {\n        if (v > peak) {\n            peak = v;\n            peak_index = i;\n        }\n    });\n    return peak_index;\n}\n\nexport function xtract_hps(spectrum) {\n    if (!xtract_assert_array(spectrum))\n        return 0;\n    var peak_index = 0,\n        position1_lwr = 0,\n        largest1_lwr = 0,\n        ratio1 = 0;\n    var N = spectrum.length;\n    var K = N >> 1;\n    var amps = spectrum.subarray(0, K);\n    var freqs = spectrum.subarray(K);\n    var M = Math.ceil(K / 3.0);\n    var i;\n    if (M <= 1) {\n        throw (\"Input Data is too short for HPS\");\n    }\n\n    peak_index = get_peak_index(M, amps);\n\n    for (i = 0; i < K; i++) {\n        if (amps[i] > largest1_lwr && i !== peak_index) {\n            largest1_lwr = amps[i];\n            position1_lwr = i;\n        }\n    }\n\n    ratio1 = amps[position1_lwr] / amps[peak_index];\n\n    if (position1_lwr > peak_index * 0.4 && position1_lwr < peak_index * 0.6 && ratio1 > 0.1)\n        peak_index = position1_lwr;\n\n    return freqs[peak_index];\n}\n","/// <reference path=\"../../typings/functions.d.ts\" />\nexport function xtract_init_bark(N, sampleRate, bands) {\n    if (typeof bands !== \"number\" || bands < 0 || bands > 26) {\n        bands = 26;\n    }\n    var edges = [0, 100, 200, 300, 400, 510, 630, 770, 920, 1080, 1270, 1480, 1720, 2000, 2320, 2700, 3150, 3700, 4400, 5300, 6400, 7700, 9500, 12000, 15500, 20500, 27000];\n    var band_limits = new Int32Array(bands);\n    while (bands--) {\n        band_limits[bands] = (edges[bands] / sampleRate) * N;\n    }\n    return band_limits;\n}\n","/// <reference path=\"../../typings/functions.d.ts\" />\nimport {xtract_array_sum} from \"./xtract_array_sum\";\nexport function xtract_init_chroma(N, sampleRate, nbins, A440, f_ctr, octwidth) {\n    /*run arg checks here... (if(nbins=='undefined')*/\n\n    if (typeof nbins !== \"number\" || nbins <= 1) {\n        nbins = 12;\n    }\n    if (typeof A440 !== \"number\" || A440 <= 27.5) {\n        A440 = 440;\n    }\n    if (typeof f_ctr !== \"number\") {\n        f_ctr = 1000;\n    }\n    if (typeof octwidth !== \"number\") {\n        octwidth = 1;\n    }\n    var A0 = 27.5; // A0 in Hz\n    var N2 = N; // ignore freq values returned by xtract_spectrum - this relies on dc-offset being kept\n    var ctroct = Math.log(f_ctr / A0) / Math.LN2; // f_ctr in octaves\n    var chromaFilters = {\n        wts: [],\n        nfft: N2,\n        nbins: nbins,\n    };\n    var fftfrqbins = new Float64Array(N2);\n    var binwidthbins = new Float64Array(N2);\n    // Convert a frequency in Hz into a real number counting the octaves above A0. So hz2octs(440) = 4.0\n    var hz2octs = function (freq) {\n        return Math.log(freq / (A440 / 16)) / Math.LN2;\n    };\n    var i, j;\n    for (i = 1; i < N2; i++) {\n        fftfrqbins[i] = nbins * hz2octs(i / N * sampleRate);\n    }\n    fftfrqbins[0] = fftfrqbins[1] - 1.5 * nbins; //DC offset bin\n    for (i = 0; i < N2 - 1; i++) {\n        var diffVal = fftfrqbins[i + 1] - fftfrqbins[i];\n        if (diffVal >= 1) {\n            binwidthbins[i] = diffVal;\n        } else {\n            binwidthbins[i] = 1;\n        }\n    }\n    binwidthbins[N2 - 1] = 1;\n    var nbins2 = Math.round(nbins / 2.0);\n    var wts = [];\n    for (i = 0; i < nbins; i++) {\n        wts[i] = [];\n        for (j = 0; j < N2; j++) {\n            var tmpF = fftfrqbins[j] - i;\n            var tmpB = binwidthbins[j];\n            var remF = ((tmpF + nbins2 + 10 * nbins) % nbins) - nbins2;\n            wts[i][j] = Math.exp(-0.5 * Math.pow((2 * remF / tmpB), 2));\n        }\n    }\n\n    function head(a) {\n        return a[0];\n    }\n\n    function tail(a) {\n        return a.slice(1);\n    }\n\n    function transpose(a) {\n        if (a === undefined) {\n            return [];\n        }\n        var x = a.length,\n            y = a[0].length,\n            mtx = [],\n            i, j;\n        for (i = 0; i < y; i++) {\n            mtx[i] = new Float64Array(x);\n        }\n        for (i = 0; i < x; i++) {\n            for (j = 0; j < y; j++) {\n                mtx[j][i] = a[i][j];\n            }\n        }\n        return mtx;\n    }\n    var wtsColumnSums = transpose(wts).map(xtract_array_sum);\n    for (i = 0; i < nbins; i++) {\n        for (j = 0; j < N2; j++) {\n            wts[i][j] *= 1 / wtsColumnSums[j];\n        }\n    }\n    if (octwidth > 0) {\n        for (i = 0; i < nbins; i++) {\n            for (j = 0; j < N2; j++) {\n                wts[i][j] *= Math.exp(-0.5 * (Math.pow(((fftfrqbins[j] / nbins - ctroct) / octwidth), 2)));\n            }\n        }\n    }\n    chromaFilters.wts = wts;\n    return chromaFilters;\n}\n","/// <reference path=\"../../typings/functions.d.ts\" />\nexport function xtract_init_dct(N) {\n    var dct = {\n        N: N,\n        wt: []\n    };\n    for (var k = 0; k < N; k++) {\n        dct.wt[k] = new Float64Array(N);\n        for (var n = 0; n < N; n++) {\n            dct.wt[k][n] = Math.cos(Math.PI * k * (n + 0.5) / N);\n        }\n    }\n    return dct;\n}\n","/// <reference path=\"../../typings/functions.d.ts\" />\nexport function xtract_init_dft(N) {\n    var dft = {\n        N: N / 2 + 1,\n        real: [],\n        imag: []\n    };\n    var power_const = -2.0 * Math.PI / N;\n    for (var k = 0; k < dft.N; k++) {\n        var power_k = power_const * k;\n        dft.real[k] = new Float64Array(N);\n        dft.imag[k] = new Float64Array(N);\n        for (var n = 0; n < N; n++) {\n            var power = power_k * n;\n            dft.real[k][n] = Math.cos(power);\n            dft.imag[k][n] = Math.sin(power);\n        }\n    }\n    return dft;\n}\n","/// <reference path=\"../../typings/functions.d.ts\" />\n\nfunction get_fft_peak(N, freq_max, freq_min, freq_bands, nyquist, style) {\n    var norm = 1,\n        M = N / 2,\n        height, norm_fact, n;\n    var mel_freq_max = 1127 * Math.log(1 + freq_max / 700);\n    var mel_freq_min = 1127 * Math.log(1 + freq_min / 700);\n    var freq_bw_mel = (mel_freq_max - mel_freq_min) / freq_bands;\n\n    var mel_peak = new Float64Array(freq_bands + 2);\n    var lin_peak = new Float64Array(freq_bands + 2);\n    var fft_peak = new Float64Array(freq_bands + 2);\n    var height_norm = new Float64Array(freq_bands);\n    mel_peak[0] = mel_freq_min;\n    lin_peak[0] = freq_min;\n    fft_peak[0] = Math.floor(lin_peak[0] / nyquist * M);\n\n    for (n = 1; n < (freq_bands + 2); ++n) {\n        //roll out peak locations - mel, linear and linear on fft window scale\n        mel_peak[n] = mel_peak[n - 1] + freq_bw_mel;\n        lin_peak[n] = 700 * (Math.exp(mel_peak[n] / 1127) - 1);\n        fft_peak[n] = Math.floor(lin_peak[n] / nyquist * M);\n    }\n\n    for (n = 0; n < freq_bands; n++) {\n        //roll out normalised gain of each peak\n        if (style === \"XTRACT_EQUAL_GAIN\") {\n            height = 1;\n            norm_fact = norm;\n        } else {\n            height = 2 / (lin_peak[n + 2] - lin_peak[n]);\n            norm_fact = norm / (2 / (lin_peak[2] - lin_peak[0]));\n        }\n        height_norm[n] = height * norm_fact;\n    }\n    return {\n        f: fft_peak,\n        h: height_norm\n    };\n}\n\nexport function xtract_init_mfcc(N, nyquist, style, freq_min, freq_max, freq_bands) {\n    var mfcc = {\n        n_filters: freq_bands,\n        filters: []\n    };\n    var norm = 1,\n        M = N / 2,\n        height, norm_fact, n;\n\n    if (freq_bands <= 1) {\n        return null;\n    }\n\n    var i = 0,\n        fh = get_fft_peak(N, freq_max, freq_min, freq_bands, nyquist, style),\n        inc;\n    var fft_peak = fh.f,\n        height_norm = fh.h;\n    var next_peak;\n    for (n = 0; n < freq_bands; n++) {\n        // calculate the rise increment\n        if (n === 0) {\n            inc = height_norm[n] / fft_peak[n];\n        } else {\n            inc = height_norm[n] / (fft_peak[n] - fft_peak[n - 1]);\n        }\n        var val = 0;\n        // Create array\n        mfcc.filters[n] = new Float64Array(N);\n        // fill in the rise\n        for (; i <= fft_peak[n]; i++) {\n            mfcc.filters[n][i] = val;\n            val += inc;\n        }\n        // calculate the fall increment\n        inc = height_norm[n] / (fft_peak[n + 1] - fft_peak[n]);\n\n        val = 0;\n        next_peak = fft_peak[n + 1];\n\n        // reverse fill the 'fall'\n        for (i = Math.floor(next_peak); i > fft_peak[n]; i--) {\n            mfcc.filters[n][i] = val;\n            val += inc;\n        }\n    }\n    return mfcc;\n}\n","/// <reference path=\"../../typings/functions.d.ts\" />\nexport function xtract_init_pcp(N, fs, f_ref) {\n    if (typeof fs !== \"number\" || typeof N !== \"number\") {\n        throw ('The Sample Rate and sample count have to be defined: xtract_init_pcp(N, fs, f_ref)');\n    }\n    if (N <= 0 || N !== Math.floor(N)) {\n        throw (\"The sample count, N, must be a positive integer: xtract_init_pcp(N, fs, f_ref)\");\n    }\n    if (fs <= 0.0) {\n        throw ('The Sample Rate must be a positive number: xtract_init_pcp(N, fs, f_ref)');\n    }\n    if (typeof f_ref !== \"number\" || f_ref <= 0.0 || f_ref >= fs / 2) {\n        f_ref = 48.9994294977;\n    }\n\n    var M = new Float64Array(N - 1);\n    var fs2 = fs / 2;\n    for (var l = 1; l < N; l++) {\n        var f = (2 * l / N) * fs2;\n        M[l - 1] = Math.round(12 * Math.log2((f / N) * f_ref)) % 12;\n    }\n    return M;\n}\n","/// <reference path=\"../../typings/functions.d.ts\" />\nexport function xtract_init_wavelet() {\n    return {\n        _prevPitch: -1,\n        _pitchConfidence: -1\n    };\n}\n","/// <reference path=\"../../typings/functions.d.ts\" />\nimport {xtract_assert_array} from \"./xtract_assert_array\";\nexport function xtract_irregularity_j(spectrum) {\n    if (!xtract_assert_array(spectrum))\n        return 0;\n    var num = 0,\n        den = 0;\n    var N = spectrum.length;\n    var K = N >> 1;\n    var amps = spectrum.subarray(0, K);\n    for (var n = 0; n < K - 1; n++) {\n        num += Math.pow(amps[n] - amps[n + 1], 2);\n        den += Math.pow(amps[n], 2);\n    }\n    return num / den;\n}\n","/// <reference path=\"../../typings/functions.d.ts\" />\nimport {xtract_assert_array} from \"./xtract_assert_array\";\n\nexport function xtract_irregularity_k(spectrum) {\n    if (!xtract_assert_array(spectrum))\n        return 0;\n    var result = 0;\n    var N = spectrum.length;\n    var K = N >> 1;\n    var amps = spectrum.subarray(0, K);\n    for (var n = 1; n < K - 1; n++) {\n        result += Math.abs(Math.log10(amps[n]) - Math.log10(amps[n - 1] + amps[n] + amps[n + 1]) / 3);\n    }\n    return result;\n}\n","/// <reference path=\"../../typings/functions.d.ts\" />\nexport function xtract_is_denormal(num) {\n    if (Math.abs(num) <= 2.2250738585072014e-308) {\n        return true;\n    }\n    return false;\n}\n","/// <reference path=\"../../typings/functions.d.ts\" />\nimport {xtract_skewness_kurtosis} from \"./xtract_skewness_kurtosis\";\n\nexport function xtract_kurtosis(array, mean, standard_deviation) {\n    return xtract_skewness_kurtosis(array, mean, standard_deviation)[1];\n}\n","/// <reference path=\"../../typings/functions.d.ts\" />\nimport {xtract_assert_array} from \"./xtract_assert_array\";\nexport function xtract_loudness(barkBandsArray) {\n    if (!xtract_assert_array(barkBandsArray))\n        return 0;\n    var result = 0;\n    if (barkBandsArray.reduce) {\n        result = barkBandsArray.reduce(function (a, b) {\n            return a + Math.pow(b, 0.23);\n        }, 0);\n    } else {\n        for (var n = 0; n < barkBandsArray.length; n++) {\n            result += Math.pow(barkBandsArray[n], 0.23);\n        }\n    }\n    return result;\n}\n","/// <reference path=\"../../typings/functions.d.ts\" />\nimport {xtract_assert_array} from \"./xtract_assert_array\";\nimport {xtract_lowhigh} from \"./xtract_lowhigh\";\n\nexport function xtract_lowest_value(data, threshold) {\n    if (!xtract_assert_array(data))\n        return 0;\n    if (typeof threshold !== \"number\") {\n        threshold = -Infinity;\n    }\n    return xtract_lowhigh(data, threshold).min;\n}\n","/// <reference path=\"../../typings/functions.d.ts\" />\nexport function xtract_lowhigh(data, threshold) {\n    var r = {\n        min: null,\n        max: null\n    };\n    for (var n = 0; n < data.length; n++) {\n        if (data[n] > threshold) {\n            r.min = Math.min(r.min, data[n]);\n        }\n        if (data[n] < threshold) {\n            r.max = Math.max(r.max, data[n]);\n        }\n    }\n    return r;\n}\n","/// <reference path=\"../../typings/functions.d.ts\" />\nimport {xtract_assert_array} from \"./xtract_assert_array\";\n\nexport function xtract_lpc(autocorr) {\n    if (!xtract_assert_array(autocorr))\n        return 0;\n    var i, j, r, error = autocorr[0];\n    var N = autocorr.length;\n    var L = N - 1;\n    var lpc = new Float64Array(L);\n    var ref = new Float64Array(L);\n    if (error === 0.0) {\n        return lpc;\n    }\n\n    (function () {\n        for (i = 0; i < L; i++) {\n            r = -autocorr[i + 1];\n            for (j = 0; j < i; j++) {\n                r -= lpc[j] * autocorr[i - j];\n            }\n            r /= error;\n            ref[i] = r;\n\n            lpc[i] = r;\n            for (j = 0; j < (i >> 1); j++) {\n                var tmp = lpc[j];\n                lpc[j] += r * lpc[i - 1 - j];\n                lpc[i - 1 - j] += r * tmp;\n            }\n            if (i % 2) {\n                lpc[j] += lpc[j] * r;\n            }\n            error *= 1.0 - r * r;\n        }\n    })();\n    return lpc;\n}\n","/// <reference path=\"../../typings/functions.d.ts\" />\nimport {xtract_assert_array} from \"./xtract_assert_array\";\n\nexport function xtract_lpcc(lpc, Q) {\n    if (!xtract_assert_array(lpc))\n        return 0;\n    var N = lpc.length;\n    var n, k, sum, order = N - 1,\n        cep_length;\n    if (typeof Q !== \"number\") {\n        Q = N - 1;\n    }\n    cep_length = Q;\n\n    var result = new Float64Array(cep_length);\n    (function () {\n        for (n = 1; n < Q && n < cep_length; n++) {\n            sum = 0;\n            for (k = 1; k < n; k++) {\n                sum += k * result[k - 1] * lpc[n - k];\n            }\n            result[n - 1] = lpc[n] + sum / n;\n        }\n    })();\n    (function () {\n        for (n = order + 1; n <= cep_length; n++) {\n            sum = 0.0;\n            for (k = n - (order - 1); k < n; k++) {\n                sum += k * result[k - 1] * lpc[n - k];\n            }\n            result[n - 1] = sum / n;\n        }\n    })();\n    return result;\n}\n","/// <reference path=\"../../typings/functions.d.ts\" />\nimport {xtract_assert_array} from \"./xtract_assert_array\";\nimport {xtract_array_sum} from \"./xtract_array_sum\";\nexport function xtract_mean(array) {\n    if (!xtract_assert_array(array))\n        return 0;\n    return xtract_array_sum(array) / array.length;\n}\n","/// <reference path=\"../../typings/functions.d.ts\" />\nimport {xtract_assert_array} from \"./xtract_assert_array\";\nimport {xtract_dct} from \"./xtract_dct\";\nexport function xtract_mfcc(spectrum, mfcc) {\n    if (!xtract_assert_array(spectrum))\n        return 0;\n    var K = spectrum.length >> 1;\n    if (typeof mfcc !== \"object\") {\n        throw (\"Invalid MFCC, must be MFCC object built using xtract_init_mfcc\");\n    }\n    if (mfcc.n_filters === 0) {\n        throw (\"Invalid MFCC, object must be built using xtract_init_mfcc\");\n    }\n    if (mfcc.filters[0].length !== K) {\n        throw (\"Lengths do not match\");\n    }\n    var result = new Float64Array(mfcc.n_filters);\n    result.forEach(function (v, f, r) {\n        r[f] = 0.0;\n        var filter = mfcc.filters[f];\n        for (var n = 0; n < filter.length; n++) {\n            r[f] += spectrum[n] * filter[n];\n        }\n        r[f] = Math.log(Math.max(r[f], 2e-42));\n    });\n    return xtract_dct(result);\n}\n","/// <reference path=\"../../typings/functions.d.ts\" />\nexport function xtract_midicent(f0) {\n    if (typeof f0 !== \"number\") {\n        return -1;\n    }\n    var note = 0.0;\n    note = 69 + Math.log(f0 / 440.0) * 17.31234;\n    note *= 100;\n    note = Math.round(0.5 + note);\n    return note;\n}\n","/// <reference path=\"../../typings/functions.d.ts\" />\nexport function xtract_noisiness(h, p) {\n    var i = 0.0;\n    if (typeof h !== \"number\" && typeof p !== \"number\") {\n        return 0;\n    }\n    i = p - h;\n    return i / p;\n}\n","/// <reference path=\"../../typings/functions.d.ts\" />\nimport {xtract_assert_array} from \"./xtract_assert_array\";\nexport function xtract_nonzero_count(data) {\n    if (!xtract_assert_array(data))\n        return 0;\n    var count = 0;\n    if (data.reduce) {\n        return data.reduce(function (a, b) {\n            if (b !== 0) {\n                a++;\n            }\n            return a;\n        });\n    }\n    for (var n = 0; n < data.length; n++) {\n        if (data[n] !== 0) {\n            count++;\n        }\n    }\n    return count;\n}\n","/// <reference path=\"../../typings/functions.d.ts\" />\nimport {xtract_assert_array} from \"./xtract_assert_array\";\n\nexport function xtract_odd_even_ratio(harmonicSpectrum, f0) {\n    if (!xtract_assert_array(harmonicSpectrum))\n        return 0;\n    (function (f0) {\n        if (typeof f0 !== \"number\") {\n            throw (\"spectral_inharmonicity requires f0 to be defined.\");\n        }\n    })(f0);\n    var h = 0,\n        odd = 0.0,\n        even = 0.0,\n        temp;\n    var N = harmonicSpectrum.length;\n    var K = N >> 1;\n    var amps = harmonicSpectrum.subarray(0, n);\n    var freqs = harmonicSpectrum.subarray(n);\n    for (var n = 0; n < K; n++) {\n        temp = amps[n];\n        if (temp !== 0.0) {\n            h = Math.floor(freqs[n] / f0 + 0.5);\n            if (h % 2 !== 0) {\n                odd += temp;\n            } else {\n                even += temp;\n            }\n        }\n    }\n\n    if (odd === 0.0 || even === 0.0) {\n        return 0.0;\n    }\n    return odd / even;\n}\n","/// <reference path=\"../../typings/functions.d.ts\" />\nimport {transform} from \"../freeFFT\";\nimport {xtract_array_interlace} from \"./xtract_array_interlace\";\nimport {xtract_assert_array} from \"./xtract_assert_array\";\nimport {xtract_get_data_frames} from \"./xtract_get_data_frames\";\n\nfunction angle(real, imag) {\n    if (imag === undefined && real.length === 2) {\n        return Math.atan2(real[1], real[0]);\n    }\n    return Math.atan2(imag, real);\n}\n\nfunction abs(real, imag) {\n    if (imag === undefined && real.length === 2) {\n        return Math.sqrt(Math.pow(real[0], 2) + Math.pow(real[1], 2));\n    }\n    return Math.sqrt(Math.pow(real, 2) + Math.pow(imag, 2));\n}\n\nfunction princarg(phaseIn) {\n    //phase=mod(phasein+pi,-2*pi)+pi;\n    return (phaseIn + Math.PI) % (-2 * Math.PI) + Math.PI;\n}\n\nfunction complex_mul(cplx_pair_A, cplx_pair_B) {\n    if (cplx_pair_A.length !== 2 || cplx_pair_B.length !== 2) {\n        throw (\"Both arguments must be numeral arrays of length 2\");\n    }\n    var result = new cplx_pair_A.constructor(2);\n    result[0] = cplx_pair_A[0] * cplx_pair_B[0] - cplx_pair_A[1] * cplx_pair_B[1];\n    result[1] = cplx_pair_A[0] * cplx_pair_B[1] + cplx_pair_A[1] * cplx_pair_B[0];\n    return result;\n}\n\nfunction get_X(frames, frameSize) {\n    var N = frames.length;\n    var X = [];\n    var real = new Float64Array(frameSize);\n    var imag = new Float64Array(frameSize);\n    var K = frameSize / 2 + 1;\n    var n;\n    for (var i = 0; i < N; i++) {\n        for (n = 0; n < frameSize; n++) {\n            real[n] = frames[i][n];\n            imag[n] = 0.0;\n        }\n        transform(real, imag);\n        X[i] = xtract_array_interlace([real.subarray(0, K), imag.subarray(0, K)]);\n    }\n    return X;\n}\n\nexport function xtract_onset(timeData, frameSize) {\n\n    if (!xtract_assert_array(timeData))\n        return 0;\n    if (frameSize === undefined) {\n        throw (\"All arguments for xtract_onset must be defined: xtract_onset(timeData, frameSize)\");\n    }\n    var frames = xtract_get_data_frames(timeData, frameSize, frameSize, false);\n    var N = frames.length;\n    var K = frameSize / 2 + 1;\n    var X = get_X(frames, frameSize);\n\n    var E = new timeData.constructor(N);\n    var n;\n    for (var k = 0; k < K; k++) {\n        var phase_prev = angle(X[0].subarray(2 * k, 2 * k + 2));\n        var phase_delta = angle(X[0].subarray(2 * k, 2 * k + 2));\n        for (n = 1; n < N; n++) {\n            var phi = princarg(phase_prev + phase_delta);\n            var exp = [Math.cos(phi), Math.sin(phi)];\n            var XT = complex_mul(X[n].subarray(2 * k, 2 * k + 2), exp);\n            XT[0] = X[n][2 * k] - XT[0];\n            XT[1] = X[n][2 * k + 1] - XT[1];\n            E[n] += abs(XT);\n            var phase_now = angle(X[n].subarray(2 * k, 2 * k + 2));\n            phase_delta = phase_now - phase_prev;\n            phase_prev = phase_now;\n        }\n    }\n\n    for (n = 0; n < N; n++) {\n        E[n] /= frameSize;\n    }\n    return E;\n}\n","/// <reference path=\"../../typings/functions.d.ts\" />\nimport {xtract_assert_array} from \"./xtract_assert_array\";\nimport {xtract_init_pcp} from \"./xtract_init_pcp\";\nexport function xtract_pcp(spectrum, M, fs) {\n    if (!xtract_assert_array(spectrum))\n        return 0;\n    var N = spectrum.length >> 1;\n    if (typeof M !== \"object\") {\n        if (typeof fs !== \"number\" || fs <= 0.0) {\n            throw (\"Cannot dynamically compute M if fs is undefined / not a valid sample rate\");\n        }\n        M = xtract_init_pcp(N, fs);\n    }\n    var amps = spectrum.subarray(1, N);\n    var PCP = new Float64Array(12);\n    for (var l = 0; l < amps.length; l++) {\n        var p = M[l];\n        PCP[l] += Math.pow(Math.abs(amps[l]), 2);\n    }\n    return PCP;\n}\n","/// <reference path=\"../../typings/functions.d.ts\" />\nimport {xtract_assert_array} from \"./xtract_assert_array\";\nimport {xtract_array_max} from \"./xtract_array_max\";\n\nexport function xtract_peak_spectrum(spectrum, q, threshold) {\n    if (!xtract_assert_array(spectrum))\n        return 0;\n    var N = spectrum.length;\n    var K = N >> 1;\n    var max = 0.0,\n        y = 0.0,\n        y2 = 0.0,\n        y3 = 0.0,\n        p = 0.0;\n    if (typeof q !== \"number\") {\n        throw (\"xtract_peak_spectrum requires second argument to be sample_rate/N\");\n    }\n    if (threshold < 0 || threshold > 100) {\n        threshold = 0;\n    }\n    var result = new Float64Array(N);\n    var ampsIn = spectrum.subarray(0, K);\n    var freqsIn = spectrum.subarray(K);\n    var ampsOut = result.subarray(0, K);\n    var freqsOut = result.subarray(K);\n    max = xtract_array_max(ampsIn);\n    threshold *= 0.01 * max;\n    for (var n = 1; n < N - 1; n++) {\n        if (ampsIn[n] >= threshold) {\n            if (ampsIn[n] > ampsIn[n - 1] && ampsIn[n] > ampsIn[n + 1]) {\n                y = ampsIn[n - 1];\n                y2 = ampsIn[n];\n                y3 = ampsIn[n + 1];\n                p = 0.5 * (y - y3) / (ampsIn[n - 1] - 2 * (y2 + ampsIn[n + 1]));\n                freqsOut[n] = q * (n + 1 + p);\n                ampsOut[n] = y2 - 0.25 * (y - y3) * p;\n            } else {\n                ampsOut[n] = 0;\n                freqsOut[n] = 0;\n            }\n        } else {\n            ampsOut[n] = 0;\n            freqsOut[n] = 0;\n        }\n    }\n    return result;\n}\n","/// <reference path=\"../../typings/functions.d.ts\" />\nexport function xtract_power(magnitudeArray) {\n    return null;\n}\n","/// <reference path=\"../../typings/functions.d.ts\" />\nimport {xtract_get_data_frames} from \"./xtract_get_data_frames\";\nimport {xtract_spectrum} from \"./xtract_spectrum\";\nexport function xtract_process_frame_data(array, func, sample_rate, frame_size, hop_size, arg_this) {\n    var frames = xtract_get_data_frames(array, frame_size, hop_size);\n    var result = {\n        num_frames: frames.length,\n        results: []\n    };\n    var frame_time = 0;\n    var data = {\n        frame_size: frame_size,\n        hop_size: hop_size,\n        sample_rate: sample_rate,\n        TimeData: undefined,\n        SpectrumData: undefined\n    };\n    var prev_data;\n    var prev_result;\n    for (var fn = 0; fn < frames.length; fn++) {\n        var frame = frames[fn];\n        data.TimeData = frame;\n        data.SpectrumData = xtract_spectrum(frame, sample_rate, true, false);\n        prev_result = func.call(arg_this || this, data, prev_data, prev_result);\n        var frame_result = {\n            time_start: frame_time,\n            result: prev_result\n        };\n        frame_time += frame_size / sample_rate;\n        prev_data = data;\n        data = {\n            frame_size: frame_size,\n            hop_size: hop_size,\n            sample_rate: sample_rate,\n            TimeData: undefined,\n            SpectrumData: undefined\n        };\n        result.results.push(frame_result);\n    }\n    return result;\n}\n","/// <reference path=\"../../typings/functions.d.ts\" />\nimport {transform, inverseTransform} from \"../freeFFT\";\nimport {xtract_get_data_frames} from \"./xtract_get_data_frames\";\nimport {xtract_assert_array} from \"./xtract_assert_array\";\n\nfunction filter(N, c) {\n    var c_b, Re, Im, b;\n    c_b = Math.floor(c * N);\n    Re = new Float64Array(N);\n    Im = new Float64Array(N);\n    var i, j;\n    for (i = 0; i < c_b; i++) {\n        Re[i] = 1;\n    }\n    for (i = N - c_b + 1; i < N; i++) {\n        Re[i] = 1;\n    }\n    inverseTransform(Re, Im);\n    // Scale and shift into Im\n    for (i = 0; i < N; i++) {\n        j = (i + (N >> 1)) % N;\n        Im[i] = Re[j] / N;\n        // Apply compute blackman-harris to Im\n        var rad = (Math.PI * i) / (N);\n        Im[i] *= 0.35875 - 0.48829 * Math.cos(2 * rad) + 0.14128 * Math.cos(4 * rad) - 0.01168 * Math.cos(6 * rad);\n    }\n    return Im;\n}\n\nfunction polyn(data, K) {\n    var N = data.length;\n    var x = [0, data[0], data[1]];\n    var dst = new Float64Array(K);\n    var ratio = K / N;\n    var tinc = 1 / ratio;\n    var n = 0,\n        t = 0,\n        k;\n    for (k = 0; k < K; k++) {\n        if (t === n) {\n            // Points lie on same time\n            dst[k] = data[n];\n        } else {\n            var y = (t - n - 1) * (t - n) * x[0] - 2 * (t - n - 1) * (t - n + 1) * x[1] + (t - n) * (t - n + 1) * x[2];\n            dst[k] = y / 2;\n        }\n        t += tinc;\n        if (t >= n + 1) {\n            n = Math.floor(t);\n            x[0] = data[n - 1];\n            x[1] = data[n];\n            if (n + 1 < N) {\n                x[2] = data[n + 1];\n            } else {\n                x[2] = 0.0;\n            }\n        }\n    }\n    return dst;\n}\n\nfunction zp(a) {\n    var b = new Float64Array(a.length * 2);\n    for (var n = 0; n < a.length; n++) {\n        b[n] = a[n];\n    }\n    return b;\n}\n\nfunction r2c(x) {\n    var real = zp(x);\n    var imag = new Float64Array(real.length);\n    transform(real, imag);\n    return {\n        real: real,\n        imag: imag\n    };\n}\n\nfunction W(N) {\n    var w = new Float64Array(N),\n        i;\n    for (i = 0; i < N; i++) {\n        var rad = (Math.PI * i) / (N);\n        w[i] = 0.35875 - 0.48829 * Math.cos(2 * rad) + 0.14128 * Math.cos(4 * rad) - 0.01168 * Math.cos(6 * rad);\n    }\n    return w;\n}\n\nfunction overlap(X, b) { // eslint-disable-line max-statements\n    var i, f;\n    var Y = new Float64Array(X.length);\n    var N = b.length;\n    var N2 = 2 * N;\n    var B = r2c(b);\n    var Xi = xtract_get_data_frames(X, N, N, false);\n    var Yi = xtract_get_data_frames(Y, N, N, false);\n    var x_last = new Float64Array(N);\n    var y_last = new Float64Array(N);\n    var w = W(N2);\n    var xF = {\n        real: new Float64Array(N2),\n        imag: new Float64Array(N2)\n    };\n    var yF = {\n        real: new Float64Array(N2),\n        imag: new Float64Array(N2)\n    };\n    for (f = 0; f < Xi.length; f++) {\n        for (i = 0; i < N; i++) {\n            xF.real[i] = x_last[i] * w[i];\n            xF.real[i + N] = Xi[f][i] * w[i + N];\n            x_last[i] = Xi[f][i];\n            xF.imag[i] = 0;\n            xF.imag[i + N] = 0;\n        }\n        transform(xF.real, xF.imag);\n        for (i = 0; i < N2; i++) {\n            yF.real[i] = xF.real[i] * B.real[i] - xF.imag[i] * B.imag[i];\n            yF.imag[i] = xF.imag[i] * B.real[i] + xF.real[i] * B.imag[i];\n        }\n        transform(yF.imag, yF.real);\n        // Perform fft_shift and scale\n        for (i = 0; i < N; i++) {\n            var h = yF.real[i + N] / N;\n            yF.real[i + N] = yF.real[i] / N;\n            yF.real[i] = h;\n        }\n        for (i = 0; i < N; i++) {\n            Yi[f][i] = (yF.real[i] + y_last[i]);\n            y_last[i] = yF.real[i + N];\n        }\n    }\n    return Y;\n}\n\nexport function xtract_resample(data, p, q, n) {\n    if (!xtract_assert_array(data))\n        return 0;\n    // Same function call as matlab:\n    // data is the array\n    // p is the target sample rate\n    // q is the source sample rate\n    // n is the desired filter order, n==1024 if undefined\n\n    // Determine which way to go\n    var b, N = data.length;\n    if (typeof n !== \"number\" || n <= 0) {\n        n = 512;\n    }\n    if (p === q) {\n        return data;\n    }\n    var ratio = (p / q);\n    var K = Math.floor(N * ratio);\n    var dst;\n    if (p > q) {\n        // Upsampling\n        // 1. Expand Data range\n        dst = polyn(data, K);\n        // 2. Filter out spurious energy above q\n        b = filter(n, 1 / ratio);\n        overlap(data, b);\n    } else {\n        // Downsampling\n        // 1. Filter out energy above p\n        b = filter(n, ratio / 2);\n        var ds1 = overlap(data, b);\n        // 2. Decrease data range\n        dst = polyn(ds1, K);\n    }\n    return dst;\n}\n","/// <reference path=\"../../typings/functions.d.ts\" />\nimport {xtract_assert_array} from \"./xtract_assert_array\";\n\nexport function xtract_rms_amplitude(timeArray) {\n    if (!xtract_assert_array(timeArray))\n        return 0;\n    var result = 0;\n    if (timeArray.reduce) {\n        result = timeArray.reduce(function (a, b) {\n            return a + b * b;\n        }, 0);\n    } else {\n        for (var n = 0; n < timeArray.length; n++) {\n            result += timeArray[n] * timeArray[n];\n        }\n    }\n    return Math.sqrt(result / timeArray.length);\n}\n","/// <reference path=\"../../typings/functions.d.ts\" />\nimport {xtract_assert_array} from \"./xtract_assert_array\";\nimport {xtract_array_sum} from \"./xtract_array_sum\";\n\nexport function xtract_rolloff(spectrum, sampleRate, threshold) {\n    if (!xtract_assert_array(spectrum))\n        return 0;\n    if (typeof sampleRate !== \"number\" || typeof threshold !== \"number\") {\n        console.log(\"xtract_rolloff requires sampleRate and threshold to be defined\");\n        return null;\n    }\n    var N = spectrum.length;\n    var K = N >> 1;\n    var amps = spectrum.subarray(0, K);\n\n    var pivot = 0,\n        temp = 0;\n\n    pivot = xtract_array_sum(amps);\n\n    pivot *= threshold / 100.0;\n    var n = 0;\n    while (temp < pivot) {\n        temp += amps[n];\n        n++;\n    }\n    return n * (sampleRate / (spectrum.length));\n}\n","/// <reference path=\"../../typings/functions.d.ts\" />\nimport {xtract_assert_array} from \"./xtract_assert_array\";\n\nexport function xtract_sharpness(barkBandsArray) {\n    if (!xtract_assert_array(barkBandsArray))\n        return 0;\n    var N = barkBandsArray.length;\n\n    var rv, sl = 0.0,\n        g = 0.0,\n        temp = 0.0;\n    for (var n = 0; n < N; n++) {\n        sl = Math.pow(barkBandsArray[n], 0.23);\n        g = (n < 15 ? 1.0 : 0.066 * Math.exp(0.171 * n));\n        temp += n * g * sl;\n    }\n    temp = 0.11 * temp / N;\n    return temp;\n}\n","/// <reference path=\"../../typings/functions.d.ts\" />\nimport {xtract_skewness_kurtosis} from \"./xtract_skewness_kurtosis\";\nexport function xtract_skewness(array, mean, standard_deviation) {\n    return xtract_skewness_kurtosis(array, mean, standard_deviation)[0];\n}\n","/// <reference path=\"../../typings/functions.d.ts\" />\nimport {xtract_assert_array} from \"./xtract_assert_array\";\nimport {xtract_mean} from \"./xtract_mean\";\nimport {xtract_standard_deviation} from \"./xtract_standard_deviation\";\nimport {xtract_variance} from \"./xtract_variance\";\n\nexport function xtract_skewness_kurtosis(array, mean, standard_deviation) {\n    if (!xtract_assert_array(array))\n        return [0.0, 0.0];\n    if (typeof mean !== \"number\") {\n        mean = xtract_mean(array);\n    }\n    if (typeof standard_deviation !== \"number\") {\n        standard_deviation = xtract_standard_deviation(array, xtract_variance(array, mean));\n    }\n    if (standard_deviation === 0) {\n        return [0.0, 0.0];\n    }\n    var result = [0.0, 0.0];\n    for (var n = 0; n < array.length; n++) {\n        result[0] += Math.pow((array[n] - mean) / standard_deviation, 3);\n        result[1] += Math.pow((array[n] - mean) / standard_deviation, 4);\n    }\n    result[0] /= array.length;\n    result[1] /= array.length;\n    return result;\n}\n","/// <reference path=\"../../typings/functions.d.ts\" />\nimport {xtract_assert_array} from \"./xtract_assert_array\";\n\nexport function xtract_smoothness(spectrum) {\n    if (!xtract_assert_array(spectrum))\n        return 0;\n    var prev = 0,\n        current = 0,\n        next = 0,\n        temp = 0;\n    var N = spectrum.length;\n    var K = N >> 1;\n    prev = Math.max(1e-5, spectrum[0]);\n    current = Math.max(1e-5, spectrum[1]);\n    for (var n = 1; n < K - 1; n++) {\n        next = Math.max(1e-5, spectrum[n + 1]);\n        temp += Math.abs(20.0 * Math.log(current) - (20.0 * Math.log(prev) + 20.0 * Math.log(current) + 20.0 * Math.log(next)) / 3.0);\n        prev = current;\n        current = next;\n    }\n    return temp;\n}\n","/// <reference path=\"../../typings/functions.d.ts\" />\nimport {xtract_assert_array} from \"./xtract_assert_array\";\nimport {xtract_array_sum} from \"./xtract_array_sum\";\nexport function xtract_spectral_centroid(spectrum) {\n    if (!xtract_assert_array(spectrum))\n        return 0;\n    var N = spectrum.length;\n    var n = N >> 1;\n    var amps = spectrum.subarray(0, n);\n    var freqs = spectrum.subarray(n);\n    var A_d = xtract_array_sum(amps);\n    if (A_d === 0.0) {\n        return 0.0;\n    }\n    var sum = 0.0;\n    while (n--) {\n        sum += freqs[n] * (amps[n] / A_d);\n    }\n    return sum;\n}\n","/// <reference path=\"../../typings/functions.d.ts\" />\nimport {xtract_assert_array} from \"./xtract_assert_array\";\nimport {inverseTransform} from \"../freeFFT.js\";\nfunction peak_picking(E, window) {\n    var o = [],\n        N = E.length,\n        n;\n    if (window === undefined) {\n        window = 5;\n    }\n    for (n = window; n < N - window - 1; n++) {\n        var max = 1,\n            m;\n        for (m = -window; m < window - 1; m++) {\n            if (E[n + m] > E[n]) {\n                max = 0;\n                break;\n            }\n        }\n        if (max === 1) {\n            o.push(n);\n        }\n    }\n    return o;\n}\n\nexport function xtract_spectral_fundamental(spectrum, sample_rate) {\n    // Based on work by Motegi and Shimamura\n    if (!xtract_assert_array(spectrum))\n        return 0;\n\n    var N = spectrum.length >> 1;\n    var amps = spectrum.subarray(0, N);\n    var freqs = spectrum.subarray(N);\n    var K = N * 2;\n\n    // Create the power spectrum\n    var power = new Float64Array(K);\n    var n;\n    for (n = 0; n < N; n++) {\n        power[n] = Math.pow(amps[n], 2);\n        power[K - 1 - n] = power[n];\n    }\n\n    // Perform autocorrelation using IFFT\n    var R = new Float64Array(K);\n    inverseTransform(power, R);\n    R = undefined;\n    R = power;\n    power = undefined;\n\n    // Get the peaks\n    var p = peak_picking(R, 5);\n    if (p.length === 0) {\n        return 0;\n    }\n    p = p[0];\n\n    p = p / sample_rate;\n    p = 1 / p;\n    return p;\n}\n","/// <reference path=\"../../typings/functions.d.ts\" />\nimport {xtract_assert_array} from \"./xtract_assert_array\";\n\nexport function xtract_spectral_inharmonicity(peakSpectrum, f0) {\n    if (!xtract_assert_array(peakSpectrum))\n        return 0;\n    if (typeof f0 !== \"number\") {\n        console.error(\"spectral_inharmonicity requires f0 to be defined.\");\n        return null;\n    }\n    var h = 0,\n        num = 0.0,\n        den = 0.0;\n    var N = peakSpectrum.length;\n    var K = N >> 1;\n    var amps = peakSpectrum.subarray(0, n);\n    var freqs = peakSpectrum.subarray(n);\n    for (var n = 0; n < K; n++) {\n        if (amps[n] !== 0.0) {\n            h = Math.floor(freqs[n] / f0 + 0.5);\n            var mag_sq = Math.pow(amps[n], 2);\n            num += Math.abs(freqs[n] - h * f0) * mag_sq;\n            den += mag_sq;\n        }\n    }\n    return (2 * num) / (f0 * den);\n}\n","/// <reference path=\"../../typings/functions.d.ts\" />\nimport {xtract_assert_array} from \"./xtract_assert_array\";\nimport {xtract_spectral_centroid} from \"./xtract_spectral_centroid\";\nimport {xtract_spectral_standard_deviation} from \"./xtract_spectral_standard_deviation\";\nimport {xtract_spectral_variance} from \"./xtract_spectral_variance\";\nimport {xtract_array_sum} from \"./xtract_array_sum\";\n\nexport function xtract_spectral_kurtosis(spectrum, spectral_centroid, spectral_standard_deviation) {\n    if (!xtract_assert_array(spectrum))\n        return 0;\n    if (typeof spectral_centroid !== \"number\") {\n        spectral_centroid = xtract_spectral_centroid(spectrum);\n    }\n    if (typeof spectral_standard_deviation !== \"number\") {\n        spectral_standard_deviation = xtract_spectral_standard_deviation(spectrum, xtract_spectral_variance(spectrum, spectral_centroid));\n    }\n    if (spectral_standard_deviation === 0) {\n        return Infinity;\n    }\n    var result = 0;\n    var N = spectrum.length;\n    var K = N >> 1;\n    var amps = spectrum.subarray(0, K);\n    var freqs = spectrum.subarray(K);\n    var A_d = xtract_array_sum(amps);\n    for (var n = 0; n < K; n++) {\n        result += Math.pow(freqs[n] - spectral_centroid, 4) * (amps[n] / A_d);\n    }\n    return result / Math.pow(spectral_standard_deviation, 4);\n}\n","/// <reference path=\"../../typings/functions.d.ts\" />\nimport {xtract_assert_array} from \"./xtract_assert_array\";\nimport {xtract_array_sum} from \"./xtract_array_sum\";\n\nexport function xtract_spectral_mean(spectrum) {\n    if (!xtract_assert_array(spectrum))\n        return 0;\n    var N = spectrum.length;\n    var n = N >> 1;\n    var amps = spectrum.subarray(0, n);\n    var sum = xtract_array_sum(amps);\n    var result = sum / n;\n    return result;\n}\n","/// <reference path=\"../../typings/functions.d.ts\" />\nimport {xtract_assert_array} from \"./xtract_assert_array\";\nimport {xtract_spectral_centroid} from \"./xtract_spectral_centroid\";\nimport {xtract_spectral_standard_deviation} from \"./xtract_spectral_standard_deviation\";\nimport {xtract_spectral_variance} from \"./xtract_spectral_variance\";\nimport {xtract_array_sum} from \"./xtract_array_sum\";\n\nexport function xtract_spectral_skewness(spectrum, spectral_centroid, spectral_standard_deviation) {\n    if (!xtract_assert_array(spectrum))\n        return 0;\n    if (typeof spectral_mean !== \"number\") {\n        spectral_centroid = xtract_spectral_centroid(spectrum);\n    }\n    if (typeof spectral_standard_deviation !== \"number\") {\n        spectral_standard_deviation = xtract_spectral_standard_deviation(spectrum, xtract_spectral_variance(spectrum, spectral_centroid));\n    }\n    if (spectral_standard_deviation === 0) {\n        return 0;\n    }\n    var result = 0;\n    var N = spectrum.length;\n    var K = N >> 1;\n    var amps = spectrum.subarray(0, K);\n    var freqs = spectrum.subarray(K);\n    var A_d = xtract_array_sum(amps);\n    for (var n = 0; n < K; n++) {\n        result += Math.pow(freqs[n] - spectral_centroid, 3) * (amps[n] / A_d);\n    }\n    result /= Math.pow(spectral_standard_deviation, 3);\n    return result;\n}\n","/// <reference path=\"../../typings/functions.d.ts\" />\nimport {xtract_assert_array} from \"./xtract_assert_array\";\nimport {xtract_array_sum} from \"./xtract_array_sum\";\n\nexport function xtract_spectral_slope(spectrum) {\n    if (!xtract_assert_array(spectrum))\n        return 0;\n    var F = 0.0,\n        FA = 0.0,\n        A = 0.0,\n        FXTRACT_SQ = 0.0;\n    var N = spectrum.length;\n    var M = N >> 1;\n    var amps = spectrum.subarray(0, M);\n    var freqs = spectrum.subarray(M);\n    F = xtract_array_sum(freqs);\n    A = xtract_array_sum(amps);\n    for (var n = 0; n < M; n++) {\n        FA += freqs[n] * amps[n];\n        FXTRACT_SQ += freqs[n] * freqs[n];\n    }\n    return (1.0 / A) * (M * FA - F * A) / (M * FXTRACT_SQ - F * F);\n}\n","/// <reference path=\"../../typings/functions.d.ts\" />\nimport {xtract_spectral_variance} from \"./xtract_spectral_variance\";\nexport function xtract_spectral_spread(spectrum, spectral_centroid) {\n    return xtract_spectral_variance(spectrum, spectral_centroid);\n}\n","/// <reference path=\"../../typings/functions.d.ts\" />\nimport {xtract_assert_array} from \"./xtract_assert_array\";\nimport {xtract_spectral_variance} from \"./xtract_spectral_variance\";\nexport function xtract_spectral_standard_deviation(spectrum, spectral_variance) {\n    if (!xtract_assert_array(spectrum))\n        return 0;\n    if (typeof spectral_variance !== \"number\") {\n        spectral_variance = xtract_spectral_variance(spectrum);\n    }\n    return Math.sqrt(spectral_variance);\n}\n","/// <reference path=\"../../typings/functions.d.ts\" />\nimport {xtract_assert_array} from \"./xtract_assert_array\";\nimport {xtract_spectral_centroid} from \"./xtract_spectral_centroid\";\nimport {xtract_array_sum} from \"./xtract_array_sum\";\nexport function xtract_spectral_variance(spectrum, spectral_centroid) {\n    if (!xtract_assert_array(spectrum))\n        return 0;\n    if (typeof spectral_centroid !== \"number\") {\n        spectral_centroid = xtract_spectral_centroid(spectrum);\n    }\n    var A = 0,\n        result = 0;\n    var N = spectrum.length;\n    var n = N >> 1;\n    var amps = spectrum.subarray(0, n);\n    var freqs = spectrum.subarray(n, N);\n    var A_d = xtract_array_sum(amps);\n    while (n--) {\n        result += Math.pow(freqs[n] - spectral_centroid, 2) * (amps[n] / A_d);\n    }\n    return result;\n}\n","/// <reference path=\"../../typings/functions.d.ts\" />\nimport {xtract_assert_array} from \"./xtract_assert_array\";\nimport {xtract_array_normalise} from \"./xtract_array_normalise\";\nimport {transform} from \"../freeFFT\";\n\nexport function xtract_spectrum(array, sample_rate, withDC, normalise) {\n    (function (array, sample_rate) {\n        if (typeof sample_rate !== \"number\") {\n            throw (\"Sample Rate must be defined\");\n        }\n    })(array, sample_rate);\n    if (!xtract_assert_array(array)) {\n        return 0;\n    }\n    withDC = (withDC === true);\n    normalise = (normalise === true);\n\n    var N = array.length;\n    var result, align = 0;\n    var amps;\n    var freqs;\n    if (withDC) {\n        result = new Float64Array(N + 2);\n    } else {\n        align = 1;\n        result = new Float64Array(N);\n    }\n    amps = result.subarray(0, result.length / 2);\n    freqs = result.subarray(result.length / 2);\n    var reals = new Float64Array(N);\n    var imags = new Float64Array(N);\n    array.forEach(function (v, i) {\n        reals[i] = v;\n    });\n    transform(reals, imags);\n    for (var k = align; k <= result.length / 2; k++) {\n        amps[k - align] = Math.sqrt((reals[k] * reals[k]) + (imags[k] * imags[k])) / array.length;\n        freqs[k - align] = (2 * k / N) * (sample_rate / 2);\n    }\n    if (normalise) {\n        amps = xtract_array_normalise(amps);\n    }\n    return result;\n}\n","/// <reference path=\"../../typings/functions.d.ts\" />\nimport {xtract_assert_array} from \"./xtract_assert_array\";\nimport {xtract_variance} from \"./xtract_variance\";\nexport function xtract_standard_deviation(array, variance) {\n    if (!xtract_assert_array(array))\n        return 0;\n    if (typeof variance !== \"number\") {\n        variance = xtract_variance(array);\n    }\n    return Math.sqrt(variance);\n}\n","/// <reference path=\"../../typings/functions.d.ts\" />\nimport {xtract_assert_array} from \"./xtract_assert_array\";\nimport {xtract_array_sum} from \"./xtract_array_sum\";\n\nexport function xtract_sum(data) {\n    if (!xtract_assert_array(data))\n        return 0;\n    return xtract_array_sum(data);\n}\n","/// <reference path=\"../../typings/functions.d.ts\" />\nimport {xtract_array_sum} from \"./xtract_array_sum\";\nexport function xtract_temporal_centroid(energyArray, sample_rate, window_ms) {\n    if (typeof sample_rate !== \"number\") {\n        console.error(\"xtract_temporal_centroid requires sample_rate to be a number\");\n        return;\n    }\n    if (typeof window_ms !== \"number\") {\n        console.log(\"xtract_temporal_centroid assuming window_ms = 100ms\");\n        window_ms = 100.0;\n    }\n    if (window_ms <= 0) {\n        window_ms = 100.0;\n    }\n    var ts = 1.0 / sample_rate;\n    var L = sample_rate * (window_ms / 1000.0);\n    var den = xtract_array_sum(energyArray);\n    var num = 0.0;\n    for (var n = 0; n < energyArray.length; n++) {\n        num += energyArray[n] * (n * L * ts);\n    }\n    var result = num / den;\n    return result;\n}\n","/// <reference path=\"../../typings/functions.d.ts\" />\nimport {xtract_assert_array} from \"./xtract_assert_array\";\nimport {xtract_flatness_db} from \"./xtract_flatness_db\";\n\nexport function xtract_tonality(spectrum, flatness_db) {\n    if (!xtract_assert_array(spectrum))\n        return 0;\n    if (typeof flatness_db !== \"number\") {\n        flatness_db = xtract_flatness_db(spectrum);\n    }\n    return Math.min(flatness_db / -60.0, 1);\n}\n","/// <reference path=\"../../typings/functions.d.ts\" />\nimport {xtract_assert_array} from \"./xtract_assert_array\";\nexport function xtract_tristimulus(spectrum, f0) {\n    var trist = [0.0, 0.0, 0.0];\n    if (!xtract_assert_array(spectrum))\n        return trist;\n    if (typeof f0 !== \"number\") {\n        throw (\"xtract_tristimulus requires f0 to be defined and a number\");\n    }\n    var h = 0,\n        den = 0.0,\n        p = [0, 0, 0, 0, 0],\n        temp = 0.0,\n        num = 0.0;\n    var N = spectrum.length;\n    var K = N >> 1;\n    var amps = spectrum.subarray(0, K);\n    var freqs = spectrum.subarray(K);\n\n    for (var i = 0; i < K; i++) {\n        temp = amps[i];\n        if (temp !== 0) {\n            den += temp;\n            h = Math.floor(freqs[i] / f0 + 0.5);\n            p[h - 1] += temp;\n        }\n    }\n\n    if (den !== 0.0) {\n        trist[0] = p[0] / den;\n        trist[1] = (p[1] + p[2] + p[3]) / den;\n        trist[2] = p[4] / den;\n    }\n    return trist;\n}\n\nexport function xtract_tristimulus_1(spectrum, f0) {\n    return xtract_tristimulus(spectrum, f0)[0];\n}\n\nexport function xtract_tristimulus_2(spectrum, f0) {\n    return xtract_tristimulus(spectrum, f0)[1];\n}\n\nexport function xtract_tristimulus_3(spectrum, f0) {\n    return xtract_tristimulus(spectrum, f0)[2];\n}\n","/// <reference path=\"../../typings/functions.d.ts\" />\nimport {xtract_assert_array} from \"./xtract_assert_array\";\nimport {xtract_mean} from \"./xtract_mean\";\n\nexport function xtract_variance(array, mean) {\n    if (!xtract_assert_array(array))\n        return 0;\n    if (typeof mean !== \"number\") {\n        mean = xtract_mean(array);\n    }\n    if (!xtract_assert_array(array))\n        return 0;\n    if (typeof mean !== \"number\") {\n        mean = xtract_mean(array);\n    }\n    var result = 0.0;\n    if (array.reduce) {\n        result = array.reduce(function (a, b) {\n            a += Math.pow(b - mean, 2);\n            return a;\n        }, 0);\n    } else {\n        for (var n = 0; n < array.length; n++) {\n            result += Math.pow(array[n] - mean, 2);\n        }\n    }\n    result /= (array.length - 1);\n    return result;\n}\n","/// <reference path=\"../../typings/functions.d.ts\" />\nimport {xtract_assert_array} from \"./xtract_assert_array\";\nimport {xtract_array_sum} from \"./xtract_array_sum\";\nimport {xtract_mean} from \"./xtract_mean\";\n\nexport function xtract_wavelet_f0(timeArray, sampleRate, pitchtracker) { // eslint-disable-line max-statements\n    if (!xtract_assert_array(timeArray))\n        return 0;\n    if (pitchtracker === undefined) {\n        throw (\"xtract_wavelet_f0 requires pitchtracker to be defined\");\n    }\n    if (xtract_array_sum(timeArray) === 0) {\n        return;\n    }\n\n    function _power2p(value) {\n        if (value === 0) {\n            return 1;\n        }\n        if (value === 2) {\n            return 1;\n        }\n        if (value & 0x1) {\n            return 0;\n        }\n        return (_power2p(value >> 1));\n    }\n\n    function _bitcount(value) {\n        if (value === 0) {\n            return 0;\n        }\n        if (value === 1) {\n            return 1;\n        }\n        if (value === 2) {\n            return 2;\n        }\n        return _bitcount(value >> 1) + 1;\n    }\n\n    function _ceil_power2(value) {\n        if (_power2p(value)) {\n            return value;\n        }\n\n        if (value === 1) {\n            return 2;\n        }\n        var j, i = _bitcount(value);\n        var res = 1;\n        for (j = 0; j < i; j++) {\n            res <<= 1;\n        }\n        return res;\n    }\n\n    function _floor_power2(value) {\n        if (_power2p(value)) {\n            return value;\n        }\n        return _ceil_power2(value) / 2;\n    }\n\n    function _iabs(x) {\n        if (x >= 0) return x;\n        return -x;\n    }\n\n    function _2power(i) {\n        var res = 1,\n            j;\n        for (j = 0; j < i; j++) {\n            res <<= 1;\n        }\n        return res;\n    }\n\n    function dywapitch_neededsamplecount(minFreq) {\n        var nbSam = 3 * 44100 / minFreq; // 1017. for 130 Hz\n        nbSam = _ceil_power2(nbSam); // 1024\n        return nbSam;\n    }\n\n    function bodyLoop() { // eslint-disable-line max-statements\n        delta = Math.floor(44100 / (_2power(curLevel) * 3000));\n        if (curSamNb < 2) {\n            cont = false;\n            return;\n        }\n        var dv, previousDV = -1000;\n        var nbMins = 0,\n            nbMaxs = 0;\n        var lastMinIndex = -1000000;\n        var lastmaxIndex = -1000000;\n        var findMax = 0;\n        var findMin = 0;\n        (function () { // eslint-disable-line complexity\n            for (i = 2; i < curSamNb; i++) {\n                si = sam[i] - theDC;\n                si1 = sam[i - 1] - theDC;\n\n                if (si1 <= 0 && si > 0) {\n                    findMax = 1;\n                }\n                if (si1 >= 0 && si < 0) {\n                    findMin = 1;\n                }\n\n                // min or max ?\n                dv = si - si1;\n\n                if (previousDV > -1000) {\n\n                    if (findMin && previousDV < 0 && dv >= 0) {\n                        // minimum\n                        if (Math.abs(si) >= ampltitudeThreshold) {\n                            if (i > lastMinIndex + delta) {\n                                mins[nbMins++] = i;\n                                lastMinIndex = i;\n                                findMin = 0;\n                            }\n                        }\n                    }\n\n                    if (findMax && previousDV > 0 && dv <= 0) {\n                        // maximum\n                        if (Math.abs(si) >= ampltitudeThreshold) {\n                            if (i > lastmaxIndex + delta) {\n                                maxs[nbMaxs++] = i;\n                                lastmaxIndex = i;\n                                findMax = 0;\n                            }\n                        }\n                    }\n                }\n\n                previousDV = dv;\n            }\n        })();\n\n        if (nbMins === 0 && nbMaxs === 0) {\n            cont = false;\n            return;\n        }\n\n        var d;\n        //memset(distances, 0, samplecount*sizeof(int));\n        var distances = new Int32Array(samplecount);\n        (function () {\n            for (i = 0; i < nbMins; i++) {\n                for (j = 1; j < 3; j++) {\n                    if (i + j < nbMins) {\n                        d = _iabs(mins[i] - mins[i + j]);\n                        distances[d] = distances[d] + 1;\n                    }\n                }\n            }\n            for (i = 0; i < nbMaxs; i++) {\n                for (j = 1; j < 3; j++) {\n                    if (i + j < nbMaxs) {\n                        d = _iabs(maxs[i] - maxs[i + j]);\n                        //asLog(\"dywapitch i=%ld j=%ld d=%ld\\n\", i, j, d);\n                        distances[d] = distances[d] + 1;\n                    }\n                }\n            }\n        })();\n\n        var bestDistance = -1;\n        var bestValue = -1;\n        (function () {\n            for (i = 0; i < curSamNb; i++) {\n                var summed = 0;\n                for (j = -delta; j <= delta; j++) {\n                    if (i + j >= 0 && i + j < curSamNb)\n                        summed += distances[i + j];\n                }\n                //asLog(\"dywapitch i=%ld summed=%ld bestDistance=%ld\\n\", i, summed, bestDistance);\n                if (summed === bestValue) {\n                    if (i === 2 * bestDistance)\n                        bestDistance = i;\n\n                } else if (summed > bestValue) {\n                    bestValue = summed;\n                    bestDistance = i;\n                }\n            }\n        })();\n        var distAvg = 0.0;\n        var nbDists = 0;\n        (function () {\n            for (j = -delta; j <= delta; j++) {\n                if (bestDistance + j >= 0 && bestDistance + j < samplecount) {\n                    var nbDist = distances[bestDistance + j];\n                    if (nbDist > 0) {\n                        nbDists += nbDist;\n                        distAvg += (bestDistance + j) * nbDist;\n                    }\n                }\n            }\n        })();\n        // this is our mode distance !\n        distAvg /= nbDists;\n\n        // continue the levels ?\n        if (curModeDistance > -1.0) {\n            var similarity = Math.abs(distAvg * 2 - curModeDistance);\n            if (similarity <= 2 * delta) {\n                //if DEBUGG then put \"similarity=\"&similarity&&\"delta=\"&delta&&\"ok\"\n                //asLog(\"dywapitch similarity=%f OK !\\n\", similarity);\n                // two consecutive similar mode distances : ok !\n                pitchF = 44100 / (_2power(curLevel - 1) * curModeDistance);\n                cont = false;\n                return;\n            }\n            //if DEBUGG then put \"similarity=\"&similarity&&\"delta=\"&delta&&\"not\"\n        }\n\n        // not similar, continue next level\n        curModeDistance = distAvg;\n\n        curLevel = curLevel + 1;\n        if (curLevel >= 6) {\n            // put \"max levels reached, exiting\"\n            //asLog(\"dywapitch max levels reached, exiting\\n\");\n            cont = false;\n            return;\n        }\n\n        // downsample\n        if (curSamNb < 2) {\n            //asLog(\"dywapitch not enough samples, exiting\\n\");\n            cont = false;\n            return;\n        }\n        (function () {\n            for (i = 0; i < curSamNb / 2; i++) {\n                sam[i] = (sam[2 * i] + sam[2 * i + 1]) / 2.0;\n            }\n        })();\n        curSamNb /= 2;\n    }\n\n    function _dywapitch_dynamicprocess(pitchtracker, pitch) { // eslint-disable-line complexity\n        if (pitch === 0.0) {\n            return -1.0;\n        }\n\n        var estimatedPitch = -1,\n            acceptedError = 0.2,\n            maxConfidence = 5;\n        if (pitch !== -1) {\n            // I have a pitch here\n\n            if (pitchtracker._prevPitch === -1) {\n                // no Previous\n                estimatedPitch = pitch;\n                pitchtracker._prevPitch = pitch;\n                pitchtracker._pitchConfidence = 1;\n            } else if (Math.abs(pitchtracker._prevPitch - pitch) / pitch < acceptedError) {\n                // similar: remember and increment\n                pitchtracker._prevPitch = pitch;\n                estimatedPitch = pitch;\n                pitchtracker._pitchConfidence = Math.min(maxConfidence, pitchtracker._pitchConfidence + 1);\n            } else if ((pitchtracker._pitchConfidence >= maxConfidence - 2) && Math.abs(pitchtracker._pitchConfidence - 2 * pitch) / (2 * pitch) < acceptedError) {\n                // close to half the last pitch, which is trusted\n                estimatedPitch = 2 * pitch;\n                pitchtracker._prevPitch = estimatedPitch;\n            } else if ((pitchtracker._pitchConfidence >= maxConfidence - 2) && Math.abs(pitchtracker._pitchConfidence - 0.5 * pitch) / (0.5 * pitch) < acceptedError) {\n                estimatedPitch = 0.5 * pitch;\n                pitchtracker._prevPitch = estimatedPitch;\n            } else {\n                // Very different value\n                if (pitchtracker._pitchConfidence >= 1) {\n                    // previous trusted\n                    estimatedPitch = pitchtracker._prevPitch;\n                    pitchtracker._pitchConfidence = Math.max(0, pitchtracker._pitchConfidence - 1);\n                } else {\n                    estimatedPitch = pitch;\n                    pitchtracker._prevPitch = pitch;\n                    pitchtracker._pitchConfidence = 1;\n                }\n            }\n        } else {\n            // No pitch\n            if (pitchtracker._prevPitch !== -1) {\n                // was a pitch before\n                if (pitchtracker._pitchConfidence >= 1) {\n                    // previous trusted\n                    estimatedPitch = pitchtracker._prevPitch;\n                    pitchtracker._pitchConfidence = Math.max(0, pitchtracker._pitchConfidence - 1);\n                } else {\n                    pitchtracker._prevPitch = -1;\n                    estimatedPitch = -1;\n                    pitchtracker._pitchConfidence = 0;\n                }\n            }\n        }\n\n        if (pitchtracker._pitchConfidence >= 1) {\n            pitch = estimatedPitch;\n        } else {\n            pitch = -1;\n        }\n        if (pitch === -1) {\n            pitch = 0.0;\n        }\n        return pitch;\n    }\n\n    var _minmax = {\n        index: undefined,\n        next: undefined\n    };\n    //_dywapitch_computeWaveletPitch(samples, startsample, samplecount)\n    var samples = timeArray,\n        startsample = 0,\n        samplecount = timeArray.length;\n    var pitchF = 0.0;\n    var i, j, si, si1;\n\n    samplecount = _floor_power2(samplecount);\n    var sam = new Float64Array(samplecount);\n    for (i = 0; i < samplecount; i++) {\n        sam[i] = samples[i];\n    }\n\n    var curSamNb = samplecount;\n\n    var mins = new Int32Array(samplecount);\n    var maxs = new Int32Array(samplecount);\n\n    //var maxFLWTlevels = 6;\n    //var maxF = 3000;\n    //var differenceLevelsN = 3;\n    //var maximaThresholdRatio = 0.75;\n    var theDC = getTheDC(sam, samplecount);\n\n    function getTheDC(sam, samplecount) {\n        return xtract_mean(sam.subarray(samplecount));\n    }\n\n    function getamplitudeMax(sam, samplecount) {\n        var si, i;\n        var minValue = 0.0,\n            maxValue = 0.0;\n        for (i = 0; i < samplecount; i++) {\n            si = sam[i];\n            if (si > maxValue) {\n                maxValue = si;\n            }\n            if (si < minValue) {\n                minValue = si;\n            }\n        }\n        maxValue = maxValue - theDC;\n        minValue = minValue - theDC;\n        return (maxValue > -minValue ? maxValue : -minValue);\n    }\n    var ampltitudeThreshold = getamplitudeMax(sam, samplecount) * 0.75;\n\n    var curLevel = 0;\n    var curModeDistance = -1;\n    var delta;\n\n    var cont = true;\n\n    while (cont) {\n        bodyLoop();\n    }\n\n    //_dywapitch_dynamicprocess(pitchtracker, pitch)\n    return _dywapitch_dynamicprocess(pitchtracker, pitchF);\n}\n","/// <reference path=\"../../typings/functions.d.ts\" />\nimport {xtract_assert_array} from \"./xtract_assert_array\";\n\nexport function xtract_yin(array) {\n    // Uses the YIN process\n    if (!xtract_assert_array(array))\n        return 0;\n    var T = array.length;\n    var d = new Float64Array(array.length);\n    var r = new array.constructor(array.length);\n\n    var d_sigma = 0;\n    for (var tau = 1; tau < T; tau++) {\n        var sigma = 0;\n        for (var t = 1; t < T - tau; t++) {\n            sigma += Math.pow(array[t] - array[t + tau], 2);\n        }\n        d[tau] = sigma;\n        d_sigma += sigma;\n        r[tau] = d[tau] / ((1 / tau) * d_sigma);\n    }\n    return r;\n}\n","/// <reference path=\"../../typings/functions.d.ts\" />\nimport {xtract_assert_array} from \"./xtract_assert_array\";\nexport function xtract_zcr(timeArray) {\n    if (!xtract_assert_array(timeArray))\n        return 0;\n    var result = 0;\n    for (var n = 1; n < timeArray.length; n++) {\n        if (timeArray[n] * timeArray[n - 1] < 0) {\n            result++;\n        }\n    }\n    return result / timeArray.length;\n}\n","import {\n    xtract_is_denormal\n} from \"./functions/xtract_is_denormal\";\nimport {\n    xtract_assert_array\n} from \"./functions/xtract_assert_array\";\nimport {\n    xtract_assert_positive_integer\n} from \"./functions/xtract_assert_positive_integer\";\nimport {\n    xtract_array_sum\n} from \"./functions/xtract_array_sum\";\nimport {\n    xtract_array_copy\n} from \"./functions/xtract_array_copy\";\nimport {\n    xtract_array_min\n} from \"./functions/xtract_array_min\";\nimport {\n    xtract_array_max\n} from \"./functions/xtract_array_max\";\nimport {\n    xtract_array_scale\n} from \"./functions/xtract_array_scale\";\nimport {\n    xtract_array_normalise\n} from \"./functions/xtract_array_normalise\";\nimport {\n    xtract_array_bound\n} from \"./functions/xtract_array_bound\";\nimport {\n    xtract_array_interlace\n} from \"./functions/xtract_array_interlace\";\nimport {\n    xtract_array_deinterlace\n} from \"./functions/xtract_array_deinterlace\";\nimport {\n    xtract_get_number_of_frames\n} from \"./functions/xtract_get_number_of_frames\";\nimport {\n    xtract_get_data_frames\n} from \"./functions/xtract_get_data_frames\";\nimport {\n    xtract_process_frame_data\n} from \"./functions/xtract_process_frame_data\";\nimport {\n    xtract_array_to_JSON\n} from \"./functions/xtract_array_to_JSON\";\nimport {\n    xtract_frame_from_array\n} from \"./functions/xtract_frame_from_array\";\nimport {\n    xtract_mean\n} from \"./functions/xtract_mean\";\nimport {\n    xtract_temporal_centroid\n} from \"./functions/xtract_temporal_centroid\";\nimport {\n    xtract_variance\n} from \"./functions/xtract_variance\";\nimport {\n    xtract_standard_deviation\n} from \"./functions/xtract_standard_deviation\";\nimport {\n    xtract_average_deviation\n} from \"./functions/xtract_average_deviation\";\nimport {\n    xtract_skewness_kurtosis\n} from \"./functions/xtract_skewness_kurtosis\";\nimport {\n    xtract_skewness\n} from \"./functions/xtract_skewness\";\nimport {\n    xtract_kurtosis\n} from \"./functions/xtract_kurtosis\";\nimport {\n    xtract_spectral_centroid\n} from \"./functions/xtract_spectral_centroid\";\nimport {\n    xtract_spectral_mean\n} from \"./functions/xtract_spectral_mean\";\nimport {\n    xtract_spectral_variance\n} from \"./functions/xtract_spectral_variance\";\nimport {\n    xtract_spectral_spread\n} from \"./functions/xtract_spectral_spread\";\nimport {\n    xtract_spectral_standard_deviation\n} from \"./functions/xtract_spectral_standard_deviation\";\nimport {\n    xtract_spectral_skewness\n} from \"./functions/xtract_spectral_skewness\";\nimport {\n    xtract_spectral_kurtosis\n} from \"./functions/xtract_spectral_kurtosis\";\nimport {\n    xtract_irregularity_k\n} from \"./functions/xtract_irregularity_k\";\nimport {\n    xtract_irregularity_j\n} from \"./functions/xtract_irregularity_j\";\nimport {\n    xtract_tristimulus,\n    xtract_tristimulus_1,\n    xtract_tristimulus_2,\n    xtract_tristimulus_3\n} from \"./functions/xtract_tristimulus\";\nimport {\n    xtract_smoothness\n} from \"./functions/xtract_smoothness\";\nimport {\n    xtract_zcr\n} from \"./functions/xtract_zcr\";\nimport {\n    xtract_rolloff\n} from \"./functions/xtract_rolloff\";\nimport {\n    xtract_loudness\n} from \"./functions/xtract_loudness\";\nimport {\n    xtract_flatness\n} from \"./functions/xtract_flatness\";\nimport {\n    xtract_flatness_db\n} from \"./functions/xtract_flatness_db\";\nimport {\n    xtract_tonality\n} from \"./functions/xtract_tonality\";\nimport {\n    xtract_crest\n} from \"./functions/xtract_crest\";\nimport {\n    xtract_noisiness\n} from \"./functions/xtract_noisiness\";\nimport {\n    xtract_rms_amplitude\n} from \"./functions/xtract_rms_amplitude\";\nimport {\n    xtract_spectral_inharmonicity\n} from \"./functions/xtract_spectral_inharmonicity\";\nimport {\n    xtract_power\n} from \"./functions/xtract_power\";\nimport {\n    xtract_odd_even_ratio\n} from \"./functions/xtract_odd_even_ratio\";\nimport {\n    xtract_sharpness\n} from \"./functions/xtract_sharpness\";\nimport {\n    xtract_spectral_slope\n} from \"./functions/xtract_spectral_slope\";\nimport {\n    xtract_lowhigh\n} from \"./functions/xtract_lowhigh\";\nimport {\n    xtract_lowest_value\n} from \"./functions/xtract_lowest_value\";\nimport {\n    xtract_highest_value\n} from \"./functions/xtract_highest_value\";\nimport {\n    xtract_sum\n} from \"./functions/xtract_sum\";\nimport {\n    xtract_nonzero_count\n} from \"./functions/xtract_nonzero_count\";\nimport {\n    xtract_hps\n} from \"./functions/xtract_hps\";\nimport {\n    xtract_f0\n} from \"./functions/xtract_f0\";\nimport {\n    xtract_failsafe_f0\n} from \"./functions/xtract_failsafe_f0\";\nimport {\n    xtract_wavelet_f0\n} from \"./functions/xtract_wavelet_f0\";\nimport {\n    xtract_midicent\n} from \"./functions/xtract_midicent\";\nimport {\n    xtract_spectral_fundamental\n} from \"./functions/xtract_spectral_fundamental\";\nimport {\n    xtract_energy\n} from \"./functions/xtract_energy\";\nimport {\n    xtract_spectrum\n} from \"./functions/xtract_spectrum\";\nimport {\n    xtract_complex_spectrum\n} from \"./functions/xtract_complex_spectrum\";\nimport {\n    xtract_mfcc\n} from \"./functions/xtract_mfcc\";\nimport {\n    xtract_dct\n} from \"./functions/xtract_dct\";\nimport {\n    xtract_dct_2\n} from \"./functions/xtract_dct_2\";\nimport {\n    xtract_autocorrelation\n} from \"./functions/xtract_autocorrelation\";\nimport {\n    xtract_amdf\n} from \"./functions/xtract_amdf\";\nimport {\n    xtract_asdf\n} from \"./functions/xtract_asdf\";\nimport {\n    xtract_bark_coefficients\n} from \"./functions/xtract_bark_coefficients\";\nimport {\n    xtract_peak_spectrum\n} from \"./functions/xtract_peak_spectrum\";\nimport {\n    xtract_harmonic_spectrum\n} from \"./functions/xtract_harmonic_spectrum\";\nimport {\n    xtract_lpc\n} from \"./functions/xtract_lpc\";\nimport {\n    xtract_lpcc\n} from \"./functions/xtract_lpcc\";\nimport {\n    xtract_pcp\n} from \"./functions/xtract_pcp\";\nimport {\n    xtract_yin\n} from \"./functions/xtract_yin\";\nimport {\n    xtract_onset\n} from \"./functions/xtract_onset\";\nimport {\n    xtract_resample\n} from \"./functions/xtract_resample\";\nimport {\n    xtract_init_dft\n} from \"./functions/xtract_init_dft\";\nimport {\n    xtract_init_dct\n} from \"./functions/xtract_init_dct\";\nimport {\n    xtract_init_mfcc\n} from \"./functions/xtract_init_mfcc\";\nimport {\n    xtract_init_wavelet\n} from \"./functions/xtract_init_wavelet\";\nimport {\n    xtract_init_pcp\n} from \"./functions/xtract_init_pcp\";\nimport {\n    xtract_init_bark\n} from \"./functions/xtract_init_bark\";\nimport {\n    xtract_init_chroma\n} from \"./functions/xtract_init_chroma\";\nimport {\n    xtract_apply_window\n} from \"./functions/xtract_apply_window\";\nimport {\n    xtract_create_window\n} from \"./functions/xtract_create_window\";\nimport {\n    xtract_chroma\n} from \"./functions/xtract_chroma\";\n\nimport {\n    HarmonicSpectrumData\n} from \"./objects/HarmonicSpectrumData\";\nimport {\n    PeakSpectrumData\n} from \"./objects/PeakSpectrumData\";\nimport {\n    SpectrumData\n} from \"./objects/SpectrumData\";\nimport {\n    TimeData\n} from \"./objects/TimeData\";\n\n\nif (typeof AnalyserNode !== \"undefined\") {\n\n    AnalyserNode.prototype.timeData = undefined;\n    AnalyserNode.prototype.spectrumData = undefined;\n    AnalyserNode.prototype.callbackObject = undefined;\n    AnalyserNode.prototype.fooGain = undefined;\n    AnalyserNode.prototype.getXtractData = function () {\n        if (this.timeData === undefined || this.scpectrumData === undefined) {\n            this.timeData = new TimeData(this.fftSize, this.context.sampleRate);\n            this.spectrumData = new SpectrumData(this.frequencyBinCount, this.context.sampleRate);\n        }\n        var dst = new Float32Array(this.fftSize);\n        var i;\n        if (this.getFloatTimeDomainData) {\n            this.getFloatTimeDomainData(dst);\n        } else {\n            var view = new Uint8Array(this.fftSize);\n            this.getByteTimeDomainData(view);\n            for (i = 0; i < this.fftSize; i++) {\n                dst[i] = view[i];\n                dst[i] = (dst[i] / 127.5) - 1;\n            }\n        }\n        this.timeData.copyDataFrom(dst);\n        this.timeData.result.spectrum = this.spectrumData;\n        var LogStore = new Float32Array(this.frequencyBinCount);\n        this.getFloatFrequencyData(LogStore);\n        for (i = 0; i < this.frequencyBinCount; i++) {\n            LogStore[i] = Math.pow(10.0, LogStore[i] / 20);\n        }\n        this.spectrumData.copyDataFrom(LogStore);\n        return this.timeData;\n    };\n    AnalyserNode.prototype.previousFrame = undefined;\n    AnalyserNode.prototype.previousResult = undefined;\n    AnalyserNode.prototype.frameCallback = function (func, arg_this) {\n        // Perform a callback on each frame\n        // The function callback has the arguments (current_frame, previous_frame, previous_result)\n        if (this.callbackObject === undefined) {\n            this.callbackObject = this.context.createScriptProcessor(this.fftSize, 1, 1);\n            this.connect(this.callbackObject);\n        }\n        var _func = func;\n        var _arg_this = arg_this;\n        var self = this;\n        this.callbackObject.onaudioprocess = function (e) {\n            var current_frame = self.getXtractData();\n            this.previousResult = _func.call(_arg_this, current_frame, this.previousFrame, this.previousResult);\n            this.previousFrame = current_frame;\n            var N = e.outputBuffer.length;\n            var output = new Float32Array(N);\n            var result = this.previousResult;\n            if (typeof this.previousResult !== \"number\") {\n                result = 0.0;\n            }\n            for (var i = 0; i < N; i++) {\n                output[i] = result;\n            }\n            e.outputBuffer.copyToChannel(output, 0, 0);\n        };\n\n        // For chrome and other efficiency browsers\n        if (!this.fooGain) {\n            this.fooGain = this.context.createGain();\n            this.fooGain.gain.value = 0;\n            this.callbackObject.connect(this.fooGain);\n            this.fooGain.connect(this.context.destination);\n        }\n    };\n\n    AnalyserNode.prototype.clearCallback = function () {\n        this.disconnect(this.callbackObject);\n        this.callbackObject.onaudioprocess = undefined;\n    };\n\n    AnalyserNode.prototype.xtractFrame = function (func, arg_this) {\n        // Collect the current frame of data and perform the callback function\n        func.call(arg_this, this.getXtractData());\n    };\n}\n\nif (typeof AudioBuffer !== \"undefined\") {\n\n    AudioBuffer.prototype.xtract_get_data_frames = function (frame_size, hop_size) {\n        if (hop_size === undefined) {\n            hop_size = frame_size;\n        }\n        (function () {\n            if (!xtract_assert_positive_integer(frame_size)) {\n                throw (\"xtract_get_data_frames requires the frame_size to be defined, positive integer\");\n            }\n            if (!xtract_assert_positive_integer(hop_size)) {\n                throw (\"xtract_get_data_frames requires the hop_size to be a positive integer\");\n            }\n        })();\n        this.frames = [];\n        var N = this.length;\n        var K = this.xtract_get_number_of_frames(hop_size);\n        for (var c = 0; c < this.numberOfChannels; c++) {\n            var data = this.getChannelData(c);\n            this.frames[c] = [];\n            for (var k = 0; k < K; k++) {\n                var frame = new TimeData(frame_size, this.sampleRate);\n                frame.copyDataFrom(data.subarray(hop_size * k, hop_size * k + frame_size));\n                this.frames[c].push(frame);\n                frame = undefined;\n            }\n            data = undefined;\n        }\n        return this.frames;\n    };\n\n    AudioBuffer.prototype.xtract_get_number_of_frames = function (hop_size) {\n        return xtract_get_number_of_frames(this, hop_size);\n    };\n\n    AudioBuffer.prototype.xtract_get_frame = function (dst, channel, index, frame_size) {\n        (function () {\n            if (typeof dst !== \"object\" || dst.constructor !== Float32Array) {\n                throw (\"dst must be a Float32Array object equal in length to hop_size\");\n            }\n            if (!xtract_assert_positive_integer(channel)) {\n                throw (\"xtract_get_frame requires the channel to be an integer value\");\n            }\n            if (!xtract_assert_positive_integer(index)) {\n                throw (\"xtract_get_frame requires the index to be an integer value\");\n            }\n            if (!xtract_assert_positive_integer(frame_size)) {\n                throw (\"xtract_get_frame requires the frame_size to be defined, positive integer\");\n            }\n        })();\n        if (channel < 0 || channel > this.numberOfChannels) {\n            throw (\"channel number \" + channel + \" out of bounds\");\n        }\n        var K = this.xtract_get_number_of_frames(frame_size);\n        if (index < 0 || index >= K) {\n            throw (\"index number \" + index + \" out of bounds\");\n        }\n        return this.copyFromChannel(dst, channel, frame_size * index);\n    };\n\n    AudioBuffer.prototype.xtract_process_frame_data = function () {\n        throw (\"AudioBuffer::xtract_process_frame_data has been deprecated\");\n    };\n}\n\n\nexport {\n    xtract_is_denormal,\n    xtract_assert_array,\n    xtract_assert_positive_integer,\n    xtract_array_sum,\n    xtract_array_copy,\n    xtract_array_min,\n    xtract_array_max,\n    xtract_array_scale,\n    xtract_array_normalise,\n    xtract_array_bound,\n    xtract_array_interlace,\n    xtract_array_deinterlace,\n    xtract_get_number_of_frames,\n    xtract_get_data_frames,\n    xtract_process_frame_data,\n    xtract_array_to_JSON,\n    xtract_frame_from_array,\n    xtract_mean,\n    xtract_temporal_centroid,\n    xtract_variance,\n    xtract_standard_deviation,\n    xtract_average_deviation,\n    xtract_skewness_kurtosis,\n    xtract_skewness,\n    xtract_kurtosis,\n    xtract_spectral_centroid,\n    xtract_spectral_mean,\n    xtract_spectral_variance,\n    xtract_spectral_spread,\n    xtract_spectral_standard_deviation,\n    xtract_spectral_skewness,\n    xtract_spectral_kurtosis,\n    xtract_irregularity_k,\n    xtract_irregularity_j,\n    xtract_tristimulus,\n    xtract_tristimulus_1,\n    xtract_tristimulus_2,\n    xtract_tristimulus_3,\n    xtract_smoothness,\n    xtract_zcr,\n    xtract_rolloff,\n    xtract_loudness,\n    xtract_flatness,\n    xtract_flatness_db,\n    xtract_tonality,\n    xtract_crest,\n    xtract_noisiness,\n    xtract_rms_amplitude,\n    xtract_spectral_inharmonicity,\n    xtract_power,\n    xtract_odd_even_ratio,\n    xtract_sharpness,\n    xtract_spectral_slope,\n    xtract_lowhigh,\n    xtract_lowest_value,\n    xtract_highest_value,\n    xtract_sum,\n    xtract_nonzero_count,\n    xtract_hps,\n    xtract_f0,\n    xtract_failsafe_f0,\n    xtract_wavelet_f0,\n    xtract_midicent,\n    xtract_spectral_fundamental,\n    xtract_energy,\n    xtract_spectrum,\n    xtract_complex_spectrum,\n    xtract_mfcc,\n    xtract_dct,\n    xtract_dct_2,\n    xtract_autocorrelation,\n    xtract_amdf,\n    xtract_asdf,\n    xtract_bark_coefficients,\n    xtract_peak_spectrum,\n    xtract_harmonic_spectrum,\n    xtract_lpc,\n    xtract_lpcc,\n    xtract_pcp,\n    xtract_yin,\n    xtract_onset,\n    xtract_resample,\n    xtract_init_dft,\n    xtract_init_dct,\n    xtract_init_mfcc,\n    xtract_init_wavelet,\n    xtract_init_pcp,\n    xtract_init_bark,\n    xtract_init_chroma,\n    xtract_apply_window,\n    xtract_create_window,\n    xtract_chroma,\n    HarmonicSpectrumData,\n    PeakSpectrumData,\n    SpectrumData,\n    TimeData\n};\n","/// <reference path=\"../../typings/objects/CommonMemory.d.ts\" />\n\nimport {xtract_init_dct} from \"../functions/xtract_init_dct\";\nimport {xtract_init_mfcc} from \"../functions/xtract_init_mfcc\";\nimport {xtract_init_bark} from \"../functions/xtract_init_bark\";\nimport {xtract_init_chroma} from \"../functions/xtract_init_chroma\";\n\nfunction searchMapProperties(map, properties) {\n    var match = map.find(function (e) {\n        for (var prop in properties) {\n            if (e[prop] !== properties[prop]) {\n                return false;\n            }\n        }\n        return true;\n    });\n    return match;\n}\n\nvar dct_map = {\n    parent: this,\n    store: [],\n    createCoefficients: function (N) {\n        var match = searchMapProperties(this.store, {\n            N: N\n        });\n        if (!match) {\n            match = {\n                N: N,\n                data: xtract_init_dct(N)\n            };\n            this.store.push(match);\n        }\n        return match.data;\n    }\n};\n\nvar mfcc_map = {\n    parent: this,\n    store: [],\n    createCoefficients: function (N, nyquist, style, freq_min, freq_max, freq_bands) {\n        var search = {\n            N: N,\n            nyquist: nyquist,\n            style: style,\n            freq_min: freq_min,\n            freq_max: freq_max,\n            freq_bands: freq_bands\n        };\n        var match = searchMapProperties(this.store, search);\n        if (!match) {\n            match = search;\n            match.data = xtract_init_mfcc(N, nyquist, style, freq_min, freq_max, freq_bands);\n            this.store.push(match);\n        }\n        return match.data;\n    }\n};\n\nvar bark_map = {\n    parent: this,\n    store: [],\n    createCoefficients: function (N, sampleRate, numBands) {\n        var search = {\n            N: N,\n            sampleRate: sampleRate,\n            numBands: numBands\n        };\n        var match = searchMapProperties(this.store, search);\n        if (!match) {\n            match = search;\n            match.data = xtract_init_bark(N, sampleRate, numBands);\n            this.store.push(match);\n        }\n        return match.data;\n    }\n};\n\n\nvar chroma_map = {\n    parent: this,\n    store: [],\n    createCoefficients: function (N, sampleRate, nbins, A440, f_ctr, octwidth) {\n        var search = {\n            N: N,\n            sampleRate: sampleRate,\n            nbins: nbins,\n            A440: A440,\n            f_ctr: f_ctr,\n            octwidth: octwidth\n        };\n        var match = searchMapProperties(this.store, search);\n        if (!match) {\n            match = search;\n            match.data = xtract_init_chroma(N, sampleRate, nbins, A440, f_ctr, octwidth);\n            this.store.push(match);\n        }\n        return match.data;\n    }\n};\n\nexport function createDctCoefficients(N) {\n    return dct_map.createCoefficients(N);\n}\n\nexport function createMfccCoefficients(N, nyquist, style, freq_min, freq_max, freq_bands) {\n    return mfcc_map.createCoefficients(N, nyquist, style, freq_min, freq_max, freq_bands);\n}\n\nexport function createBarkCoefficients(N, sampleRate, numBands) {\n    if (typeof numBands !== \"number\" || numBands < 0 || numBands > 26) {\n        numBands = 26;\n    }\n    return bark_map.createCoefficients(N, sampleRate, numBands);\n}\n\nexport function createChromaCoefficients(N, sampleRate, nbins, A440, f_ctr, octwidth) {\n    return chroma_map.createCoefficients(N, sampleRate, nbins, A440, f_ctr, octwidth);\n}\n","/// <reference path=\"../../typings/objects/DataPrototype.d.ts\" />\nimport {xtract_array_to_JSON} from \"../functions/xtract_array_to_JSON\";\nimport {createDctCoefficients, createMfccCoefficients, createBarkCoefficients, createChromaCoefficients} from \"./CommonMemory\";\n\nfunction recursiveDelta(a, b) {\n    //a and b are objects of Time/Spectrum/PeakS/HarmonicS Data\n    //a and b are the .result object\n    var param, delta = {};\n    for (param in a) {\n        if (b[param]) {\n            if (typeof a[param] === \"number\") {\n                delta[param] = a[param] - b[param];\n            } else {\n                delta[param] = deltaObject(a, b, param);\n            }\n        }\n    }\n    return delta;\n}\n\nfunction deltaObject(a, b, param) {\n    if (a.result && b.result) {\n        return recursiveDelta(a[param].result, b[param].result);\n    } else if (a.length && b.length) {\n        return deltaArray(a[param], b[param]);\n    }\n    return undefined;\n}\n\nfunction deltaArray(a, b) {\n    var d;\n    if (a.length === b.length) {\n        d = new Float64Array(a.length);\n    } else {\n        d = [];\n    }\n    var n = 0;\n    while (n < a.length && n < b.length) {\n        d[n] = a[n] - b[n];\n        n++;\n    }\n    return d;\n}\n\nexport class DataPrototype {\n    constructor(N, sampleRate) {\n        this.result = {};\n        this._sampleRate = sampleRate;\n        this.data = new Float64Array(N);\n    }\n    get sampleRate() {\n        return this._sampleRate;\n    }\n    set sampleRate(fs) {\n        this._sampleRate = fs;\n    }\n    clearResult() {\n        this.result = {};\n    }\n    getData() {\n        return this.data;\n    }\n    zeroDataRange(start, end) {\n        if (this.data.fill) {\n            this.data.fill(0, start, end);\n        } else {\n            for (var n = start; n < end; n++) {\n                this.data[n] = 0;\n            }\n        }\n        this.clearResult();\n    }\n    zeroData () {\n        this.zeroDataRange(0, this.data.length);\n    }\n    copyDataFrom(src, N, offset) {\n        if (typeof src !== \"object\" || src.length === undefined) {\n            throw (\"copyDataFrom requires src to be an Array or TypedArray\");\n        }\n        if (offset === undefined) {\n            offset = 0;\n        }\n        if (N === undefined) {\n            N = Math.min(src.length, this.data.length);\n        }\n        N = Math.min(N + offset, this.data.length);\n        for (var n = 0; n < N; n++) {\n            this.data[n + offset] = src[n];\n        }\n        this.clearResult();\n    }\n\n    duplicate() {\n        var copy = this.prototype.constructor(this.data.length, this.sampleRate);\n        copy.copyDataFrom(this.data);\n    }\n\n    toJSON() {\n        function lchar(str) {\n            var lastchar = str[str.length - 1];\n            if (lastchar !== '{' && lastchar !== ',') {\n                str = str + ', ';\n            }\n            return str;\n        }\n\n        function getJSONString(self, p, n) {\n            var str = \"\";\n            if (typeof p === \"number\" && isFinite(p)) {\n                str = '\"' + n + '\": ' + p;\n            } else if (typeof p === \"object\") {\n                if (p.toJSON) {\n                    str = '\"' + n + '\": ' + p.toJSON(p);\n                } else if (p.length) {\n                    str = '\"' + n + '\": ' + xtract_array_to_JSON(p);\n                } else {\n                    str = '\"' + n + '\": ' + self.toJSON(p);\n                }\n            } else {\n                str = '\"' + n + '\": \"' + p.toString() + '\"';\n            }\n            return str;\n        }\n        var json = '{';\n        for (var property in this.result) {\n            if (this.result.hasOwnProperty(property)) {\n                json = lchar(json);\n                json = json + getJSONString(this, this.result[property], property);\n            }\n        }\n        return json + '}';\n    }\n\n    computeDelta(compare) {\n        this.result.delta = recursiveDelta(this.result, compare.result);\n        return this.result.delta;\n    }\n\n    computeDeltaDelta(compare) {\n        if (!compare.result.delta || !this.result.delta) {\n            throw (\"Cannot compute delta-delta without both objects having deltas\");\n        }\n        this.result.delta.delta = recursiveDelta(this.result.delta, compare.result.delta);\n        return this.result.delta.delta;\n    }\n\n    createDctCoefficients(N) {\n        return createDctCoefficients(Number(N));\n    }\n\n    createMfccCoefficients(N, nyquist, style, freq_min, freq_max, freq_bands) {\n        N = Number(N);\n        nyquist = Number(nyquist);\n        freq_min = Number(freq_min);\n        freq_max = Number(freq_max);\n        freq_bands = Number(freq_bands);\n        return createMfccCoefficients(N, nyquist, style, freq_min, freq_max, freq_bands);\n    }\n\n    createBarkCoefficients(N, sampleRate, numBands) {\n        N = Number(N);\n        sampleRate = Number(sampleRate);\n        numBands = Number(numBands);\n        return createBarkCoefficients(N, sampleRate, numBands);\n    }\n\n    createChromaCoefficients(N, sampleRate, nbins, A440, f_ctr, octwidth) {\n        N = Number(N);\n        sampleRate = Number(sampleRate);\n        nbins = Number(nbins);\n        A440 = Number(A440);\n        f_ctr = Number(f_ctr);\n        octwidth = Number(octwidth);\n        return createChromaCoefficients(N, sampleRate, nbins, A440, f_ctr, octwidth);\n    }\n}\n","/// <reference path=\"../../typings/objects/PeakSpectrumData.d.ts\" />\nimport {PeakSpectrumData} from \"./PeakSpectrumData\";\nimport {xtract_odd_even_ratio} from \"../functions/xtract_odd_even_ratio\";\nimport {xtract_noisiness} from \"../functions/xtract_noisiness\";\n\nexport class HarmonicSpectrumData extends PeakSpectrumData {\n    odd_even_ratio () {\n        if (this.result.odd_even_ratio === undefined) {\n            if (this.f0 === undefined) {\n                this.spectral_fundamental(this.data, this.sampleRate);\n            }\n            this.result.odd_even_ratio = xtract_odd_even_ratio(this.data, this.f0);\n        }\n        return this.result.odd_even_ratio;\n    }\n\n    noisiness() {\n        if (parent.constructor !== PeakSpectrumData) {\n            this.result.noisiness = null;\n        } else {\n            this.result.noisiness = xtract_noisiness(this.nonzero_count(), parent.nonzero_count());\n        }\n        return this.result.noisiness;\n    }\n}\n\nHarmonicSpectrumData.prototype.features = PeakSpectrumData.prototype.features.concat([\n    {\n        name: \"Odd Even Ration\",\n        function: \"odd_even_ratio\",\n        sub_features: [],\n        parameters: [],\n        returns: \"number\"\n    },\n    {\n        name: \"Noisiness\",\n        function: \"noisiness\",\n        sub_features: [],\n        parameters: [],\n        returns: \"number\"\n    }\n]);\n","/// <reference path=\"../../typings/objects/PeakSpectrumData.d.ts\" />\nimport {SpectrumData} from \"./SpectrumData\";\nimport {HarmonicSpectrumData} from \"./HarmonicSpectrumData\";\nimport {xtract_spectral_inharmonicity} from \"../functions/xtract_spectral_inharmonicity\";\nimport {xtract_harmonic_spectrum} from \"../functions/xtract_harmonic_spectrum\";\n\n\nexport class PeakSpectrumData extends SpectrumData {\n    spectral_inharmonicity() {\n        if (this.result.spectral_inharmonicity === undefined) {\n            this.result.spectral_inharmonicity = xtract_spectral_inharmonicity(this.data, this.sampleRate);\n        }\n        return this.result.spectral_inharmonicity;\n    }\n\n    harmonic_spectrum(threshold) {\n        if (this.result.harmonic_spectrum === undefined) {\n            if (this.f0 === undefined) {\n                this.spectral_fundamental(this.data, this.sampleRate);\n            }\n            this.result.harmonic_spectrum = new HarmonicSpectrumData(this.length, this.sampleRate, this);\n            var hs = xtract_harmonic_spectrum(this.data, this.f0, threshold);\n            this.result.harmonic_spectrum.copyDataFrom(hs.subarray(0, this.length));\n        }\n        return this.result.harmonic_spectrum;\n    }\n}\n\nPeakSpectrumData.prototype.features = SpectrumData.prototype.features.concat([\n    {\n        name: \"Spectral Inharmonicity\",\n        function: \"spectral_inharmonicity\",\n        sub_features: [\"f0\"],\n        parameters: [],\n        returns: \"number\"\n}, {\n        name: \"Harmonic Spectrum\",\n        function: \"harmonic_spectrum\",\n        sub_features: [],\n        parameters: [{\n            name: \"Threshold\",\n            unit: \"\",\n            type: \"number\",\n            minimum: 0,\n            maximum: 100,\n            default: 30\n    }],\n        returns: \"HarmonicSpectrumData\"\n}]);\n","/// <reference path=\"../../typings/objects/SpectrumData.d.ts\" />\nimport {DataPrototype} from \"./DataPrototype\";\nimport {PeakSpectrumData} from \"./PeakSpectrumData\";\nimport {xtract_init_bark} from \"../functions/xtract_init_bark\";\nimport {xtract_array_min} from \"../functions/xtract_array_min\";\nimport {xtract_array_max} from \"../functions/xtract_array_max\";\nimport {xtract_array_sum} from \"../functions/xtract_array_sum\";\nimport {xtract_spectral_centroid} from \"../functions/xtract_spectral_centroid\";\nimport {xtract_spectral_mean} from \"../functions/xtract_spectral_mean\";\nimport {xtract_spectral_variance} from \"../functions/xtract_spectral_variance\";\nimport {xtract_spectral_spread} from \"../functions/xtract_spectral_spread\";\nimport {xtract_spectral_standard_deviation} from \"../functions/xtract_spectral_standard_deviation\";\nimport {xtract_spectral_skewness} from \"../functions/xtract_spectral_skewness\";\nimport {xtract_spectral_kurtosis} from \"../functions/xtract_spectral_kurtosis\";\nimport {xtract_irregularity_k} from \"../functions/xtract_irregularity_k\";\nimport {xtract_irregularity_j} from \"../functions/xtract_irregularity_j\";\nimport {xtract_tristimulus_1, xtract_tristimulus_2, xtract_tristimulus_3} from \"../functions/xtract_tristimulus\";\nimport {xtract_smoothness} from \"../functions/xtract_smoothness\";\nimport {xtract_rolloff} from \"../functions/xtract_rolloff\";\nimport {xtract_loudness} from \"../functions/xtract_loudness\";\nimport {xtract_sharpness} from \"../functions/xtract_sharpness\";\nimport {xtract_flatness} from \"../functions/xtract_flatness\";\nimport {xtract_flatness_db} from \"../functions/xtract_flatness_db\";\nimport {xtract_tonality} from \"../functions/xtract_tonality\";\nimport {xtract_crest} from \"../functions/xtract_crest\";\nimport {xtract_spectral_slope} from \"../functions/xtract_spectral_slope\";\nimport {xtract_spectral_fundamental} from \"../functions/xtract_spectral_fundamental\";\nimport {xtract_nonzero_count} from \"../functions/xtract_nonzero_count\";\nimport {xtract_hps} from \"../functions/xtract_hps\";\nimport {xtract_mfcc} from \"../functions/xtract_mfcc\";\nimport {xtract_dct_2} from \"../functions/xtract_dct_2\";\nimport {xtract_bark_coefficients} from \"../functions/xtract_bark_coefficients\";\nimport {xtract_chroma} from \"../functions/xtract_chroma\";\nimport {xtract_peak_spectrum} from \"../functions/xtract_peak_spectrum\";\n\nexport class SpectrumData extends DataPrototype {\n    constructor(N, sampleRate, parent) {\n        if (N === undefined || N <= 0) {\n            throw (\"SpectrumData constructor requires N to be a defined, whole number\");\n        }\n        if (sampleRate === undefined) {\n            sampleRate = Math.PI;\n        }\n        super(2*N, sampleRate);\n        this._amps = this.data.subarray(0, N);\n        this._freqs = this.data.subarray(N, 2 * N);\n        this._length = N;\n        this._f0 = undefined;\n        this._mfcc = undefined;\n        this._bark = undefined;\n        this._dct = undefined;\n        this._chroma = undefined;\n\n        this.computeFrequencies();\n    }\n    computeFrequencies () {\n        for (let i = 0; i < this._length; i++) {\n            this._freqs[i] = (i / this._length) * (this.sampleRate / 2);\n        }\n    }\n    get sampleRate() {\n        return this._sampleRate;\n    }\n    set sampleRate(fs) {\n        if (this._sampleRate === Math.PI) {\n            this._sampleRate = fs;\n            this.computeFrequencies();\n            if (this._bark !== undefined) {\n                this._bark = xtract_init_bark(this._length, this._sampleRate );\n            }\n\n        } else {\n            throw (\"Cannot set one-time variable\");\n        }\n    }\n\n    get f0() {\n        return this._f0;\n    }\n\n    set f0(f0) {\n        if (typeof f0 === \"number\") {\n            this._f0 = f0;\n        }\n    }\n\n    get length() {\n        return this._length;\n    }\n\n    init_mfcc(num_bands, freq_min, freq_max, style) {\n        this._mfcc = this.createMfccCoefficients(this._length, this.sampleRate * 0.5, style, freq_min, freq_max, num_bands);\n        this.result.mfcc = undefined;\n        return this._mfcc;\n    }\n\n    init_bark(numBands) {\n        if (typeof numBands !== \"number\" || numBands < 0 || numBands > 26) {\n            numBands = 26;\n        }\n        this._bark = this.createBarkCoefficients(this._length, this._Fs, numBands);\n        return this._bark;\n    }\n\n    init_chroma(nbins, A440, f_ctr, octwidth) {\n        if (typeof nbins !== \"number\" || nbins <= 1) {\n            nbins = 12;\n        }\n        if (typeof A440 !== \"number\" || A440 <= 27.5) {\n               A440 = 440;\n        }\n        if (typeof f_ctr !== \"number\") {\n               f_ctr = 1000;\n        }\n        if (typeof octwidth !== \"number\") {\n               octwidth = 1;\n        }\n        this._chroma = this.createChromaCoefficients(this._length, this._Fs, nbins, A440, f_ctr, octwidth);\n        this.result.chroma = undefined;\n        return this._chroma;\n    }\n\n    minimum() {\n        if (this.result.minimum === undefined) {\n            this.result.minimum = xtract_array_min(this._amps);\n        }\n        return this.result.minimum;\n    }\n\n    maximum() {\n        if (this.result.maximum === undefined) {\n            this.result.maximum = xtract_array_max(this._amps);\n        }\n        return this.result.maximum;\n    }\n\n    sum() {\n        if (this.result.sum === undefined) {\n            this.result.sum = xtract_array_sum(this._amps);\n        }\n        return this.result.sum;\n    }\n\n    spectral_centroid() {\n        if (this.result.spectral_centroid === undefined) {\n            this.result.spectral_centroid = xtract_spectral_centroid(this.data);\n        }\n        return this.result.spectral_centroid;\n    }\n\n    spectral_mean () {\n        if (this.result.spectral_mean === undefined) {\n            this.result.spectral_mean = xtract_spectral_mean(this.data);\n        }\n        return this.result.spectral_mean;\n    }\n\n    spectral_variance () {\n        if (this.result.spectral_variance === undefined) {\n            this.result.spectral_variance = xtract_spectral_variance(this.data, this.spectral_centroid());\n        }\n        return this.result.spectral_variance;\n    }\n\n    spectral_spread() {\n        if (this.result.spectral_spread === undefined) {\n            this.result.spectral_spread = xtract_spectral_spread(this.data, this.spectral_centroid());\n        }\n        return this.result.spectral_spread;\n    }\n\n    spectral_standard_deviation() {\n        if (this.result.spectral_standard_deviation === undefined) {\n            this.result.spectral_standard_deviation = xtract_spectral_standard_deviation(this.data, this.spectral_variance());\n        }\n        return this.result.spectral_standard_deviation;\n    }\n\n    spectral_skewness() {\n        if (this.result.spectral_skewness === undefined) {\n            this.result.spectral_skewness = xtract_spectral_skewness(this.data, this.spectral_centroid(), this.spectral_standard_deviation());\n        }\n        return this.result.spectral_skewness;\n    }\n\n    spectral_kurtosis() {\n        if (this.result.spectral_kurtosis === undefined) {\n            this.result.spectral_kurtosis = xtract_spectral_kurtosis(this.data, this.spectral_centroid(), this.spectral_standard_deviation());\n        }\n        return this.result.spectral_kurtosis;\n    }\n\n    irregularity_k () {\n        if (this.result.irregularity_k === undefined) {\n            this.result.irregularity_k = xtract_irregularity_k(this.data);\n        }\n        return this.result.irregularity_k;\n    }\n\n    irregularity_j () {\n        if (this.result.irregularity_j === undefined) {\n            this.result.irregularity_j = xtract_irregularity_j(this.data);\n        }\n        return this.result.irregularity_j;\n    }\n\n    tristimulus_1 () {\n        if (this._f0 === undefined) {\n            this.spectral_fundamental();\n        }\n        if (this.result.tristimulus_1 === undefined) {\n            this.result.tristimulus_1 = xtract_tristimulus_1(this.data, this._f0);\n        }\n        return this.result.tristimulus_1;\n    }\n    tristimulus_2 () {\n        if (this._f0 === undefined) {\n            this.spectral_fundamental();\n        }\n        if (this.result.tristimulus_2 === undefined) {\n            this.result.tristimulus_2 = xtract_tristimulus_2(this.data, this._f0);\n        }\n        return this.result.tristimulus_2;\n    }\n    tristimulus_3 () {\n        if (this._f0 === undefined) {\n            this.spectral_fundamental();\n        }\n        if (this.result.tristimulus_3 === undefined) {\n            this.result.tristimulus_3 = xtract_tristimulus_3(this.data, this._f0);\n        }\n        return this.result.tristimulus_3;\n    }\n\n    smoothness() {\n        if (this.result.smoothness === undefined) {\n            this.result.smoothness = xtract_smoothness(this.data);\n        }\n        return this.result.smoothness;\n    }\n\n    rolloff(threshold) {\n        if (this.result.rolloff === undefined) {\n            this.result.rolloff = xtract_rolloff(this.data, this.sampleRate, threshold);\n        }\n        return this.result.rolloff;\n    }\n\n    loudness() {\n        if (this.result.loudness === undefined) {\n            this.result.loudness = xtract_loudness(this.bark_coefficients());\n        }\n        return this.result.loudness;\n    }\n\n    sharpness () {\n        if (this.result.sharpness === undefined) {\n            this.result.sharpness = xtract_sharpness(this.bark_coefficients());\n        }\n        return this.result.sharpness;\n    }\n\n    flatness () {\n        if (this.result.flatness === undefined) {\n            this.result.flatness = xtract_flatness(this.data);\n        }\n        return this.result.flatness;\n    }\n\n    flatness_db () {\n        if (this.result.flatness_db === undefined) {\n            this.result.flatness_db = xtract_flatness_db(this.data, this.flatness());\n        }\n        return this.result.flatness_db;\n    }\n\n    tonality() {\n        if (this.result.tonality === undefined) {\n            this.result.tonality = xtract_tonality(this.data, this.flatness_db());\n        }\n        return this.result.tonality;\n    }\n\n    spectral_crest_factor () {\n        if (this.result.spectral_crest_factor === undefined) {\n            this.result.spectral_crest_factor = xtract_crest(this._amps, this.maximum(), this.spectral_mean());\n        }\n        return this.result.spectral_crest_factor;\n    }\n\n    spectral_slope() {\n        if (this.result.spectral_slope === undefined) {\n            this.result.spectral_slope = xtract_spectral_slope(this.data);\n        }\n        return this.result.spectral_slope;\n    }\n\n    spectral_fundamental() {\n        if (this.result.spectral_fundamental === undefined) {\n            this.result.spectral_fundamental = xtract_spectral_fundamental(this.data, _Fs);\n            this.f0 = this.result.spectral_fundamental;\n        }\n        return this.result.spectral_fundamental;\n    }\n\n    nonzero_count () {\n        if (this.result.nonzero_count === undefined) {\n            this.result.nonzero_count = xtract_nonzero_count(_amps);\n        }\n        return this.result.nonzero_count;\n    }\n\n    hps () {\n        if (this.result.hps === undefined) {\n            this.result.hps = xtract_hps(this.data);\n        }\n        return this.result.hps;\n    }\n\n    mfcc(num_bands, freq_min, freq_max) {\n        if (this._mfcc === undefined) {\n            if (freq_min === undefined) {\n                throw (\"Run init_mfcc(num_bands, freq_min, freq_max, style) first\");\n            } else {\n                this._mfcc = this.init_mfcc(num_bands, freq_min, freq_max);\n            }\n        }\n        if (this.result.mfcc === undefined) {\n            this.result.mfcc = xtract_mfcc(this.data, this._mfcc);\n        }\n        return this.result.mfcc;\n    }\n\n    dct () {\n        if (this._dct === undefined) {\n            this._dct = this.createDctCoefficients(this._length);\n        }\n        if (this.result.dct === undefined) {\n            this.result.dct = xtract_dct_2(this._amps,this._dct);\n        }\n        return this.result.dct;\n    }\n\n    bark_coefficients(num_bands) {\n        if (this.result.bark_coefficients === undefined) {\n            if (this._bark === undefined) {\n                this._bark = this.init_bark(num_bands);\n            }\n            this.result.bark_coefficients = xtract_bark_coefficients(this.data, this._bark);\n        }\n        return this.result.bark_coefficients;\n    }\n\n    chroma(nbins, A440, f_ctr, octwidth) {\n        if(this.result.chroma === undefined) {\n            if (this._chroma === undefined) {\n                this._chroma = this.init_chroma(nbins, A440, f_ctr, octwidth);\n            }\n            this.result.chroma = xtract_chroma(this.data, this._chroma);\n        }\n        return this.result.chroma;\n    }\n\n    peak_spectrum(threshold) {\n        if (this.result.peak_spectrum === undefined) {\n            this.result.peak_spectrum = new PeakSpectrumData(this._length, this.sampleRate, this);\n            var ps = xtract_peak_spectrum(this.data, this.sampleRate / this._length, threshold);\n            this.result.peak_spectrum.copyDataFrom(ps.subarray(0, this._length));\n        }\n        return this.result.peak_spectrum;\n    }\n}\n\nSpectrumData.prototype.features = [\n    {\n        name: \"Minimum\",\n        function: \"minimum\",\n        sub_features: [],\n        parameters: [],\n        returns: \"number\"\n}, {\n        name: \"Maximum\",\n        function: \"maximum\",\n        sub_features: [],\n        parameters: [],\n        returns: \"number\"\n}, {\n        name: \"Sum\",\n        function: \"sum\",\n        sub_features: [],\n        parameters: [],\n        returns: \"number\"\n}, {\n        name: \"Spectral Centroid\",\n        function: \"spectral_centroid\",\n        sub_features: [],\n        parameters: [],\n        returns: \"number\"\n}, {\n        name: \"Spectral Mean\",\n        function: \"spectral_mean\",\n        sub_features: [],\n        parameters: [],\n        returns: \"number\"\n}, {\n        name: \"Spectral Variance\",\n        function: \"spectral_variance\",\n        sub_features: [\"spectral_mean\"],\n        parameters: [],\n        returns: \"number\"\n}, {\n        name: \"Spectral Spread\",\n        function: \"spectral_spread\",\n        sub_features: [\"spectral_centroid\"],\n        parameters: [],\n        returns: \"number\"\n}, {\n        name: \"Spectral Standard Deviation\",\n        function: \"spectral_standard_deviation\",\n        sub_features: [\"spectral_variance\"],\n        parameters: [],\n        returns: \"number\"\n}, {\n        name: \"Spectral Skewness\",\n        function: \"spectral_skewness\",\n        sub_features: [\"spectral_mean\", \"spectral_standard_deviation\"],\n        parameters: [],\n        returns: \"number\"\n}, {\n        name: \"Spectral Kurtosis\",\n        function: \"spectral_kurtosis\",\n        sub_features: [\"spectral_mean\", \"spectral_standard_deviation\"],\n        parameters: [],\n        returns: \"number\"\n}, {\n        name: \"Irregularity K\",\n        function: \"irregularity_k\",\n        sub_features: [],\n        parameters: [],\n        returns: \"number\"\n}, {\n        name: \"Irregularity J\",\n        function: \"irregularity_j\",\n        sub_features: [],\n        parameters: [],\n        returns: \"number\"\n}, {\n        name: \"Tristimulus 1\",\n        function: \"tristimulus_1\",\n        sub_features: [\"spectral_fundamental\"],\n        parameters: [],\n        returns: \"number\"\n}, {\n        name: \"Tristimulus 2\",\n        function: \"tristimulus_2\",\n        sub_features: [\"spectral_fundamental\"],\n        parameters: [],\n        returns: \"number\"\n}, {\n        name: \"Tristimulus 3\",\n        function: \"tristimulus_3\",\n        sub_features: [\"spectral_fundamental\"],\n        parameters: [],\n        returns: \"number\"\n}, {\n        name: \"Smoothness\",\n        function: \"smoothness\",\n        sub_features: [],\n        parameters: [],\n        returns: \"number\"\n}, {\n        name: \"Rolloff\",\n        function: \"rolloff\",\n        sub_features: [],\n        parameters: [{\n            name: \"Threshold\",\n            unit: \"%\",\n            type: \"number\",\n            minimum: 0,\n            maximum: 100,\n            default: 90\n    }],\n        returns: \"number\"\n}, {\n        name: \"Loudness\",\n        function: \"loudness\",\n        sub_features: [\"bark_coefficients\"],\n        parameters: [],\n        returns: \"number\"\n}, {\n        name: \"Sharpness\",\n        function: \"sharpness\",\n        sub_features: [\"bark_coefficients\"],\n        parameters: [],\n        returns: \"number\"\n}, {\n        name: \"Flatness\",\n        function: \"flatness\",\n        sub_features: [],\n        parameters: [],\n        returns: \"number\"\n}, {\n        name: \"Flatness DB\",\n        function: \"flatness_db\",\n        sub_features: [\"flatness\"],\n        parameters: [],\n        returns: \"number\"\n}, {\n        name: \"Tonality\",\n        function: \"tonality\",\n        sub_features: [\"flatness_db\"],\n        parameters: [],\n        returns: \"number\"\n}, {\n        name: \"Spectral Crest Factor\",\n        function: \"spectral_crest_factor\",\n        sub_features: [\"maximum\", \"spectral_mean\"],\n        parameters: [],\n        returns: \"number\"\n}, {\n        name: \"Spectral Slope\",\n        function: \"spectral_slope\",\n        sub_features: [],\n        parameters: [],\n        returns: \"number\"\n}, {\n        name: \"Fundamental Frequency\",\n        function: \"spectral_fundamental\",\n        sub_features: [],\n        parameters: [],\n        returns: \"number\"\n}, {\n        name: \"Non-Zero count\",\n        function: \"nonzero_count\",\n        sub_features: [],\n        parameters: [],\n        returns: \"number\"\n}, {\n        name: \"HPS\",\n        function: \"hps\",\n        sub_features: [],\n        parameters: [],\n        returns: \"number\"\n}, {\n        name: \"MFCC\",\n        function: \"mfcc\",\n        sub_features: [],\n        parameters: [{\n            name: \"Band Count\",\n            unit: \"\",\n            type: \"number\",\n            minimum: 0,\n            maximum: undefined,\n            default: 26\n    }, {\n            name: \"Minimum Frequency\",\n            unit: \"Hz\",\n            type: \"number\",\n            minimum: 0,\n            maximum: undefined,\n            default: 400\n    }, {\n            name: \"Maximum Frequency\",\n            unit: \"Hz\",\n            minimum: 0,\n            maximum: undefined,\n            default: 20000\n    }],\n        returns: \"array\"\n}, {\n        name: \"Chroma\",\n        function: \"chroma\",\n        sub_features: [],\n        parameters: [{\n            name: \"nbins\",\n            unit: \"\",\n            type: \"number\",\n            minimum: 2,\n            maximum: undefined,\n            default: 12\n    }, {\n            name: \"A440\",\n            unit: \"\",\n            type: \"number\",\n            minimum: 220,\n            maximum: 880,\n            default: 440\n    }, {\n            name: \"f_ctr\",\n            unit: \"\",\n            type: \"number\",\n            minimum: undefined,\n            maximum: undefined,\n            default: 1000\n    }, {\n            name: \"octwidth\",\n            unit: \"\",\n            type: \"number\",\n            minimum: undefined,\n            maximum: undefined,\n            default: 1\n    }],\n        returns: \"array\"\n}, {\n        name: \"DCT\",\n        function: \"dct\",\n        sub_features: [],\n        parameters: [],\n        returns: \"array\"\n}, {\n        name: \"Bark Coefficients\",\n        function: \"bark_coefficients\",\n        sub_features: [],\n        parameters: [{\n            name: \"Band Count\",\n            unit: \"\",\n            type: \"number\",\n            minimum: 0,\n            maximum: 26,\n            default: 26\n    }],\n        returns: \"array\"\n}, {\n        name: \"Peak Spectrum\",\n        function: \"peak_spectrum\",\n        sub_features: [],\n        parameters: [{\n            name: \"Threshold\",\n            unit: \"\",\n            type: \"number\",\n            minimum: 0,\n            maximum: 100,\n            default: 30\n    }],\n        returns: \"PeakSpectrumData\"\n}];\n","/// <reference path=\"../../typings/objects/TimeData.d.ts\" />\nimport {DataPrototype} from \"./DataPrototype\";\nimport {SpectrumData} from \"./SpectrumData\";\nimport {xtract_init_wavelet} from \"../functions/xtract_init_wavelet\";\nimport {xtract_array_min} from \"../functions/xtract_array_min\";\nimport {xtract_array_max} from \"../functions/xtract_array_max\";\nimport {xtract_array_sum} from \"../functions/xtract_array_sum\";\nimport {xtract_mean} from \"../functions/xtract_mean\";\nimport {xtract_temporal_centroid} from \"../functions/xtract_temporal_centroid\";\nimport {xtract_variance} from \"../functions/xtract_variance\";\nimport {xtract_standard_deviation} from \"../functions/xtract_standard_deviation\";\nimport {xtract_average_deviation} from \"../functions/xtract_average_deviation\";\nimport {xtract_skewness} from \"../functions/xtract_skewness\";\nimport {xtract_kurtosis} from \"../functions/xtract_kurtosis\";\nimport {xtract_zcr} from \"../functions/xtract_zcr\";\nimport {xtract_crest} from \"../functions/xtract_crest\";\nimport {xtract_rms_amplitude} from \"../functions/xtract_rms_amplitude\";\nimport {xtract_lowest_value} from \"../functions/xtract_lowest_value\";\nimport {xtract_nonzero_count} from \"../functions/xtract_nonzero_count\";\nimport {xtract_wavelet_f0} from \"../functions/xtract_wavelet_f0\";\nimport {xtract_energy} from \"../functions/xtract_energy\";\nimport {xtract_spectrum} from \"../functions/xtract_spectrum\";\nimport {xtract_dct_2} from \"../functions/xtract_dct_2\";\nimport {xtract_autocorrelation} from \"../functions/xtract_autocorrelation\";\nimport {xtract_amdf} from \"../functions/xtract_amdf\";\nimport {xtract_asdf} from \"../functions/xtract_asdf\";\nimport {xtract_yin} from \"../functions/xtract_yin\";\nimport {xtract_onset} from \"../functions/xtract_onset\";\nimport {xtract_resample} from \"../functions/xtract_resample\";\n\nexport class TimeData extends DataPrototype {\n    constructor(input, sampleRate) {\n        if (sampleRate <= 0) {\n            sampleRate = undefined;\n            console.log(\"Invalid parameter for 'sampleRate' for TimeData\");\n        }\n\n        if (typeof input === \"object\") {\n            var src, src_data;\n            if (input instanceof TimeData) {\n                src = src.getData();\n                super(src.length, sampleRate);\n                this.copyDataFrom(src, src.length, 0);\n            } else if (input instanceof Float32Array || input instanceof Float64Array) {\n                src = input;\n                super(src.length, sampleRate);\n                this.copyDataFrom(src, src.length, 0);\n            } else {\n                throw (\"TimeData: Invalid object passed as first argument.\");\n            }\n\n        } else if (typeof input === \"number\") {\n            if (input <= 0 || input !== Math.floor(input)) {\n                throw (\"TimeData: Invalid number passed as first argument.\");\n            }\n            super(input, sampleRate);\n        } else {\n            throw (\"TimeData: Constructor has invalid operators!\");\n        }\n\n        this._dct = undefined;\n        this._wavelet = xtract_init_wavelet();\n    }\n    getFrames(frameSize, hopSize) {\n        if (typeof frameSize !== \"number\" || frameSize <= 0 || frameSize !== Math.floor(frameSize)) {\n            throw (\"frameSize must be a defined, positive integer\");\n        }\n        if (typeof hopSize !== \"number\") {\n            hopSize = frameSize;\n        }\n        var num_frames = Math.ceil(this.data.length / frameSize);\n        var result_frames = [];\n        for (var i = 0; i < num_frames; i++) {\n            var frame = new TimeData(hopSize, this.sampleRate);\n            frame.copyDataFrom(this.data.subarray(frameSize * i, frameSize * i + hopSize));\n            result_frames.push(frame);\n        }\n        return result_frames;\n    }\n\n    // Features\n    minimum() {\n        if (this.result.minimum === undefined) {\n            this.result.minimum = xtract_array_min(this.data);\n        }\n        return this.result.minimum;\n    }\n\n    maximum() {\n        if (this.result.maximum === undefined) {\n            this.result.maximum = xtract_array_max(this.data);\n        }\n        return this.result.maximum;\n    }\n\n    sum() {\n        if (this.result.sum === undefined) {\n            this.result.sum = xtract_array_sum(this.data);\n        }\n        return this.result.sum;\n    }\n\n    mean() {\n        if (this.result.mean === undefined) {\n            this.result.mean = xtract_mean(this.data);\n        }\n        return this.result.mean;\n    }\n\n    temporal_centroid(window_ms) {\n        if (this.result.temporal_centroid === undefined) {\n            this.energy(window_ms);\n            this.result.temporal_centroid = xtract_temporal_centroid(this.result.energy.data, this.sampleRate, window_ms);\n        }\n        return this.result.temporal_centroid;\n    }\n\n    variance() {\n        if (this.result.variance === undefined) {\n            this.result.variance = xtract_variance(this.data, this.mean());\n        }\n        return this.result.variance;\n    }\n\n    standard_deviation() {\n        if (this.result.standard_deviation === undefined) {\n            this.result.standard_deviation = xtract_standard_deviation(this.data, this.variance());\n        }\n        return this.result.standard_deviation;\n    }\n\n    average_deviation () {\n        if (this.result.average_deviation === undefined) {\n            this.result.average_deviation = xtract_average_deviation(this.data, this.mean());\n        }\n        return this.result.average_deviation;\n    }\n\n    skewness () {\n        if (this.result.skewness === undefined) {\n            this.result.skewness = xtract_skewness(this.data, this.mean(), this.standard_deviation());\n        }\n        return this.result.skewness;\n    }\n\n    kurtosis () {\n        if (this.result.kurtosis === undefined) {\n            this.result.kurtosis = xtract_kurtosis(this.data, this.mean(), this.standard_deviation());\n        }\n        return this.result.kurtosis;\n    }\n\n    zcr  () {\n        if (this.result.zcr === undefined) {\n            this.result.zcr = xtract_zcr(this.data);\n        }\n        return this.result.zcr;\n    }\n\n    crest_factor () {\n        if (this.result.crest_factor === undefined) {\n            this.result.crest_factor = xtract_crest(this.data, this.maximum(), this.mean());\n        }\n        return this.result.crest_factor;\n    }\n\n    rms_amplitude () {\n        if (this.result.rms_amplitude === undefined) {\n            this.result.rms_amplitude = xtract_rms_amplitude(this.data);\n        }\n        return this.result.rms_amplitude;\n    }\n\n    lowest_value (threshold) {\n        if (this.result.lowest_value === undefined) {\n            this.result.lowest_value = xtract_lowest_value(this.data, threshold);\n        }\n        return this.result.lowest_value;\n    }\n\n    highest_value () {\n        if (this.result.nonzero_count === undefined) {\n            this.result.nonzero_count = xtract_nonzero_count(this.data);\n        }\n        return this.result.nonzero_count;\n    }\n\n    f0 () {\n        if (this._wavelet === undefined) {\n            this._wavelet = this.init_wavelet();\n        }\n        if (this.result.f0 === undefined) {\n            this.result.f0 = xtract_wavelet_f0(this.data, this.sampleRate, this._wavelet);\n        }\n        return this.result.f0;\n    }\n\n    energy (window_ms) {\n        if (this.result.energy === undefined || this.result.energy.window_ms !== window_ms) {\n            this.result.energy = {\n                'data': xtract_energy(this.data, this.sampleRate, window_ms),\n                'window_ms': window_ms\n            };\n        }\n        return this.result.energy;\n    }\n\n    spectrum() {\n        if (this.result.spectrum === undefined) {\n            var _spec = xtract_spectrum(this.data, this.sampleRate, true, false);\n            this.result.spectrum = new SpectrumData(_spec.length / 2, this.sampleRate);\n            this.result.spectrum.copyDataFrom(_spec);\n            return this.result.spectrum;\n        }\n    }\n\n    dct() {\n        if (this._dct === undefined) {\n            this._dct = this.createDctCoefficients(this.data.length);\n        }\n        if (this.result.dct === undefined) {\n            this.result.dct = xtract_dct_2(this.data, this._dct);\n        }\n        return this.result.dct;\n    }\n\n    autocorrelation () {\n        if (this.result.autocorrelation === undefined) {\n            this.result.autocorrelation = xtract_autocorrelation(this.data);\n        }\n        return this.result.autocorrelation;\n    }\n\n    amdf () {\n        if (this.result.amdf === undefined) {\n            this.result.amdf = xtract_amdf(this.data);\n        }\n        return this.result.amdf;\n    }\n\n    asdf () {\n        if (this.result.asdf === undefined) {\n            this.result.asdf = xtract_asdf(this.data);\n        }\n        return this.result.asdf;\n    }\n\n    yin() {\n        if (this.result.yin === undefined) {\n            this.result.yin = xtract_yin(this.data);\n        }\n        return this.result.yin;\n    }\n\n    onset(frameSize) {\n        if (this.result.onset === undefined || this.result.onset.frameSize !== frameSize) {\n            this.result.onset = {\n                'data': xtract_onset(this.data, frameSize),\n                'frameSize': frameSize\n            };\n        }\n        return this.result.onset;\n    }\n\n    resample(targetSampleRate) {\n        if (this.sampleRate === undefined) {\n            throw (\"Source sampleRate must be defined\");\n        }\n        if (typeof targetSampleRate !== \"number\" || targetSampleRate <= 0) {\n            throw (\"Target sampleRate must be a positive number\");\n        }\n        var resampled = xtract_resample(this.data, targetSampleRate, this.sampleRate);\n        var reply = new TimeData(resampled.length, targetSampleRate);\n        reply.copyDataFrom(resampled);\n        this.result.resample = reply;\n        return reply;\n    }\n}\n\nTimeData.prototype.features = [\n    {\n        name: \"Minimum\",\n        function: \"minimum\",\n        sub_features: [],\n        parameters: [],\n        returns: \"number\"\n    }, {\n        name: \"Maximum\",\n        function: \"maximum\",\n        sub_features: [],\n        parameters: [],\n        returns: \"number\"\n    }, {\n        name: \"Sum\",\n        function: \"sum\",\n        sub_features: [],\n        parameters: [],\n        returns: \"number\"\n    }, {\n        name: \"Mean\",\n        function: \"mean\",\n        sub_features: [],\n        parameters: [],\n        returns: \"number\"\n    }, {\n        name: \"Temporal Centroid\",\n        function: \"temporal_centroid\",\n        sub_features: [\"energy\"],\n        parameters: [{\n            name: \"Window Time\",\n            unit: \"ms\",\n            type: \"number\",\n            minimum: 1,\n            maximum: undefined,\n            default: 100\n        }],\n        returns: \"number\"\n    }, {\n        name: \"Variance\",\n        function: \"variance\",\n        sub_features: [\"mean\"],\n        parameters: [],\n        returns: \"number\"\n    }, {\n        name: \"Standard Deviation\",\n        function: \"standard_deviation\",\n        sub_features: [\"variance\"],\n        parameters: [],\n        returns: \"number\"\n    }, {\n        name: \"Average Deviation\",\n        function: \"average_deviation\",\n        sub_features: [\"mean\"],\n        parameters: [],\n        returns: \"number\"\n    }, {\n        name: \"Skewness\",\n        function: \"skewness\",\n        sub_features: [\"mean\", \"standard_deviation\"],\n        parameters: [],\n        returns: \"number\"\n    }, {\n        name: \"Kurtosis\",\n        function: \"kurtosis\",\n        sub_features: [\"mean\", \"standard_deviation\"],\n        parameters: [],\n        returns: \"number\"\n    }, {\n        name: \"Zero Crossing Rate\",\n        function: \"zcr\",\n        sub_features: [],\n        parameters: [],\n        returns: \"number\"\n    }, {\n        name: \"Crest Factor\",\n        function: \"crest_factor\",\n        sub_features: [\"maximum\", \"mean\"],\n        parameters: [],\n        returns: \"number\"\n    }, {\n        name: \"RMS Amplitude\",\n        function: \"rms_amplitude\",\n        sub_features: [],\n        parameters: [],\n        returns: \"number\"\n    }, {\n        name: \"Lowest Value\",\n        function: \"lowest_value\",\n        sub_features: [],\n        parameters: [{\n            name: \"Threshold\",\n            unit: \"\",\n            type: \"number\",\n            minimum: undefined,\n            maximum: undefined,\n            default: undefined\n        }],\n        returns: \"number\"\n    }, {\n        name: \"Highest Value\",\n        function: \"highest_value\",\n        sub_features: [],\n        parameters: [{\n            name: \"Threshold\",\n            unit: \"\",\n            type: \"number\",\n            minimum: undefined,\n            maximum: undefined,\n            default: undefined\n        }],\n        returns: \"number\"\n    }, {\n        name: \"Non-Zero Count\",\n        function: \"nonzero_count\",\n        sub_features: [],\n        parameters: [],\n        returns: \"number\"\n    }, {\n        name: \"Fundamental Frequency\",\n        function: \"f0\",\n        sub_features: [],\n        parameters: [],\n        returns: \"number\"\n    }, {\n        name: \"Energy\",\n        function: \"energy\",\n        sub_features: [],\n        parameters: [{\n            name: \"Window\",\n            unit: \"ms\",\n            type: \"number\",\n            minimum: 1,\n            maximum: undefined,\n            default: 100\n        }],\n        returns: \"object\"\n    }, {\n        name: \"Spectrum\",\n        function: \"spectrum\",\n        sub_features: [],\n        parameters: [],\n        returns: \"SpectrumData\"\n    }, {\n        name: \"DCT\",\n        function: \"dct\",\n        sub_features: [],\n        parameters: [],\n        returns: \"array\"\n    }, {\n        name: \"Autocorrelation\",\n        function: \"autocorrelation\",\n        sub_features: [],\n        parameters: [],\n        returns: \"array\"\n    }, {\n        name: \"AMDF\",\n        function: \"amdf\",\n        sub_features: [],\n        parameters: [],\n        returns: \"array\"\n    }, {\n        name: \"ASDF\",\n        function: \"asdf\",\n        sub_features: [],\n        parameters: [],\n        returns: \"array\"\n    }, {\n        name: \"YIN Pitch\",\n        function: \"yin\",\n        sub_features: [],\n        parameters: [],\n        returns: \"array\"\n    }, {\n        name: \"Onset Detection\",\n        function: \"onset\",\n        sub_features: [],\n        parameters: [{\n            name: \"Frame Size\",\n            unit: \"samples\",\n            type: \"number\",\n            minimum: 1,\n            maximum: undefined,\n            default: 1024\n        }],\n        returns: \"array\"\n    }, {\n        name: \"Resample\",\n        function: \"resample\",\n        sub_features: [],\n        parameters: [{\n            name: \"Target Sample Rate\",\n            unit: \"Hz\",\n            type: \"number\",\n            minimum: 0,\n            maximum: undefined,\n            default: 8000\n        }],\n        returns: \"TimeData\"\n    }];\n","import { CompleteNotification, NextNotification, ErrorNotification } from './types';\n\n/**\n * A completion object optimized for memory use and created to be the\n * same \"shape\" as other notifications in v8.\n * @internal\n */\nexport const COMPLETE_NOTIFICATION = (() => createNotification('C', undefined, undefined) as CompleteNotification)();\n\n/**\n * Internal use only. Creates an optimized error notification that is the same \"shape\"\n * as other notifications.\n * @internal\n */\nexport function errorNotification(error: any): ErrorNotification {\n  return createNotification('E', undefined, error) as any;\n}\n\n/**\n * Internal use only. Creates an optimized next notification that is the same \"shape\"\n * as other notifications.\n * @internal\n */\nexport function nextNotification<T>(value: T) {\n  return createNotification('N', value, undefined) as NextNotification<T>;\n}\n\n/**\n * Ensures that all notifications created internally have the same \"shape\" in v8.\n *\n * TODO: This is only exported to support a crazy legacy test in `groupBy`.\n * @internal\n */\nexport function createNotification(kind: 'N' | 'E' | 'C', value: any, error: any) {\n  return {\n    kind,\n    value,\n    error,\n  };\n}\n","/**\n * @prettier\n */\nimport { Operator } from './Operator';\nimport { SafeSubscriber, Subscriber } from './Subscriber';\nimport { isSubscription, Subscription } from './Subscription';\nimport { TeardownLogic, OperatorFunction, Subscribable, Observer } from './types';\nimport { observable as Symbol_observable } from './symbol/observable';\nimport { pipeFromArray } from './util/pipe';\nimport { config } from './config';\nimport { isFunction } from './util/isFunction';\nimport { errorContext } from './util/errorContext';\n\n/**\n * A representation of any set of values over any amount of time. This is the most basic building block\n * of RxJS.\n *\n * @class Observable<T>\n */\nexport class Observable<T> implements Subscribable<T> {\n  /**\n   * @deprecated Internal implementation detail, do not use directly. Will be made internal in v8.\n   */\n  source: Observable<any> | undefined;\n\n  /**\n   * @deprecated Internal implementation detail, do not use directly. Will be made internal in v8.\n   */\n  operator: Operator<any, T> | undefined;\n\n  /**\n   * @constructor\n   * @param {Function} subscribe the function that is called when the Observable is\n   * initially subscribed to. This function is given a Subscriber, to which new values\n   * can be `next`ed, or an `error` method can be called to raise an error, or\n   * `complete` can be called to notify of a successful completion.\n   */\n  constructor(subscribe?: (this: Observable<T>, subscriber: Subscriber<T>) => TeardownLogic) {\n    if (subscribe) {\n      this._subscribe = subscribe;\n    }\n  }\n\n  // HACK: Since TypeScript inherits static properties too, we have to\n  // fight against TypeScript here so Subject can have a different static create signature\n  /**\n   * Creates a new Observable by calling the Observable constructor\n   * @owner Observable\n   * @method create\n   * @param {Function} subscribe? the subscriber function to be passed to the Observable constructor\n   * @return {Observable} a new observable\n   * @nocollapse\n   * @deprecated Use `new Observable()` instead. Will be removed in v8.\n   */\n  static create: (...args: any[]) => any = <T>(subscribe?: (subscriber: Subscriber<T>) => TeardownLogic) => {\n    return new Observable<T>(subscribe);\n  };\n\n  /**\n   * Creates a new Observable, with this Observable instance as the source, and the passed\n   * operator defined as the new observable's operator.\n   * @method lift\n   * @param operator the operator defining the operation to take on the observable\n   * @return a new observable with the Operator applied\n   * @deprecated Internal implementation detail, do not use directly. Will be made internal in v8.\n   * If you have implemented an operator using `lift`, it is recommended that you create an\n   * operator by simply returning `new Observable()` directly. See \"Creating new operators from\n   * scratch\" section here: https://rxjs.dev/guide/operators\n   */\n  lift<R>(operator?: Operator<T, R>): Observable<R> {\n    const observable = new Observable<R>();\n    observable.source = this;\n    observable.operator = operator;\n    return observable;\n  }\n\n  subscribe(observer?: Partial<Observer<T>>): Subscription;\n  subscribe(next: (value: T) => void): Subscription;\n  /** @deprecated Instead of passing separate callback arguments, use an observer argument. Signatures taking separate callback arguments will be removed in v8. Details: https://rxjs.dev/deprecations/subscribe-arguments */\n  subscribe(next?: ((value: T) => void) | null, error?: ((error: any) => void) | null, complete?: (() => void) | null): Subscription;\n  /**\n   * Invokes an execution of an Observable and registers Observer handlers for notifications it will emit.\n   *\n   * <span class=\"informal\">Use it when you have all these Observables, but still nothing is happening.</span>\n   *\n   * `subscribe` is not a regular operator, but a method that calls Observable's internal `subscribe` function. It\n   * might be for example a function that you passed to Observable's constructor, but most of the time it is\n   * a library implementation, which defines what will be emitted by an Observable, and when it be will emitted. This means\n   * that calling `subscribe` is actually the moment when Observable starts its work, not when it is created, as it is often\n   * the thought.\n   *\n   * Apart from starting the execution of an Observable, this method allows you to listen for values\n   * that an Observable emits, as well as for when it completes or errors. You can achieve this in two\n   * of the following ways.\n   *\n   * The first way is creating an object that implements {@link Observer} interface. It should have methods\n   * defined by that interface, but note that it should be just a regular JavaScript object, which you can create\n   * yourself in any way you want (ES6 class, classic function constructor, object literal etc.). In particular, do\n   * not attempt to use any RxJS implementation details to create Observers - you don't need them. Remember also\n   * that your object does not have to implement all methods. If you find yourself creating a method that doesn't\n   * do anything, you can simply omit it. Note however, if the `error` method is not provided and an error happens,\n   * it will be thrown asynchronously. Errors thrown asynchronously cannot be caught using `try`/`catch`. Instead,\n   * use the {@link onUnhandledError} configuration option or use a runtime handler (like `window.onerror` or\n   * `process.on('error)`) to be notified of unhandled errors. Because of this, it's recommended that you provide\n   * an `error` method to avoid missing thrown errors.\n   *\n   * The second way is to give up on Observer object altogether and simply provide callback functions in place of its methods.\n   * This means you can provide three functions as arguments to `subscribe`, where the first function is equivalent\n   * of a `next` method, the second of an `error` method and the third of a `complete` method. Just as in case of an Observer,\n   * if you do not need to listen for something, you can omit a function by passing `undefined` or `null`,\n   * since `subscribe` recognizes these functions by where they were placed in function call. When it comes\n   * to the `error` function, as with an Observer, if not provided, errors emitted by an Observable will be thrown asynchronously.\n   *\n   * You can, however, subscribe with no parameters at all. This may be the case where you're not interested in terminal events\n   * and you also handled emissions internally by using operators (e.g. using `tap`).\n   *\n   * Whichever style of calling `subscribe` you use, in both cases it returns a Subscription object.\n   * This object allows you to call `unsubscribe` on it, which in turn will stop the work that an Observable does and will clean\n   * up all resources that an Observable used. Note that cancelling a subscription will not call `complete` callback\n   * provided to `subscribe` function, which is reserved for a regular completion signal that comes from an Observable.\n   *\n   * Remember that callbacks provided to `subscribe` are not guaranteed to be called asynchronously.\n   * It is an Observable itself that decides when these functions will be called. For example {@link of}\n   * by default emits all its values synchronously. Always check documentation for how given Observable\n   * will behave when subscribed and if its default behavior can be modified with a `scheduler`.\n   *\n   * ## Example\n   * ### Subscribe with an Observer\n   * ```ts\n   * import { of } from 'rxjs';\n   *\n   * const sumObserver = {\n   *   sum: 0,\n   *   next(value) {\n   *     console.log('Adding: ' + value);\n   *     this.sum = this.sum + value;\n   *   },\n   *   error() {\n   *     // We actually could just remove this method,\n   *     // since we do not really care about errors right now.\n   *   },\n   *   complete() {\n   *     console.log('Sum equals: ' + this.sum);\n   *   }\n   * };\n   *\n   * of(1, 2, 3) // Synchronously emits 1, 2, 3 and then completes.\n   *   .subscribe(sumObserver);\n   *\n   * // Logs:\n   * // \"Adding: 1\"\n   * // \"Adding: 2\"\n   * // \"Adding: 3\"\n   * // \"Sum equals: 6\"\n   * ```\n   *\n   * ### Subscribe with functions\n   * ```ts\n   * import { of } from 'rxjs'\n   *\n   * let sum = 0;\n   *\n   * of(1, 2, 3).subscribe(\n   *   value => {\n   *     console.log('Adding: ' + value);\n   *     sum = sum + value;\n   *   },\n   *   undefined,\n   *   () => console.log('Sum equals: ' + sum)\n   * );\n   *\n   * // Logs:\n   * // \"Adding: 1\"\n   * // \"Adding: 2\"\n   * // \"Adding: 3\"\n   * // \"Sum equals: 6\"\n   * ```\n   *\n   * ### Cancel a subscription\n   * ```ts\n   * import { interval } from 'rxjs';\n   *\n   * const subscription = interval(1000).subscribe({\n   *   next(num) {\n   *     console.log(num)\n   *   },\n   *   complete() {\n   *     // Will not be called, even when cancelling subscription.\n   *     console.log('completed!');\n   *   }\n   * });\n   *\n   * setTimeout(() => {\n   *   subscription.unsubscribe();\n   *   console.log('unsubscribed!');\n   * }, 2500);\n   *\n   * // Logs:\n   * // 0 after 1s\n   * // 1 after 2s\n   * // \"unsubscribed!\" after 2.5s\n   * ```\n   *\n   * @param {Observer|Function} observerOrNext (optional) Either an observer with methods to be called,\n   *  or the first of three possible handlers, which is the handler for each value emitted from the subscribed\n   *  Observable.\n   * @param {Function} error (optional) A handler for a terminal event resulting from an error. If no error handler is provided,\n   *  the error will be thrown asynchronously as unhandled.\n   * @param {Function} complete (optional) A handler for a terminal event resulting from successful completion.\n   * @return {Subscription} a subscription reference to the registered handlers\n   * @method subscribe\n   */\n  subscribe(\n    observerOrNext?: Partial<Observer<T>> | ((value: T) => void) | null,\n    error?: ((error: any) => void) | null,\n    complete?: (() => void) | null\n  ): Subscription {\n    const subscriber = isSubscriber(observerOrNext) ? observerOrNext : new SafeSubscriber(observerOrNext, error, complete);\n\n    errorContext(() => {\n      const { operator, source } = this;\n      subscriber.add(\n        operator\n          ? // We're dealing with a subscription in the\n            // operator chain to one of our lifted operators.\n            operator.call(subscriber, source)\n          : source\n          ? // If `source` has a value, but `operator` does not, something that\n            // had intimate knowledge of our API, like our `Subject`, must have\n            // set it. We're going to just call `_subscribe` directly.\n            this._subscribe(subscriber)\n          : // In all other cases, we're likely wrapping a user-provided initializer\n            // function, so we need to catch errors and handle them appropriately.\n            this._trySubscribe(subscriber)\n      );\n    });\n\n    return subscriber;\n  }\n\n  /** @internal */\n  protected _trySubscribe(sink: Subscriber<T>): TeardownLogic {\n    try {\n      return this._subscribe(sink);\n    } catch (err) {\n      // We don't need to return anything in this case,\n      // because it's just going to try to `add()` to a subscription\n      // above.\n      sink.error(err);\n    }\n  }\n\n  /**\n   * Used as a NON-CANCELLABLE means of subscribing to an observable, for use with\n   * APIs that expect promises, like `async/await`. You cannot unsubscribe from this.\n   *\n   * **WARNING**: Only use this with observables you *know* will complete. If the source\n   * observable does not complete, you will end up with a promise that is hung up, and\n   * potentially all of the state of an async function hanging out in memory. To avoid\n   * this situation, look into adding something like {@link timeout}, {@link take},\n   * {@link takeWhile}, or {@link takeUntil} amongst others.\n   *\n   * ### Example:\n   *\n   * ```ts\n   * import { interval } from 'rxjs';\n   * import { take } from 'rxjs/operators';\n   *\n   * const source$ = interval(1000).pipe(take(4));\n   *\n   * async function getTotal() {\n   *    let total = 0;\n   *\n   *    await source$.forEach(value => {\n   *      total += value;\n   *      console.log('observable -> ', value);\n   *    });\n   *\n   *    return total;\n   * }\n   *\n   * getTotal().then(\n   *    total => console.log('Total:', total)\n   * )\n   *\n   * // Expected:\n   * // \"observable -> 0\"\n   * // \"observable -> 1\"\n   * // \"observable -> 2\"\n   * // \"observable -> 3\"\n   * // \"Total: 6\"\n   * ```\n   * @param next a handler for each value emitted by the observable\n   * @return a promise that either resolves on observable completion or\n   *  rejects with the handled error\n   */\n  forEach(next: (value: T) => void): Promise<void>;\n\n  /**\n   * @param next a handler for each value emitted by the observable\n   * @param promiseCtor a constructor function used to instantiate the Promise\n   * @return a promise that either resolves on observable completion or\n   *  rejects with the handled error\n   * @deprecated Passing a Promise constructor will no longer be available\n   * in upcoming versions of RxJS. This is because it adds weight to the library, for very\n   * little benefit. If you need this functionality, it is recommended that you either\n   * polyfill Promise, or you create an adapter to convert the returned native promise\n   * to whatever promise implementation you wanted. Will be removed in v8.\n   */\n  forEach(next: (value: T) => void, promiseCtor: PromiseConstructorLike): Promise<void>;\n\n  forEach(next: (value: T) => void, promiseCtor?: PromiseConstructorLike): Promise<void> {\n    promiseCtor = getPromiseCtor(promiseCtor);\n\n    return new promiseCtor<void>((resolve, reject) => {\n      // Must be declared in a separate statement to avoid a ReferenceError when\n      // accessing subscription below in the closure due to Temporal Dead Zone.\n      let subscription: Subscription;\n      subscription = this.subscribe(\n        (value) => {\n          try {\n            next(value);\n          } catch (err) {\n            reject(err);\n            subscription?.unsubscribe();\n          }\n        },\n        reject,\n        resolve\n      );\n    }) as Promise<void>;\n  }\n\n  /** @internal */\n  protected _subscribe(subscriber: Subscriber<any>): TeardownLogic {\n    return this.source?.subscribe(subscriber);\n  }\n\n  /**\n   * An interop point defined by the es7-observable spec https://github.com/zenparsing/es-observable\n   * @method Symbol.observable\n   * @return {Observable} this instance of the observable\n   */\n  [Symbol_observable]() {\n    return this;\n  }\n\n  /* tslint:disable:max-line-length */\n  pipe(): Observable<T>;\n  pipe<A>(op1: OperatorFunction<T, A>): Observable<A>;\n  pipe<A, B>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>): Observable<B>;\n  pipe<A, B, C>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>): Observable<C>;\n  pipe<A, B, C, D>(\n    op1: OperatorFunction<T, A>,\n    op2: OperatorFunction<A, B>,\n    op3: OperatorFunction<B, C>,\n    op4: OperatorFunction<C, D>\n  ): Observable<D>;\n  pipe<A, B, C, D, E>(\n    op1: OperatorFunction<T, A>,\n    op2: OperatorFunction<A, B>,\n    op3: OperatorFunction<B, C>,\n    op4: OperatorFunction<C, D>,\n    op5: OperatorFunction<D, E>\n  ): Observable<E>;\n  pipe<A, B, C, D, E, F>(\n    op1: OperatorFunction<T, A>,\n    op2: OperatorFunction<A, B>,\n    op3: OperatorFunction<B, C>,\n    op4: OperatorFunction<C, D>,\n    op5: OperatorFunction<D, E>,\n    op6: OperatorFunction<E, F>\n  ): Observable<F>;\n  pipe<A, B, C, D, E, F, G>(\n    op1: OperatorFunction<T, A>,\n    op2: OperatorFunction<A, B>,\n    op3: OperatorFunction<B, C>,\n    op4: OperatorFunction<C, D>,\n    op5: OperatorFunction<D, E>,\n    op6: OperatorFunction<E, F>,\n    op7: OperatorFunction<F, G>\n  ): Observable<G>;\n  pipe<A, B, C, D, E, F, G, H>(\n    op1: OperatorFunction<T, A>,\n    op2: OperatorFunction<A, B>,\n    op3: OperatorFunction<B, C>,\n    op4: OperatorFunction<C, D>,\n    op5: OperatorFunction<D, E>,\n    op6: OperatorFunction<E, F>,\n    op7: OperatorFunction<F, G>,\n    op8: OperatorFunction<G, H>\n  ): Observable<H>;\n  pipe<A, B, C, D, E, F, G, H, I>(\n    op1: OperatorFunction<T, A>,\n    op2: OperatorFunction<A, B>,\n    op3: OperatorFunction<B, C>,\n    op4: OperatorFunction<C, D>,\n    op5: OperatorFunction<D, E>,\n    op6: OperatorFunction<E, F>,\n    op7: OperatorFunction<F, G>,\n    op8: OperatorFunction<G, H>,\n    op9: OperatorFunction<H, I>\n  ): Observable<I>;\n  pipe<A, B, C, D, E, F, G, H, I>(\n    op1: OperatorFunction<T, A>,\n    op2: OperatorFunction<A, B>,\n    op3: OperatorFunction<B, C>,\n    op4: OperatorFunction<C, D>,\n    op5: OperatorFunction<D, E>,\n    op6: OperatorFunction<E, F>,\n    op7: OperatorFunction<F, G>,\n    op8: OperatorFunction<G, H>,\n    op9: OperatorFunction<H, I>,\n    ...operations: OperatorFunction<any, any>[]\n  ): Observable<unknown>;\n  /* tslint:enable:max-line-length */\n\n  /**\n   * Used to stitch together functional operators into a chain.\n   * @method pipe\n   * @return {Observable} the Observable result of all of the operators having\n   * been called in the order they were passed in.\n   *\n   * ### Example\n   * ```ts\n   * import { interval } from 'rxjs';\n   * import { map, filter, scan } from 'rxjs/operators';\n   *\n   * interval(1000)\n   *   .pipe(\n   *     filter(x => x % 2 === 0),\n   *     map(x => x + x),\n   *     scan((acc, x) => acc + x)\n   *   )\n   *   .subscribe(x => console.log(x))\n   * ```\n   */\n  pipe(...operations: OperatorFunction<any, any>[]): Observable<any> {\n    return pipeFromArray(operations)(this);\n  }\n\n  /* tslint:disable:max-line-length */\n  /** @deprecated Replaced with {@link firstValueFrom} and {@link lastValueFrom}. Will be removed in v8. Details: https://rxjs.dev/deprecations/to-promise */\n  toPromise(): Promise<T | undefined>;\n  /** @deprecated Replaced with {@link firstValueFrom} and {@link lastValueFrom}. Will be removed in v8. Details: https://rxjs.dev/deprecations/to-promise */\n  toPromise(PromiseCtor: typeof Promise): Promise<T | undefined>;\n  /** @deprecated Replaced with {@link firstValueFrom} and {@link lastValueFrom}. Will be removed in v8. Details: https://rxjs.dev/deprecations/to-promise */\n  toPromise(PromiseCtor: PromiseConstructorLike): Promise<T | undefined>;\n  /* tslint:enable:max-line-length */\n\n  /**\n   * Subscribe to this Observable and get a Promise resolving on\n   * `complete` with the last emission (if any).\n   *\n   * **WARNING**: Only use this with observables you *know* will complete. If the source\n   * observable does not complete, you will end up with a promise that is hung up, and\n   * potentially all of the state of an async function hanging out in memory. To avoid\n   * this situation, look into adding something like {@link timeout}, {@link take},\n   * {@link takeWhile}, or {@link takeUntil} amongst others.\n   *\n   * @method toPromise\n   * @param [promiseCtor] a constructor function used to instantiate\n   * the Promise\n   * @return A Promise that resolves with the last value emit, or\n   * rejects on an error. If there were no emissions, Promise\n   * resolves with undefined.\n   * @deprecated Replaced with {@link firstValueFrom} and {@link lastValueFrom}. Will be removed in v8. Details: https://rxjs.dev/deprecations/to-promise\n   */\n  toPromise(promiseCtor?: PromiseConstructorLike): Promise<T | undefined> {\n    promiseCtor = getPromiseCtor(promiseCtor);\n\n    return new promiseCtor((resolve, reject) => {\n      let value: T | undefined;\n      this.subscribe(\n        (x: T) => (value = x),\n        (err: any) => reject(err),\n        () => resolve(value)\n      );\n    }) as Promise<T | undefined>;\n  }\n}\n\n/**\n * Decides between a passed promise constructor from consuming code,\n * A default configured promise constructor, and the native promise\n * constructor and returns it. If nothing can be found, it will throw\n * an error.\n * @param promiseCtor The optional promise constructor to passed by consuming code\n */\nfunction getPromiseCtor(promiseCtor: PromiseConstructorLike | undefined) {\n  return promiseCtor ?? config.Promise ?? Promise;\n}\n\nfunction isObserver<T>(value: any): value is Observer<T> {\n  return value && isFunction(value.next) && isFunction(value.error) && isFunction(value.complete);\n}\n\nfunction isSubscriber<T>(value: any): value is Subscriber<T> {\n  return (value && value instanceof Subscriber) || (isObserver(value) && isSubscription(value));\n}\n","import { isFunction } from './util/isFunction';\nimport { Observer, ObservableNotification } from './types';\nimport { isSubscription, Subscription } from './Subscription';\nimport { config } from './config';\nimport { reportUnhandledError } from './util/reportUnhandledError';\nimport { noop } from './util/noop';\nimport { nextNotification, errorNotification, COMPLETE_NOTIFICATION } from './NotificationFactories';\nimport { timeoutProvider } from './scheduler/timeoutProvider';\nimport { captureError } from './util/errorContext';\n\n/**\n * Implements the {@link Observer} interface and extends the\n * {@link Subscription} class. While the {@link Observer} is the public API for\n * consuming the values of an {@link Observable}, all Observers get converted to\n * a Subscriber, in order to provide Subscription-like capabilities such as\n * `unsubscribe`. Subscriber is a common type in RxJS, and crucial for\n * implementing operators, but it is rarely used as a public API.\n *\n * @class Subscriber<T>\n */\nexport class Subscriber<T> extends Subscription implements Observer<T> {\n  /**\n   * A static factory for a Subscriber, given a (potentially partial) definition\n   * of an Observer.\n   * @param next The `next` callback of an Observer.\n   * @param error The `error` callback of an\n   * Observer.\n   * @param complete The `complete` callback of an\n   * Observer.\n   * @return A Subscriber wrapping the (partially defined)\n   * Observer represented by the given arguments.\n   * @nocollapse\n   * @deprecated Do not use. Will be removed in v8. There is no replacement for this\n   * method, and there is no reason to be creating instances of `Subscriber` directly.\n   * If you have a specific use case, please file an issue.\n   */\n  static create<T>(next?: (x?: T) => void, error?: (e?: any) => void, complete?: () => void): Subscriber<T> {\n    return new SafeSubscriber(next, error, complete);\n  }\n\n  /** @deprecated Internal implementation detail, do not use directly. Will be made internal in v8. */\n  protected isStopped: boolean = false;\n  /** @deprecated Internal implementation detail, do not use directly. Will be made internal in v8. */\n  protected destination: Subscriber<any> | Observer<any>; // this `any` is the escape hatch to erase extra type param (e.g. R)\n\n  /**\n   * @deprecated Internal implementation detail, do not use directly. Will be made internal in v8.\n   * There is no reason to directly create an instance of Subscriber. This type is exported for typings reasons.\n   */\n  constructor(destination?: Subscriber<any> | Observer<any>) {\n    super();\n    if (destination) {\n      this.destination = destination;\n      // Automatically chain subscriptions together here.\n      // if destination is a Subscription, then it is a Subscriber.\n      if (isSubscription(destination)) {\n        destination.add(this);\n      }\n    } else {\n      this.destination = EMPTY_OBSERVER;\n    }\n  }\n\n  /**\n   * The {@link Observer} callback to receive notifications of type `next` from\n   * the Observable, with a value. The Observable may call this method 0 or more\n   * times.\n   * @param {T} [value] The `next` value.\n   * @return {void}\n   */\n  next(value?: T): void {\n    if (this.isStopped) {\n      handleStoppedNotification(nextNotification(value), this);\n    } else {\n      this._next(value!);\n    }\n  }\n\n  /**\n   * The {@link Observer} callback to receive notifications of type `error` from\n   * the Observable, with an attached `Error`. Notifies the Observer that\n   * the Observable has experienced an error condition.\n   * @param {any} [err] The `error` exception.\n   * @return {void}\n   */\n  error(err?: any): void {\n    if (this.isStopped) {\n      handleStoppedNotification(errorNotification(err), this);\n    } else {\n      this.isStopped = true;\n      this._error(err);\n    }\n  }\n\n  /**\n   * The {@link Observer} callback to receive a valueless notification of type\n   * `complete` from the Observable. Notifies the Observer that the Observable\n   * has finished sending push-based notifications.\n   * @return {void}\n   */\n  complete(): void {\n    if (this.isStopped) {\n      handleStoppedNotification(COMPLETE_NOTIFICATION, this);\n    } else {\n      this.isStopped = true;\n      this._complete();\n    }\n  }\n\n  unsubscribe(): void {\n    if (!this.closed) {\n      this.isStopped = true;\n      super.unsubscribe();\n      this.destination = null!;\n    }\n  }\n\n  protected _next(value: T): void {\n    this.destination.next(value);\n  }\n\n  protected _error(err: any): void {\n    try {\n      this.destination.error(err);\n    } finally {\n      this.unsubscribe();\n    }\n  }\n\n  protected _complete(): void {\n    try {\n      this.destination.complete();\n    } finally {\n      this.unsubscribe();\n    }\n  }\n}\n\nexport class SafeSubscriber<T> extends Subscriber<T> {\n  constructor(\n    observerOrNext?: Partial<Observer<T>> | ((value: T) => void) | null,\n    error?: ((e?: any) => void) | null,\n    complete?: (() => void) | null\n  ) {\n    super();\n\n    let next: ((value: T) => void) | undefined;\n    if (isFunction(observerOrNext)) {\n      // The first argument is a function, not an observer. The next\n      // two arguments *could* be observers, or they could be empty.\n      next = observerOrNext;\n    } else if (observerOrNext) {\n      // The first argument is an observer object, we have to pull the handlers\n      // off and capture the owner object as the context. That is because we're\n      // going to put them all in a new destination with ensured methods\n      // for `next`, `error`, and `complete`. That's part of what makes this\n      // the \"Safe\" Subscriber.\n      ({ next, error, complete } = observerOrNext);\n      let context: any;\n      if (this && config.useDeprecatedNextContext) {\n        // This is a deprecated path that made `this.unsubscribe()` available in\n        // next handler functions passed to subscribe. This only exists behind a flag\n        // now, as it is *very* slow.\n        context = Object.create(observerOrNext);\n        context.unsubscribe = () => this.unsubscribe();\n      } else {\n        context = observerOrNext;\n      }\n      next = next?.bind(context);\n      error = error?.bind(context);\n      complete = complete?.bind(context);\n    }\n\n    // Once we set the destination, the superclass `Subscriber` will\n    // do it's magic in the `_next`, `_error`, and `_complete` methods.\n    this.destination = {\n      next: next ? wrapForErrorHandling(next, this) : noop,\n      error: wrapForErrorHandling(error ?? defaultErrorHandler, this),\n      complete: complete ? wrapForErrorHandling(complete, this) : noop,\n    };\n  }\n}\n\n/**\n * Wraps a user-provided handler (or our {@link defaultErrorHandler} in one case) to\n * ensure that any thrown errors are caught and handled appropriately.\n *\n * @param handler The handler to wrap\n * @param instance The SafeSubscriber instance we're going to mark if there's an error.\n */\nfunction wrapForErrorHandling(handler: (arg?: any) => void, instance: SafeSubscriber<any>) {\n  return (...args: any[]) => {\n    try {\n      handler(...args);\n    } catch (err) {\n      if (config.useDeprecatedSynchronousErrorHandling) {\n        captureError(err);\n      } else {\n        // Ideal path, we report this as an unhandled error,\n        // which is thrown on a new call stack.\n        reportUnhandledError(err);\n      }\n    }\n  };\n}\n/**\n * An error handler used when no error handler was supplied\n * to the SafeSubscriber -- meaning no error handler was supplied\n * do the `subscribe` call on our observable.\n * @param err The error to handle\n */\nfunction defaultErrorHandler(err: any) {\n  throw err;\n}\n\n/**\n * A handler for notifications that cannot be sent to a stopped subscriber.\n * @param notification The notification being sent\n * @param subscriber The stopped subscriber\n */\nfunction handleStoppedNotification(notification: ObservableNotification<any>, subscriber: Subscriber<any>) {\n  const { onStoppedNotification } = config;\n  onStoppedNotification && timeoutProvider.setTimeout(() => onStoppedNotification(notification, subscriber));\n}\n\n/**\n * The observer used as a stub for subscriptions where the user did not\n * pass any arguments to `subscribe`. Comes with the default error handling\n * behavior.\n */\nexport const EMPTY_OBSERVER: Readonly<Observer<any>> & { closed: true } = {\n  closed: true,\n  next: noop,\n  error: defaultErrorHandler,\n  complete: noop,\n};\n","import { isFunction } from './util/isFunction';\nimport { UnsubscriptionError } from './util/UnsubscriptionError';\nimport { SubscriptionLike, TeardownLogic, Unsubscribable } from './types';\nimport { arrRemove } from './util/arrRemove';\n\n/**\n * Represents a disposable resource, such as the execution of an Observable. A\n * Subscription has one important method, `unsubscribe`, that takes no argument\n * and just disposes the resource held by the subscription.\n *\n * Additionally, subscriptions may be grouped together through the `add()`\n * method, which will attach a child Subscription to the current Subscription.\n * When a Subscription is unsubscribed, all its children (and its grandchildren)\n * will be unsubscribed as well.\n *\n * @class Subscription\n */\nexport class Subscription implements SubscriptionLike {\n  /** @nocollapse */\n  public static EMPTY = (() => {\n    const empty = new Subscription();\n    empty.closed = true;\n    return empty;\n  })();\n\n  /**\n   * A flag to indicate whether this Subscription has already been unsubscribed.\n   */\n  public closed = false;\n\n  private _parentage: Subscription[] | Subscription | null = null;\n\n  /**\n   * The list of registered teardowns to execute upon unsubscription. Adding and removing from this\n   * list occurs in the {@link #add} and {@link #remove} methods.\n   */\n  private _teardowns: Exclude<TeardownLogic, void>[] | null = null;\n\n  /**\n   * @param initialTeardown A function executed first as part of the teardown\n   * process that is kicked off when {@link #unsubscribe} is called.\n   */\n  constructor(private initialTeardown?: () => void) {}\n\n  /**\n   * Disposes the resources held by the subscription. May, for instance, cancel\n   * an ongoing Observable execution or cancel any other type of work that\n   * started when the Subscription was created.\n   * @return {void}\n   */\n  unsubscribe(): void {\n    let errors: any[] | undefined;\n\n    if (!this.closed) {\n      this.closed = true;\n\n      // Remove this from it's parents.\n      const { _parentage } = this;\n      if (_parentage) {\n        this._parentage = null;\n        if (Array.isArray(_parentage)) {\n          for (const parent of _parentage) {\n            parent.remove(this);\n          }\n        } else {\n          _parentage.remove(this);\n        }\n      }\n\n      const { initialTeardown } = this;\n      if (isFunction(initialTeardown)) {\n        try {\n          initialTeardown();\n        } catch (e) {\n          errors = e instanceof UnsubscriptionError ? e.errors : [e];\n        }\n      }\n\n      const { _teardowns } = this;\n      if (_teardowns) {\n        this._teardowns = null;\n        for (const teardown of _teardowns) {\n          try {\n            execTeardown(teardown);\n          } catch (err) {\n            errors = errors ?? [];\n            if (err instanceof UnsubscriptionError) {\n              errors = [...errors, ...err.errors];\n            } else {\n              errors.push(err);\n            }\n          }\n        }\n      }\n\n      if (errors) {\n        throw new UnsubscriptionError(errors);\n      }\n    }\n  }\n\n  /**\n   * Adds a teardown to this subscription, so that teardown will be unsubscribed/called\n   * when this subscription is unsubscribed. If this subscription is already {@link #closed},\n   * because it has already been unsubscribed, then whatever teardown is passed to it\n   * will automatically be executed (unless the teardown itself is also a closed subscription).\n   *\n   * Closed Subscriptions cannot be added as teardowns to any subscription. Adding a closed\n   * subscription to a any subscription will result in no operation. (A noop).\n   *\n   * Adding a subscription to itself, or adding `null` or `undefined` will not perform any\n   * operation at all. (A noop).\n   *\n   * `Subscription` instances that are added to this instance will automatically remove themselves\n   * if they are unsubscribed. Functions and {@link Unsubscribable} objects that you wish to remove\n   * will need to be removed manually with {@link #remove}\n   *\n   * @param teardown The teardown logic to add to this subscription.\n   */\n  add(teardown: TeardownLogic): void {\n    // Only add the teardown if it's not undefined\n    // and don't add a subscription to itself.\n    if (teardown && teardown !== this) {\n      if (this.closed) {\n        // If this subscription is already closed,\n        // execute whatever teardown is handed to it automatically.\n        execTeardown(teardown);\n      } else {\n        if (teardown instanceof Subscription) {\n          // We don't add closed subscriptions, and we don't add the same subscription\n          // twice. Subscription unsubscribe is idempotent.\n          if (teardown.closed || teardown._hasParent(this)) {\n            return;\n          }\n          teardown._addParent(this);\n        }\n        (this._teardowns = this._teardowns ?? []).push(teardown);\n      }\n    }\n  }\n\n  /**\n   * Checks to see if a this subscription already has a particular parent.\n   * This will signal that this subscription has already been added to the parent in question.\n   * @param parent the parent to check for\n   */\n  private _hasParent(parent: Subscription) {\n    const { _parentage } = this;\n    return _parentage === parent || (Array.isArray(_parentage) && _parentage.includes(parent));\n  }\n\n  /**\n   * Adds a parent to this subscription so it can be removed from the parent if it\n   * unsubscribes on it's own.\n   *\n   * NOTE: THIS ASSUMES THAT {@link _hasParent} HAS ALREADY BEEN CHECKED.\n   * @param parent The parent subscription to add\n   */\n  private _addParent(parent: Subscription) {\n    const { _parentage } = this;\n    this._parentage = Array.isArray(_parentage) ? (_parentage.push(parent), _parentage) : _parentage ? [_parentage, parent] : parent;\n  }\n\n  /**\n   * Called on a child when it is removed via {@link #remove}.\n   * @param parent The parent to remove\n   */\n  private _removeParent(parent: Subscription) {\n    const { _parentage } = this;\n    if (_parentage === parent) {\n      this._parentage = null;\n    } else if (Array.isArray(_parentage)) {\n      arrRemove(_parentage, parent);\n    }\n  }\n\n  /**\n   * Removes a teardown from this subscription that was previously added with the {@link #add} method.\n   *\n   * Note that `Subscription` instances, when unsubscribed, will automatically remove themselves\n   * from every other `Subscription` they have been added to. This means that using the `remove` method\n   * is not a common thing and should be used thoughtfully.\n   *\n   * If you add the same teardown instance of a function or an unsubscribable object to a `Subcription` instance\n   * more than once, you will need to call `remove` the same number of times to remove all instances.\n   *\n   * All teardown instances are removed to free up memory upon unsubscription.\n   *\n   * @param teardown The teardown to remove from this subscription\n   */\n  remove(teardown: Exclude<TeardownLogic, void>): void {\n    const { _teardowns } = this;\n    _teardowns && arrRemove(_teardowns, teardown);\n\n    if (teardown instanceof Subscription) {\n      teardown._removeParent(this);\n    }\n  }\n}\n\nexport const EMPTY_SUBSCRIPTION = Subscription.EMPTY;\n\nexport function isSubscription(value: any): value is Subscription {\n  return (\n    value instanceof Subscription ||\n    (value && 'closed' in value && isFunction(value.remove) && isFunction(value.add) && isFunction(value.unsubscribe))\n  );\n}\n\nfunction execTeardown(teardown: Unsubscribable | (() => void)) {\n  if (isFunction(teardown)) {\n    teardown();\n  } else {\n    teardown.unsubscribe();\n  }\n}\n","import { Subscriber } from './Subscriber';\nimport { ObservableNotification } from './types';\n\n/**\n * The {@link GlobalConfig} object for RxJS. It is used to configure things\n * like how to react on unhandled errors.\n */\nexport const config: GlobalConfig = {\n  onUnhandledError: null,\n  onStoppedNotification: null,\n  Promise: undefined,\n  useDeprecatedSynchronousErrorHandling: false,\n  useDeprecatedNextContext: false,\n};\n\n/**\n * The global configuration object for RxJS, used to configure things\n * like how to react on unhandled errors. Accessible via {@link config}\n * object.\n */\nexport interface GlobalConfig {\n  /**\n   * A registration point for unhandled errors from RxJS. These are errors that\n   * cannot were not handled by consuming code in the usual subscription path. For\n   * example, if you have this configured, and you subscribe to an observable without\n   * providing an error handler, errors from that subscription will end up here. This\n   * will _always_ be called asynchronously on another job in the runtime. This is because\n   * we do not want errors thrown in this user-configured handler to interfere with the\n   * behavior of the library.\n   */\n  onUnhandledError: ((err: any) => void) | null;\n\n  /**\n   * A registration point for notifications that cannot be sent to subscribers because they\n   * have completed, errored or have been explicitly unsubscribed. By default, next, complete\n   * and error notifications sent to stopped subscribers are noops. However, sometimes callers\n   * might want a different behavior. For example, with sources that attempt to report errors\n   * to stopped subscribers, a caller can configure RxJS to throw an unhandled error instead.\n   * This will _always_ be called asynchronously on another job in the runtime. This is because\n   * we do not want errors thrown in this user-configured handler to interfere with the\n   * behavior of the library.\n   */\n  onStoppedNotification: ((notification: ObservableNotification<any>, subscriber: Subscriber<any>) => void) | null;\n\n  /**\n   * The promise constructor used by default for {@link Observable#toPromise toPromise} and {@link Observable#forEach forEach}\n   * methods.\n   *\n   * @deprecated As of version 8, RxJS will no longer support this sort of injection of a\n   * Promise constructor. If you need a Promise implementation other than native promises,\n   * please polyfill/patch Promise as you see appropriate. Will be removed in v8.\n   */\n  Promise?: PromiseConstructorLike;\n\n  /**\n   * If true, turns on synchronous error rethrowing, which is a deprecated behavior\n   * in v6 and higher. This behavior enables bad patterns like wrapping a subscribe\n   * call in a try/catch block. It also enables producer interference, a nasty bug\n   * where a multicast can be broken for all observers by a downstream consumer with\n   * an unhandled error. DO NOT USE THIS FLAG UNLESS IT'S NEEDED TO BUY TIME\n   * FOR MIGRATION REASONS.\n   *\n   * @deprecated As of version 8, RxJS will no longer support synchronous throwing\n   * of unhandled errors. All errors will be thrown on a separate call stack to prevent bad\n   * behaviors described above. Will be removed in v8.\n   */\n  useDeprecatedSynchronousErrorHandling: boolean;\n\n  /**\n   * If true, enables an as-of-yet undocumented feature from v5: The ability to access\n   * `unsubscribe()` via `this` context in `next` functions created in observers passed\n   * to `subscribe`.\n   *\n   * This is being removed because the performance was severely problematic, and it could also cause\n   * issues when types other than POJOs are passed to subscribe as subscribers, as they will likely have\n   * their `this` context overwritten.\n   *\n   * @deprecated As of version 8, RxJS will no longer support altering the\n   * context of next functions provided as part of an observer to Subscribe. Instead,\n   * you will have access to a subscription or a signal or token that will allow you to do things like\n   * unsubscribe and test closed status. Will be removed in v8.\n   */\n  useDeprecatedNextContext: boolean;\n}\n","import { isArrayLike } from '../util/isArrayLike';\nimport { isPromise } from '../util/isPromise';\nimport { observable as Symbol_observable } from '../symbol/observable';\nimport { Subscriber } from '../Subscriber';\n\nimport { Observable } from '../Observable';\nimport { ObservableInput, SchedulerLike, ObservedValueOf, ReadableStreamLike } from '../types';\nimport { scheduled } from '../scheduled/scheduled';\nimport { isFunction } from '../util/isFunction';\nimport { reportUnhandledError } from '../util/reportUnhandledError';\nimport { isInteropObservable } from '../util/isInteropObservable';\nimport { isAsyncIterable } from '../util/isAsyncIterable';\nimport { createInvalidObservableTypeError } from '../util/throwUnobservableError';\nimport { isIterable } from '../util/isIterable';\nimport { isReadableStreamLike, readableStreamLikeToAsyncGenerator } from '../util/isReadableStreamLike';\n\nexport function from<O extends ObservableInput<any>>(input: O): Observable<ObservedValueOf<O>>;\n/** @deprecated The `scheduler` parameter will be removed in v8. Use `scheduled`. Details: https://rxjs.dev/deprecations/scheduler-argument */\nexport function from<O extends ObservableInput<any>>(input: O, scheduler: SchedulerLike): Observable<ObservedValueOf<O>>;\n\n/**\n * Creates an Observable from an Array, an array-like object, a Promise, an iterable object, or an Observable-like object.\n *\n * <span class=\"informal\">Converts almost anything to an Observable.</span>\n *\n * ![](from.png)\n *\n * `from` converts various other objects and data types into Observables. It also converts a Promise, an array-like, or an\n * <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols#iterable\" target=\"_blank\">iterable</a>\n * object into an Observable that emits the items in that promise, array, or iterable. A String, in this context, is treated\n * as an array of characters. Observable-like objects (contains a function named with the ES2015 Symbol for Observable) can also be\n * converted through this operator.\n *\n * ## Examples\n *\n * ### Converts an array to an Observable\n *\n * ```ts\n * import { from } from 'rxjs';\n *\n * const array = [10, 20, 30];\n * const result = from(array);\n *\n * result.subscribe(x => console.log(x));\n *\n * // Logs:\n * // 10\n * // 20\n * // 30\n * ```\n *\n * ---\n *\n * ### Convert an infinite iterable (from a generator) to an Observable\n *\n * ```ts\n * import { from } from 'rxjs';\n * import { take } from 'rxjs/operators';\n *\n * function* generateDoubles(seed) {\n *    let i = seed;\n *    while (true) {\n *      yield i;\n *      i = 2 * i; // double it\n *    }\n * }\n *\n * const iterator = generateDoubles(3);\n * const result = from(iterator).pipe(take(10));\n *\n * result.subscribe(x => console.log(x));\n *\n * // Logs:\n * // 3\n * // 6\n * // 12\n * // 24\n * // 48\n * // 96\n * // 192\n * // 384\n * // 768\n * // 1536\n * ```\n *\n * ---\n *\n * ### With async scheduler\n *\n * ```ts\n * import { from, asyncScheduler } from 'rxjs';\n *\n * console.log('start');\n *\n * const array = [10, 20, 30];\n * const result = from(array, asyncScheduler);\n *\n * result.subscribe(x => console.log(x));\n *\n * console.log('end');\n *\n * // Logs:\n * // start\n * // end\n * // 10\n * // 20\n * // 30\n * ```\n *\n * @see {@link fromEvent}\n * @see {@link fromEventPattern}\n *\n * @param {ObservableInput<T>} A subscription object, a Promise, an Observable-like,\n * an Array, an iterable, or an array-like object to be converted.\n * @param {SchedulerLike} An optional {@link SchedulerLike} on which to schedule the emission of values.\n * @return {Observable<T>}\n */\nexport function from<T>(input: ObservableInput<T>, scheduler?: SchedulerLike): Observable<T> {\n  return scheduler ? scheduled(input, scheduler) : innerFrom(input);\n}\n\n// TODO: Use this throughout the library, rather than the `from` above, to avoid\n// the unnecessary scheduling check and reduce bundled sizes of operators that use `from`.\n// TODO: Eventually, this just becomes `from`, as we don't have the deprecated scheduled path anymore.\nexport function innerFrom<T>(input: ObservableInput<T>): Observable<T> {\n  if (input instanceof Observable) {\n    return input;\n  }\n  if (input != null) {\n    if (isInteropObservable(input)) {\n      return fromInteropObservable(input);\n    }\n    if (isArrayLike(input)) {\n      return fromArrayLike(input);\n    }\n    if (isPromise(input)) {\n      return fromPromise(input);\n    }\n    if (isAsyncIterable(input)) {\n      return fromAsyncIterable(input);\n    }\n    if (isIterable(input)) {\n      return fromIterable(input);\n    }\n    if (isReadableStreamLike(input)) {\n      return fromReadableStreamLike(input);\n    }\n  }\n\n  throw createInvalidObservableTypeError(input);\n}\n\n/**\n * Creates an RxJS Observable from an object that implements `Symbol.observable`.\n * @param obj An object that properly implements `Symbol.observable`.\n */\nfunction fromInteropObservable<T>(obj: any) {\n  return new Observable((subscriber: Subscriber<T>) => {\n    const obs = obj[Symbol_observable]();\n    if (isFunction(obs.subscribe)) {\n      return obs.subscribe(subscriber);\n    }\n    // Should be caught by observable subscribe function error handling.\n    throw new TypeError('Provided object does not correctly implement Symbol.observable');\n  });\n}\n\n/**\n * Synchronously emits the values of an array like and completes.\n * This is exported because there are creation functions and operators that need to\n * make direct use of the same logic, and there's no reason to make them run through\n * `from` conditionals because we *know* they're dealing with an array.\n * @param array The array to emit values from\n */\nexport function fromArrayLike<T>(array: ArrayLike<T>) {\n  return new Observable((subscriber: Subscriber<T>) => {\n    // Loop over the array and emit each value. Note two things here:\n    // 1. We're making sure that the subscriber is not closed on each loop.\n    //    This is so we don't continue looping over a very large array after\n    //    something like a `take`, `takeWhile`, or other synchronous unsubscription\n    //    has already unsubscribed.\n    // 2. In this form, reentrant code can alter that array we're looping over.\n    //    This is a known issue, but considered an edge case. The alternative would\n    //    be to copy the array before executing the loop, but this has\n    //    performance implications.\n    for (let i = 0; i < array.length && !subscriber.closed; i++) {\n      subscriber.next(array[i]);\n    }\n    subscriber.complete();\n  });\n}\n\nfunction fromPromise<T>(promise: PromiseLike<T>) {\n  return new Observable((subscriber: Subscriber<T>) => {\n    promise\n      .then(\n        (value) => {\n          if (!subscriber.closed) {\n            subscriber.next(value);\n            subscriber.complete();\n          }\n        },\n        (err: any) => subscriber.error(err)\n      )\n      .then(null, reportUnhandledError);\n  });\n}\n\nfunction fromIterable<T>(iterable: Iterable<T>) {\n  return new Observable((subscriber: Subscriber<T>) => {\n    for (const value of iterable) {\n      subscriber.next(value);\n      if (subscriber.closed) {\n        return;\n      }\n    }\n    subscriber.complete();\n  });\n}\n\nfunction fromAsyncIterable<T>(asyncIterable: AsyncIterable<T>) {\n  return new Observable((subscriber: Subscriber<T>) => {\n    process(asyncIterable, subscriber).catch((err) => subscriber.error(err));\n  });\n}\n\nfunction fromReadableStreamLike<T>(readableStream: ReadableStreamLike<T>) {\n  return fromAsyncIterable(readableStreamLikeToAsyncGenerator(readableStream));\n}\n\nasync function process<T>(asyncIterable: AsyncIterable<T>, subscriber: Subscriber<T>) {\n  for await (const value of asyncIterable) {\n    subscriber.next(value);\n    // A side-effect may have closed our subscriber,\n    // check before the next iteration.\n    if (subscriber.closed) {\n      return;\n    }\n  }\n  subscriber.complete();\n}\n","import { SchedulerLike } from '../types';\nimport { scheduleArray } from '../scheduled/scheduleArray';\nimport { fromArrayLike } from './from';\n\nexport function internalFromArray<T>(input: ArrayLike<T>, scheduler?: SchedulerLike) {\n  return scheduler ? scheduleArray(input, scheduler) : fromArrayLike(input);\n}\n","import { SchedulerLike, ValueFromArray } from '../types';\nimport { internalFromArray } from './fromArray';\nimport { Observable } from '../Observable';\nimport { scheduleArray } from '../scheduled/scheduleArray';\nimport { popScheduler } from '../util/args';\n\n// Devs are more likely to pass null or undefined than they are a scheduler\n// without accompanying values. To make things easier for (naughty) devs who\n// use the `strictNullChecks: false` TypeScript compiler option, these\n// overloads with explicit null and undefined values are included.\n\nexport function of(value: null): Observable<null>;\nexport function of(value: undefined): Observable<undefined>;\n\n/** @deprecated The `scheduler` parameter will be removed in v8. Use `scheduled`. Details: https://rxjs.dev/deprecations/scheduler-argument */\nexport function of(scheduler: SchedulerLike): Observable<never>;\n/** @deprecated The `scheduler` parameter will be removed in v8. Use `scheduled`. Details: https://rxjs.dev/deprecations/scheduler-argument */\nexport function of<A extends readonly unknown[]>(...valuesAndScheduler: [...A, SchedulerLike]): Observable<ValueFromArray<A>>;\n\nexport function of(): Observable<never>;\n/** @deprecated Do not specify explicit type parameters. Signatures with type parameters that cannot be inferred will be removed in v8. */\nexport function of<T>(): Observable<T>;\nexport function of<T>(value: T): Observable<T>;\nexport function of<A extends readonly unknown[]>(...values: A): Observable<ValueFromArray<A>>;\n\n/**\n * Converts the arguments to an observable sequence.\n *\n * <span class=\"informal\">Each argument becomes a `next` notification.</span>\n *\n * ![](of.png)\n *\n * Unlike {@link from}, it does not do any flattening and emits each argument in whole\n * as a separate `next` notification.\n *\n * ## Examples\n *\n * Emit the values `10, 20, 30`\n *\n * ```ts\n * import { of } from 'rxjs';\n *\n * of(10, 20, 30)\n * .subscribe(\n *   next => console.log('next:', next),\n *   err => console.log('error:', err),\n *   () => console.log('the end'),\n * );\n *\n * // Outputs\n * // next: 10\n * // next: 20\n * // next: 30\n * // the end\n * ```\n *\n * Emit the array `[1, 2, 3]`\n *\n * ```ts\n * import { of } from 'rxjs';\n *\n * of([1, 2, 3])\n * .subscribe(\n *   next => console.log('next:', next),\n *   err => console.log('error:', err),\n *   () => console.log('the end'),\n * );\n *\n * // Outputs\n * // next: [1, 2, 3]\n * // the end\n * ```\n *\n * @see {@link from}\n * @see {@link range}\n *\n * @param {...T} values A comma separated list of arguments you want to be emitted\n * @return {Observable} An Observable that emits the arguments\n * described above and then completes.\n */\nexport function of<T>(...args: Array<T | SchedulerLike>): Observable<T> {\n  const scheduler = popScheduler(args);\n  return scheduler ? scheduleArray(args as T[], scheduler) : internalFromArray(args as T[]);\n}\n","import { Observable } from '../Observable';\nimport { SchedulerLike } from '../types';\n\nexport function scheduleArray<T>(input: ArrayLike<T>, scheduler: SchedulerLike) {\n  return new Observable<T>((subscriber) => {\n    // The current array index.\n    let i = 0;\n    // Start iterating over the array like on a schedule.\n    return scheduler.schedule(function () {\n      if (i === input.length) {\n        // If we have hit the end of the array like in the\n        // previous job, we can complete.\n        subscriber.complete();\n      } else {\n        // Otherwise let's next the value at the current index,\n        // then increment our index.\n        subscriber.next(input[i++]);\n        // If the last emission didn't cause us to close the subscriber\n        // (via take or some side effect), reschedule the job and we'll\n        // make another pass.\n        if (!subscriber.closed) {\n          this.schedule();\n        }\n      }\n    });\n  });\n}\n","import { SchedulerLike } from '../types';\nimport { Observable } from '../Observable';\nimport { Subscription } from '../Subscription';\n\nexport function scheduleAsyncIterable<T>(input: AsyncIterable<T>, scheduler: SchedulerLike) {\n  if (!input) {\n    throw new Error('Iterable cannot be null');\n  }\n  return new Observable<T>(subscriber => {\n    const sub = new Subscription();\n    sub.add(\n      scheduler.schedule(() => {\n        const iterator = input[Symbol.asyncIterator]();\n        sub.add(scheduler.schedule(function () {\n          iterator.next().then(result => {\n            if (result.done) {\n              subscriber.complete();\n            } else {\n              subscriber.next(result.value);\n              this.schedule();\n            }\n          });\n        }));\n      })\n    );\n    return sub;\n  });\n}\n","import { Observable } from '../Observable';\nimport { SchedulerLike } from '../types';\nimport { iterator as Symbol_iterator } from '../symbol/iterator';\nimport { isFunction } from '../util/isFunction';\nimport { caughtSchedule } from '../util/caughtSchedule';\n\n/**\n * Used in {@link scheduled} to create an observable from an Iterable.\n * @param input The iterable to create an observable from\n * @param scheduler The scheduler to use\n */\nexport function scheduleIterable<T>(input: Iterable<T>, scheduler: SchedulerLike) {\n  return new Observable<T>((subscriber) => {\n    let iterator: Iterator<T, T>;\n\n    // Schedule the initial creation of the iterator from\n    // the iterable. This is so the code in the iterable is\n    // not called until the scheduled job fires.\n    subscriber.add(\n      scheduler.schedule(() => {\n        // Create the iterator.\n        iterator = (input as any)[Symbol_iterator]();\n\n        // Schedule the first iteration and emission.\n        caughtSchedule(subscriber, scheduler, function () {\n          // Pull the value out of the iterator\n          const { value, done } = iterator.next();\n          if (done) {\n            // If it is \"done\" we just complete. This mimics the\n            // behavior of JavaScript's `for..of` consumption of\n            // iterables, which will not emit the value from an iterator\n            // result of `{ done: true: value: 'here' }`.\n            subscriber.complete();\n          } else {\n            // The iterable is not done, emit the value.\n            subscriber.next(value);\n            // Reschedule. This will cause this function to be\n            // called again on the same scheduled delay.\n            this.schedule();\n          }\n        });\n      })\n    );\n\n    // During teardown, if we see this iterator has a `return` method,\n    // then we know it is a Generator, and not just an Iterator. So we call\n    // the `return()` function. This will ensure that any `finally { }` blocks\n    // inside of the generator we can hit will be hit properly.\n    return () => isFunction(iterator?.return) && iterator.return();\n  });\n}\n","import { Observable } from '../Observable';\nimport { Subscription } from '../Subscription';\nimport { observable as Symbol_observable } from '../symbol/observable';\nimport { InteropObservable, SchedulerLike, Subscribable } from '../types';\n\nexport function scheduleObservable<T>(input: InteropObservable<T>, scheduler: SchedulerLike) {\n  return new Observable<T>(subscriber => {\n    const sub = new Subscription();\n    sub.add(scheduler.schedule(() => {\n      const observable: Subscribable<T> = (input as any)[Symbol_observable]();\n      sub.add(observable.subscribe({\n        next(value) { sub.add(scheduler.schedule(() => subscriber.next(value))); },\n        error(err) { sub.add(scheduler.schedule(() => subscriber.error(err))); },\n        complete() { sub.add(scheduler.schedule(() => subscriber.complete())); },\n      }));\n    }));\n    return sub;\n  });\n}\n","import { Observable } from '../Observable';\nimport { SchedulerLike } from '../types';\n\nexport function schedulePromise<T>(input: PromiseLike<T>, scheduler: SchedulerLike) {\n  return new Observable<T>((subscriber) => {\n    return scheduler.schedule(() =>\n      input.then(\n        (value) => {\n          subscriber.add(\n            scheduler.schedule(() => {\n              subscriber.next(value);\n              subscriber.add(scheduler.schedule(() => subscriber.complete()));\n            })\n          );\n        },\n        (err) => {\n          subscriber.add(scheduler.schedule(() => subscriber.error(err)));\n        }\n      )\n    );\n  });\n}\n","import { SchedulerLike, ReadableStreamLike } from '../types';\nimport { Observable } from '../Observable';\nimport { scheduleAsyncIterable } from './scheduleAsyncIterable';\nimport { readableStreamLikeToAsyncGenerator } from '../util/isReadableStreamLike';\n\nexport function scheduleReadableStreamLike<T>(input: ReadableStreamLike<T>, scheduler: SchedulerLike): Observable<T> {\n  return scheduleAsyncIterable(readableStreamLikeToAsyncGenerator(input), scheduler);\n}\n","import { scheduleObservable } from './scheduleObservable';\nimport { schedulePromise } from './schedulePromise';\nimport { scheduleArray } from './scheduleArray';\nimport { scheduleIterable } from './scheduleIterable';\nimport { scheduleAsyncIterable } from './scheduleAsyncIterable';\nimport { isInteropObservable } from '../util/isInteropObservable';\nimport { isPromise } from '../util/isPromise';\nimport { isArrayLike } from '../util/isArrayLike';\nimport { isIterable } from '../util/isIterable';\nimport { ObservableInput, SchedulerLike } from '../types';\nimport { Observable } from '../Observable';\nimport { isAsyncIterable } from '../util/isAsyncIterable';\nimport { createInvalidObservableTypeError } from '../util/throwUnobservableError';\nimport { isReadableStreamLike } from '../util/isReadableStreamLike';\nimport { scheduleReadableStreamLike } from './scheduleReadableStreamLike';\n\n/**\n * Converts from a common {@link ObservableInput} type to an observable where subscription and emissions\n * are scheduled on the provided scheduler.\n *\n * @see {@link from}\n * @see {@link of}\n *\n * @param input The observable, array, promise, iterable, etc you would like to schedule\n * @param scheduler The scheduler to use to schedule the subscription and emissions from\n * the returned observable.\n */\nexport function scheduled<T>(input: ObservableInput<T>, scheduler: SchedulerLike): Observable<T> {\n  if (input != null) {\n    if (isInteropObservable(input)) {\n      return scheduleObservable(input, scheduler);\n    }\n    if (isArrayLike(input)) {\n      return scheduleArray(input, scheduler);\n    }\n    if (isPromise(input)) {\n      return schedulePromise(input, scheduler);\n    }\n    if (isAsyncIterable(input)) {\n      return scheduleAsyncIterable(input, scheduler);\n    }\n    if (isIterable(input)) {\n      return scheduleIterable(input, scheduler);\n    }\n    if (isReadableStreamLike(input)) {\n      return scheduleReadableStreamLike(input, scheduler);\n    }\n  }\n  throw createInvalidObservableTypeError(input);\n}\n","type SetTimeoutFunction = (handler: () => void, timeout?: number, ...args: any[]) => number;\ntype ClearTimeoutFunction = (handle: number) => void;\n\ninterface TimeoutProvider {\n  setTimeout: SetTimeoutFunction;\n  clearTimeout: ClearTimeoutFunction;\n  delegate:\n    | {\n        setTimeout: SetTimeoutFunction;\n        clearTimeout: ClearTimeoutFunction;\n      }\n    | undefined;\n}\n\nexport const timeoutProvider: TimeoutProvider = {\n  // When accessing the delegate, use the variable rather than `this` so that\n  // the functions can be called without being bound to the provider.\n  setTimeout(...args) {\n    const { delegate } = timeoutProvider;\n    return (delegate?.setTimeout || setTimeout)(...args);\n  },\n  clearTimeout(handle) {\n    const { delegate } = timeoutProvider;\n    return (delegate?.clearTimeout || clearTimeout)(handle);\n  },\n  delegate: undefined,\n};\n","export function getSymbolIterator(): symbol {\n  if (typeof Symbol !== 'function' || !Symbol.iterator) {\n    return '@@iterator' as any;\n  }\n\n  return Symbol.iterator;\n}\n\nexport const iterator = getSymbolIterator();\n","/** Symbol.observable or a string \"@@observable\". Used for interop */\nexport const observable: string | symbol = (() => (typeof Symbol === 'function' && Symbol.observable) || '@@observable')();\n","import { createErrorClass } from './createErrorClass';\n\nexport interface UnsubscriptionError extends Error {\n  readonly errors: any[];\n}\n\nexport interface UnsubscriptionErrorCtor {\n  /**\n   * @deprecated Internal implementation detail. Do not construct error instances.\n   * Cannot be tagged as internal: https://github.com/ReactiveX/rxjs/issues/6269\n   */\n  new (errors: any[]): UnsubscriptionError;\n}\n\n/**\n * An error thrown when one or more errors have occurred during the\n * `unsubscribe` of a {@link Subscription}.\n */\nexport const UnsubscriptionError: UnsubscriptionErrorCtor = createErrorClass(\n  (_super) =>\n    function UnsubscriptionErrorImpl(this: any, errors: (Error | string)[]) {\n      _super(this);\n      this.message = errors\n        ? `${errors.length} errors occurred during unsubscription:\n${errors.map((err, i) => `${i + 1}) ${err.toString()}`).join('\\n  ')}`\n        : '';\n      this.name = 'UnsubscriptionError';\n      this.errors = errors;\n    }\n);\n","import { SchedulerLike } from '../types';\nimport { isFunction } from './isFunction';\nimport { isScheduler } from './isScheduler';\n\nfunction last<T>(arr: T[]): T | undefined {\n  return arr[arr.length - 1];\n}\n\nexport function popResultSelector(args: any[]): ((...args: unknown[]) => unknown) | undefined {\n  return isFunction(last(args)) ? args.pop() : undefined;\n}\n\nexport function popScheduler(args: any[]): SchedulerLike | undefined {\n  return isScheduler(last(args)) ? args.pop() : undefined;\n}\n\nexport function popNumber(args: any[], defaultValue: number): number {\n  return typeof last(args) === 'number' ? args.pop()! : defaultValue;\n}\n","/**\n * Removes an item from an array, mutating it.\n * @param arr The array to remove the item from\n * @param item The item to remove\n */\nexport function arrRemove<T>(arr: T[] | undefined | null, item: T) {\n  if (arr) {\n    const index = arr.indexOf(item);\n    0 <= index && arr.splice(index, 1);\n  }\n}\n","import { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { SchedulerAction, SchedulerLike } from '../types';\n\nexport function caughtSchedule(\n  subscriber: Subscriber<any>,\n  scheduler: SchedulerLike,\n  execute: (this: SchedulerAction<any>) => void,\n  delay = 0\n): Subscription {\n  const subscription = scheduler.schedule(function () {\n    try {\n      execute.call(this);\n    } catch (err) {\n      subscriber.error(err);\n    }\n  }, delay);\n  subscriber.add(subscription);\n  return subscription;\n}\n","/**\n * Used to create Error subclasses until the community moves away from ES5.\n *\n * This is because compiling from TypeScript down to ES5 has issues with subclassing Errors\n * as well as other built-in types: https://github.com/Microsoft/TypeScript/issues/12123\n *\n * @param createImpl A factory function to create the actual constructor implementation. The returned\n * function should be a named function that calls `_super` internally.\n */\nexport function createErrorClass<T>(createImpl: (_super: any) => any): T {\n  const _super = (instance: any) => {\n    Error.call(instance);\n    instance.stack = new Error().stack;\n  };\n\n  const ctorFunc = createImpl(_super);\n  ctorFunc.prototype = Object.create(Error.prototype);\n  ctorFunc.prototype.constructor = ctorFunc;\n  return ctorFunc;\n}\n","import { config } from '../config';\n\nlet context: { errorThrown: boolean; error: any } | null = null;\n\n/**\n * Handles dealing with errors for super-gross mode. Creates a context, in which\n * any synchronously thrown errors will be passed to {@link captureError}. Which\n * will record the error such that it will be rethrown after the call back is complete.\n * TODO: Remove in v8\n * @param cb An immediately executed function.\n */\nexport function errorContext(cb: () => void) {\n  if (config.useDeprecatedSynchronousErrorHandling) {\n    const isRoot = !context;\n    if (isRoot) {\n      context = { errorThrown: false, error: null };\n    }\n    cb();\n    if (isRoot) {\n      const { errorThrown, error } = context!;\n      context = null;\n      if (errorThrown) {\n        throw error;\n      }\n    }\n  } else {\n    // This is the general non-deprecated path for everyone that\n    // isn't crazy enough to use super-gross mode (useDeprecatedSynchronousErrorHandling)\n    cb();\n  }\n}\n\n/**\n * Captures errors only in super-gross mode.\n * @param err the error to capture\n */\nexport function captureError(err: any) {\n  if (config.useDeprecatedSynchronousErrorHandling && context) {\n    context.errorThrown = true;\n    context.error = err;\n  }\n}\n","export function identity<T>(x: T): T {\n  return x;\n}\n","export const isArrayLike = (<T>(x: any): x is ArrayLike<T> => x && typeof x.length === 'number' && typeof x !== 'function');","import { isFunction } from './isFunction';\n\nexport function isAsyncIterable<T>(obj: any): obj is AsyncIterable<T> {\n  return Symbol.asyncIterator && isFunction(obj?.[Symbol.asyncIterator]);\n}\n","/**\n * Returns true if the object is a function.\n * @param value The value to check\n */\nexport function isFunction(value: any): value is (...args: any[]) => any {\n  return typeof value === 'function';\n}\n","import { InteropObservable } from '../types';\nimport { observable as Symbol_observable } from '../symbol/observable';\nimport { isFunction } from './isFunction';\n\n/** Identifies an input as being Observable (but not necessary an Rx Observable) */\nexport function isInteropObservable(input: any): input is InteropObservable<any> {\n  return isFunction(input[Symbol_observable]);\n}\n","import { iterator as Symbol_iterator } from '../symbol/iterator';\nimport { isFunction } from './isFunction';\n\n/** Identifies an input as being an Iterable */\nexport function isIterable(input: any): input is Iterable<any> {\n  return isFunction(input?.[Symbol_iterator]);\n}\n","import { isFunction } from \"./isFunction\";\n\n/**\n * Tests to see if the object is \"thennable\".\n * @param value the object to test\n */\nexport function isPromise(value: any): value is PromiseLike<any> {\n  return isFunction(value?.then);\n}\n","import { ReadableStreamLike } from '../types';\nimport { isFunction } from './isFunction';\n\nexport async function* readableStreamLikeToAsyncGenerator<T>(readableStream: ReadableStreamLike<T>): AsyncGenerator<T> {\n  const reader = readableStream.getReader();\n  try {\n    while (true) {\n      const { value, done } = await reader.read();\n      if (done) {\n        return;\n      }\n      yield value!;\n    }\n  } finally {\n    reader.releaseLock();\n  }\n}\n\nexport function isReadableStreamLike<T>(obj: any): obj is ReadableStreamLike<T> {\n  // We don't want to use instanceof checks because they would return\n  // false for instances from another Realm, like an <iframe>.\n  return isFunction(obj?.getReader);\n}\n","import { SchedulerLike } from '../types';\nimport { isFunction } from './isFunction';\n\nexport function isScheduler(value: any): value is SchedulerLike {\n  return value && isFunction(value.schedule);\n}\n","/* tslint:disable:no-empty */\nexport function noop() { }\n","import { identity } from './identity';\nimport { UnaryFunction } from '../types';\n\nexport function pipe(): typeof identity;\nexport function pipe<T, A>(fn1: UnaryFunction<T, A>): UnaryFunction<T, A>;\nexport function pipe<T, A, B>(fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>): UnaryFunction<T, B>;\nexport function pipe<T, A, B, C>(fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>, fn3: UnaryFunction<B, C>): UnaryFunction<T, C>;\nexport function pipe<T, A, B, C, D>(\n  fn1: UnaryFunction<T, A>,\n  fn2: UnaryFunction<A, B>,\n  fn3: UnaryFunction<B, C>,\n  fn4: UnaryFunction<C, D>\n): UnaryFunction<T, D>;\nexport function pipe<T, A, B, C, D, E>(\n  fn1: UnaryFunction<T, A>,\n  fn2: UnaryFunction<A, B>,\n  fn3: UnaryFunction<B, C>,\n  fn4: UnaryFunction<C, D>,\n  fn5: UnaryFunction<D, E>\n): UnaryFunction<T, E>;\nexport function pipe<T, A, B, C, D, E, F>(\n  fn1: UnaryFunction<T, A>,\n  fn2: UnaryFunction<A, B>,\n  fn3: UnaryFunction<B, C>,\n  fn4: UnaryFunction<C, D>,\n  fn5: UnaryFunction<D, E>,\n  fn6: UnaryFunction<E, F>\n): UnaryFunction<T, F>;\nexport function pipe<T, A, B, C, D, E, F, G>(\n  fn1: UnaryFunction<T, A>,\n  fn2: UnaryFunction<A, B>,\n  fn3: UnaryFunction<B, C>,\n  fn4: UnaryFunction<C, D>,\n  fn5: UnaryFunction<D, E>,\n  fn6: UnaryFunction<E, F>,\n  fn7: UnaryFunction<F, G>\n): UnaryFunction<T, G>;\nexport function pipe<T, A, B, C, D, E, F, G, H>(\n  fn1: UnaryFunction<T, A>,\n  fn2: UnaryFunction<A, B>,\n  fn3: UnaryFunction<B, C>,\n  fn4: UnaryFunction<C, D>,\n  fn5: UnaryFunction<D, E>,\n  fn6: UnaryFunction<E, F>,\n  fn7: UnaryFunction<F, G>,\n  fn8: UnaryFunction<G, H>\n): UnaryFunction<T, H>;\nexport function pipe<T, A, B, C, D, E, F, G, H, I>(\n  fn1: UnaryFunction<T, A>,\n  fn2: UnaryFunction<A, B>,\n  fn3: UnaryFunction<B, C>,\n  fn4: UnaryFunction<C, D>,\n  fn5: UnaryFunction<D, E>,\n  fn6: UnaryFunction<E, F>,\n  fn7: UnaryFunction<F, G>,\n  fn8: UnaryFunction<G, H>,\n  fn9: UnaryFunction<H, I>\n): UnaryFunction<T, I>;\nexport function pipe<T, A, B, C, D, E, F, G, H, I>(\n  fn1: UnaryFunction<T, A>,\n  fn2: UnaryFunction<A, B>,\n  fn3: UnaryFunction<B, C>,\n  fn4: UnaryFunction<C, D>,\n  fn5: UnaryFunction<D, E>,\n  fn6: UnaryFunction<E, F>,\n  fn7: UnaryFunction<F, G>,\n  fn8: UnaryFunction<G, H>,\n  fn9: UnaryFunction<H, I>,\n  ...fns: UnaryFunction<any, any>[]\n): UnaryFunction<T, unknown>;\n\nexport function pipe(...fns: Array<UnaryFunction<any, any>>): UnaryFunction<any, any> {\n  return pipeFromArray(fns);\n}\n\n/** @internal */\nexport function pipeFromArray<T, R>(fns: Array<UnaryFunction<T, R>>): UnaryFunction<T, R> {\n  if (fns.length === 0) {\n    return identity as UnaryFunction<any, any>;\n  }\n\n  if (fns.length === 1) {\n    return fns[0];\n  }\n\n  return function piped(input: T): R {\n    return fns.reduce((prev: any, fn: UnaryFunction<T, R>) => fn(prev), input as any);\n  };\n}\n","import { config } from '../config';\nimport { timeoutProvider } from '../scheduler/timeoutProvider';\n\n/**\n * Handles an error on another job either with the user-configured {@link onUnhandledError},\n * or by throwing it on that new job so it can be picked up by `window.onerror`, `process.on('error')`, etc.\n *\n * This should be called whenever there is an error that is out-of-band with the subscription\n * or when an error hits a terminal boundary of the subscription and no error handler was provided.\n *\n * @param err the error to report\n */\nexport function reportUnhandledError(err: any) {\n  timeoutProvider.setTimeout(() => {\n    const { onUnhandledError } = config;\n    if (onUnhandledError) {\n      // Execute the user-configured error handler.\n      onUnhandledError(err);\n    } else {\n      // Throw so it is picked up by the runtime's uncaught error mechanism.\n      throw err;\n    }\n  });\n}\n","/**\n * Creates the TypeError to throw if an invalid object is passed to `from` or `scheduled`.\n * @param input The object that was passed.\n */\nexport function createInvalidObservableTypeError(input: any) {\n  // TODO: We should create error codes that can be looked up, so this can be less verbose.\n  return new TypeError(\n    `You provided ${\n      input !== null && typeof input === 'object' ? 'an invalid object' : `'${input}'`\n    } where a stream was expected. You can provide an Observable, Promise, ReadableStream, Array, AsyncIterable, or Iterable.`\n  );\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from) {\r\n    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)\r\n        to[j] = from[i];\r\n    return to;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import { BasePlugin } from \"./index\";\nexport class AudioPlugin extends BasePlugin {\n    constructor(factory, pluginOwner, prototypeObject) {\n        super(factory, pluginOwner, prototypeObject);\n        this.factory = factory;\n        this.prototypeObject = prototypeObject;\n    }\n}\n","export class LinkedStoreInterface {\n    constructor(owner, linkedStore) {\n        this.owner = owner;\n        this.linkedStore = linkedStore;\n        this.listeners = new Map();\n        linkedStore.addEventListener(\"altered\", this);\n    }\n    handleEvent(e) {\n        const term = e.detail.term;\n        const value = e.detail.value;\n        if (this.listeners[term] && typeof this.listeners[term] == \"function\") {\n            this.listeners[term].call(this.owner, value);\n        }\n    }\n    destroy() {\n        this.linkedStore.removeEventListener(\"altered\", this);\n        this.listeners.clear();\n    }\n    requestTerm(term) {\n        return this.linkedStore.getTerm(term);\n    }\n    listenForTerm(term, callback) {\n        if (this.listeners.hasOwnProperty(term)) {\n            throw \"Listener already exists\";\n        }\n        this.listeners.set(term, callback);\n    }\n    releaseListenerForTerm(term) {\n        this.listeners.delete(term);\n    }\n}\n","/* jshint esversion: 6 */\nimport { NumberParameter } from \"./parameters/NumberParameter\";\nimport { StringParameter } from \"./parameters/StringParameter\";\nimport { ButtonParameter } from \"./parameters/ButtonParameter\";\nimport { SwitchParameter } from \"./parameters/SwitchParameter\";\nimport { ListParameter } from \"./parameters/ListParameter\";\nimport { URLParameter } from \"./parameters/URLParameter\";\nimport { AssetParameter } from \"./parameters/AssetParameter\";\nimport { isPluginParameter, isPluginParameterObject } from \"./parameters/IPluginParameter\";\nfunction formatParameterName(name) {\n    name = name.toLowerCase();\n    name = name.replace(\"/\", \"_\");\n    return name;\n}\nexport class ParameterManager {\n    constructor(owner, pluginExternalInterface, name = \"default\", exposed = true) {\n        this.owner = owner;\n        this.pluginExternalInterface = pluginExternalInterface;\n        this.name = name;\n        this.exposed = exposed;\n        this.parameterList = [];\n        this.eventTarget = new EventTarget();\n        this.visibleName = this.name;\n    }\n    findParameter(baseName) {\n        let name = baseName.replace(\"/\", \"_\").split(\".\").reverse();\n        const lowerCaseParameterNames = this.parameterList.map(i => formatParameterName(i.name));\n        const param = this.parameterList[lowerCaseParameterNames.indexOf(name.pop().toLowerCase())];\n        if (param instanceof ParameterManager && name.length > 0) {\n            return param.getParameterByName(name.reverse().join(\".\"));\n        }\n        else {\n            return param;\n        }\n    }\n    isParameterNameAvailable(name) {\n        name = formatParameterName(name);\n        if (!/^\\w+( \\w+)*(-\\w+)*(_\\w+)*$/.test(name)) {\n            console.warn(\"Invalid string for name\", name, \"Will not expose as dot notations\");\n            return true;\n        }\n        if (self.hasOwnProperty(name)) {\n            throw new Error(\"Name is reserved or already defined\");\n        }\n        return true;\n    }\n    buildParameterObject() {\n        const obj = {};\n        this.parameterList.filter(function (p) {\n            return p.exposed;\n        }).forEach(function (e) {\n            obj[e.name] = e.getParameterObject();\n        });\n        return obj;\n    }\n    addParameter(param) {\n        if (param.name.includes(\".\")) {\n            throw (\"Name cannot include a period\");\n        }\n        var exists = this.parameterList.findIndex(function (e) {\n            return e === param;\n        }, param);\n        if (exists === -1) {\n            Object.defineProperty(this, param.name, {\n                value: param\n            });\n            this.parameterList.push(param);\n        }\n        return param;\n    }\n    addEventListener(type, listener, options) {\n        return this.eventTarget.addEventListener(type, listener, options);\n    }\n    removeEventListener(type, listener, options) {\n        return this.eventTarget.removeEventListener(type, listener, options);\n    }\n    handleEvent(e) {\n        let detail = e.detail;\n        if (detail.updateInterfaces === true) {\n            this.pluginExternalInterface.updateInterfaces();\n        }\n        if (this.name !== \"default\") {\n            detail.parameter.name = `${this.name}.${detail.parameter.name}`;\n        }\n        if (e.type == \"parameterset\" && detail !== undefined) {\n            this.eventTarget.dispatchEvent(new CustomEvent(\"parameterset\", { detail: detail }));\n        }\n    }\n    destroy() {\n        this.deleteAllParameters();\n    }\n    createNumberParameter(name, defaultValue, minimum, maximum, toStringFunc, visibleName, exposed) {\n        if (typeof name !== \"string\" || typeof defaultValue !== \"number\" || (minimum !== undefined && typeof minimum !== \"number\") || (maximum !== undefined && typeof maximum !== \"number\")) {\n            throw (\"Invlid constructor\");\n        }\n        if (typeof toStringFunc != \"function\" && toStringFunc !== undefined) {\n            throw (\"toStringFunc must be a function or undefined\");\n        }\n        name = name.toLowerCase();\n        if (this.isParameterNameAvailable(name)) {\n            const param = new NumberParameter(this.owner, name, defaultValue, minimum, maximum, toStringFunc, visibleName, exposed);\n            this.addParameter(param);\n            param.addEventListener(\"parameterset\", this);\n            return param;\n        }\n    }\n    createStringParameter(name, defaultValue, maxLength, toStringFunc, visibleName, exposed) {\n        if (typeof name !== \"string\" || typeof defaultValue !== \"string\" || (maxLength !== undefined && typeof maxLength !== \"number\")) {\n            throw (\"Invlid constructor\");\n        }\n        if (typeof toStringFunc != \"function\" && toStringFunc !== undefined) {\n            throw (\"toStringFunc must be a function or undefined\");\n        }\n        name = name.toLowerCase();\n        if (this.isParameterNameAvailable(name)) {\n            var param = new StringParameter(this.owner, name, defaultValue, maxLength, toStringFunc, visibleName, exposed);\n            this.addParameter(param);\n            param.addEventListener(\"parameterset\", this);\n            return param;\n        }\n    }\n    createButtonParameter(name, visibleName, exposed) {\n        if (typeof name !== \"string\") {\n            throw (\"Invalid constructor\");\n        }\n        name = name.toLowerCase();\n        if (this.isParameterNameAvailable(name)) {\n            const param = new ButtonParameter(this.owner, name, visibleName, exposed);\n            this.addParameter(param);\n            param.addEventListener(\"parameterset\", this);\n            return param;\n        }\n    }\n    createSwitchParameter(name, defaultValue, minState, maxState, toStringFunc, visibleName, exposed) {\n        if (typeof name !== \"string\" || typeof defaultValue !== \"number\" || typeof minState !== \"number\" || typeof maxState !== \"number\") {\n            throw (\"Invlid constructor\");\n        }\n        if (typeof toStringFunc != \"function\" && toStringFunc !== undefined) {\n            throw (\"toStringFunc must be a function or undefined\");\n        }\n        name = name.toLowerCase();\n        if (this.isParameterNameAvailable(name)) {\n            const param = new SwitchParameter(this.owner, name, defaultValue, minState, maxState, toStringFunc, visibleName, exposed);\n            this.addParameter(param);\n            param.addEventListener(\"parameterset\", this);\n            return param;\n        }\n    }\n    createListParameter(name, defaultValue, listOfValues, toStringFunc, visibleName, exposed) {\n        if (typeof name !== \"string\" || typeof defaultValue === \"undefined\" || !Array.isArray(listOfValues)) {\n            throw (\"Invlid constructor\");\n        }\n        if (typeof toStringFunc != \"function\" && toStringFunc !== undefined) {\n            throw (\"toStringFunc must be a function or undefined\");\n        }\n        if (listOfValues.includes(defaultValue) === false) {\n            throw (\"Invlid constructor - default value missing\");\n        }\n        name = name.toLowerCase();\n        if (this.isParameterNameAvailable(name)) {\n            const param = new ListParameter(this.owner, name, defaultValue, listOfValues, toStringFunc, visibleName, exposed);\n            this.addParameter(param);\n            param.addEventListener(\"parameterset\", this);\n            return param;\n        }\n    }\n    createURLParameter(name, defaultValue, maxLength, toStringFunc, visibleName, exposed) {\n        if (typeof name !== \"string\" || (maxLength !== undefined && typeof maxLength !== \"number\")) {\n            throw (\"Invlid constructor\");\n        }\n        if (typeof toStringFunc != \"function\" && toStringFunc !== undefined) {\n            throw (\"toStringFunc must be a function or undefined\");\n        }\n        name = name.toLowerCase();\n        if (this.isParameterNameAvailable(name)) {\n            const param = new URLParameter(this.owner, name, defaultValue, maxLength, toStringFunc, visibleName, exposed);\n            this.addParameter(param);\n            param.addEventListener(\"parameterset\", this);\n            return param;\n        }\n    }\n    createAssetParameter(name, visibleName, exposed) {\n        if (typeof name !== \"string\") {\n            throw (\"Invlid constructor\");\n        }\n        name = name.toLowerCase();\n        if (this.isParameterNameAvailable(this)) {\n            const param = new AssetParameter(this.owner, name, visibleName, exposed);\n            this.addParameter(param);\n            param.addEventListener(\"parameterset\", this);\n            return param;\n        }\n    }\n    createParameterManager(name, visibleName, exposed) {\n        if (typeof name !== \"string\") {\n            throw (\"Invlid constructor\");\n        }\n        name = name.toLowerCase();\n        if (this.isParameterNameAvailable(this)) {\n            const param = new ParameterManager(this.owner, this.pluginExternalInterface, name, exposed);\n            this.addParameter(param);\n            param.addEventListener(\"parameterset\", this);\n            return param;\n        }\n    }\n    getParameterByName(name) {\n        return this.findParameter(name);\n    }\n    getParameterObject() {\n        return this.buildParameterObject();\n    }\n    getParameterNames() {\n        return this.parameterList.filter((p) => {\n            return p.exposed;\n        }).map((p) => {\n            if (p instanceof ParameterManager) {\n                return p.getParameterNames().map(recursiveName => `${p.name}.${recursiveName}`);\n            }\n            else {\n                return [p.name];\n            }\n        }).flat();\n    }\n    setParameterByName(name, value, updateInterfaces = true) {\n        var parameter = this.findParameter(name);\n        if (!parameter) {\n            return;\n        }\n        if (parameter.exposed === false) {\n            console.warn(\"Cannot set hidden parameter\");\n            return;\n        }\n        if (isPluginParameter(parameter)) {\n            parameter.setValue(value, updateInterfaces);\n        }\n    }\n    deleteParameter(parameter) {\n        const index = this.parameterList.findIndex(e => e === parameter);\n        if (index >= 0) {\n            // Does exist\n            this.parameterList.splice(index, 1);\n            Object.defineProperty(this, parameter.name, {\n                value: undefined\n            });\n            parameter.destroy();\n            return true;\n        }\n        return false;\n    }\n    deleteAllParameters() {\n        for (const parameter of Array.from(this.parameterList)) {\n            this.deleteParameter(parameter);\n        }\n        return true;\n    }\n    setParametersByObject(object, updateInterfaces = true) {\n        for (const key in object) {\n            if (object.hasOwnProperty(key)) {\n                const entry = object[key];\n                if (typeof entry === 'object') {\n                    let parameter = this.findParameter(key);\n                    if (parameter instanceof ParameterManager) {\n                        // Nested Parameter store\n                        if (!isPluginParameterObject(entry)) {\n                            parameter.setParametersByObject(entry, updateInterfaces);\n                        }\n                    }\n                    else if (isPluginParameter(parameter) && entry.hasOwnProperty(\"value\")) {\n                        this.setParameterByName(key, entry.value, updateInterfaces);\n                    }\n                    else {\n                        this.setParameterByName(key, entry, updateInterfaces);\n                    }\n                }\n                else if (typeof entry == \"number\" || typeof entry == \"string\") {\n                    this.setParameterByName(key, entry, updateInterfaces);\n                }\n                else {\n                    throw (\"Cannot set \" + key + \": Not a valid object\");\n                }\n            }\n        }\n    }\n    toJSON() {\n        return this.parameterList.filter(p => p.exposed)\n            .reduce(function (obj, e) {\n            if (e instanceof ParameterManager) {\n                obj[e.name] = e.toJSON();\n            }\n            else if (isPluginParameter(e)) {\n                obj[e.name] = e.getParameterObject();\n            }\n            return obj;\n        }, {});\n    }\n    get parameters() { return this.buildParameterObject(); }\n    get numParameters() { return this.parameterList.length; }\n}\n","function checkFeatureArgs(source, featureObject) {\n    if (source === undefined) {\n        throw (\"Source plugin must be defined\");\n    }\n    if (featureObject === undefined) {\n        throw (\"FeatureObject must be defined\");\n    }\n    if (typeof featureObject.outputIndex !== \"number\" || typeof featureObject.frameSize !== \"number\" || typeof featureObject.features !== \"object\") {\n        throw (\"Malformed featureObject\");\n    }\n    return true;\n}\n/* jshint esversion: 6 */\nexport class PluginFeatureInterfaceReceiver {\n    constructor(FeatureInterfaceInstance, FactoryFeatureMap) {\n        this.FeatureInterfaceInstance = FeatureInterfaceInstance;\n        this.FactoryFeatureMap = FactoryFeatureMap;\n    }\n    requestFeatures(featureList) {\n        for (let i = 0; i < featureList.length; i++) {\n            this.requestFeaturesFromPlugin(featureList[i].plugin, {\n                'outputIndex': featureList[i].outputIndex,\n                'frameSize': featureList[i].frameSize,\n                'features': featureList[i].features\n            });\n        }\n    }\n    requestFeaturesFromPlugin(source, featureObject) {\n        checkFeatureArgs(source, featureObject);\n        this.FactoryFeatureMap.requestFeatures(this, source.featureMap.Sender, featureObject);\n    }\n    cancelFeaturesFromPlugin(source, featureObject) {\n        checkFeatureArgs(source, featureObject);\n        this.FactoryFeatureMap.deleteFeatures(this, source.featureMap.Sender, featureObject);\n    }\n    cancelAllFeaturesFromPlugin(source) {\n        if (source === undefined) {\n            throw (\"Source plugin must be defined\");\n        }\n        this.FactoryFeatureMap.deleteFeatures(this, source.featureMap.Sender);\n    }\n    cancelAllFeatures() {\n        this.FactoryFeatureMap.deleteFeatures(this);\n    }\n    postFeatures(message) {\n        /*\n            Called by the Plugin Factory with the feature message\n            message = {\n                'plugin': sourcePluginInstance,\n                'outputIndex': outputIndex,\n                'frameSize': frameSize,\n                'features': {} JS-Xtract feature results object\n            }\n        */\n        if (typeof this.c_features === \"function\") {\n            this.c_features(message);\n        }\n    }\n    ;\n    get onfeatures() { return this.c_features; }\n    set onfeatures(func) { this.c_features = func; }\n}\n","import { OutputNode } from \"../../Factory/Extractors/OutputNode\";\nexport class PluginFeatureInterfaceSender {\n    constructor(FeatureInterfaceInstance, FactoryFeatureMap) {\n        this.FeatureInterfaceInstance = FeatureInterfaceInstance;\n        this.FactoryFeatureMap = FactoryFeatureMap;\n        this.outputNodes = [];\n    }\n    updateFeatures(featureObject, outputIndex = 0) {\n        if (this.outputNodes[outputIndex] === undefined) {\n            if (outputIndex > this.FeatureInterfaceInstance.numOutputs) {\n                throw new Error(\"Requested an output that does not exist\");\n            }\n            this.outputNodes[outputIndex] = new OutputNode(this, this.FeatureInterfaceInstance.outputs[outputIndex], outputIndex);\n        }\n        for (let si = 0; si < featureObject.length; si++) {\n            let extractor = this.outputNodes[outputIndex].findExtractor(featureObject[si].frameSize);\n            if (!extractor) {\n                extractor = this.outputNodes[outputIndex].addExtractor(featureObject[si].frameSize);\n            }\n            extractor.setFeatures(featureObject[si].features);\n        }\n    }\n    postFeatures(featureObject) {\n        /*\n            Called by the individual extractor instances:\n            featureObject = {'frameSize': frameSize,\n            'outputIndex': outputIndex,\n            'results':[]}\n        */\n        this.FeatureInterfaceInstance.factory.FeatureMap.postFeatures({\n            'source': this,\n            'outputIndex': featureObject.outputIndex,\n            'frameSize': featureObject.frameSize,\n            'results': featureObject.results\n        });\n    }\n    ;\n}\n","import { PluginFeatureInterfaceReceiver } from \"./PluginFeatureInterfaceReceiver\";\nimport { PluginFeatureInterfaceSender } from \"./PluginFeatureInterfaceSender\";\nexport class PluginFeatureInterface {\n    constructor(plugin) {\n        this.plugin = plugin;\n        this.Receiver = new PluginFeatureInterfaceReceiver(this.plugin, this.plugin.factory.FeatureMap);\n        this.Sender = new PluginFeatureInterfaceSender(this.plugin, this.plugin.factory.FeatureMap);\n    }\n    get onfeatures() { return this.Receiver.onfeatures; }\n    set onfeatures(func) { this.Receiver.onfeatures = func; }\n}\n","import { isAutomatedPluginParameter, isPluginParameter } from \"./parameters/IPluginParameter\";\nexport class PluginInterfaceMessageHub {\n    constructor(owner) {\n        this.owner = owner;\n        this.windowMessageList = [];\n        this.eventTarget = new EventTarget();\n        window.addEventListener(\"message\", this);\n    }\n    buildPluginParameterJSON(sources) {\n        const names = this.owner.parameters.getParameterNames();\n        const O = {};\n        if (sources.length == 0) {\n            sources = names;\n        }\n        names.filter((name) => sources.includes(name)).forEach((name) => {\n            const param = this.owner.parameters.getParameterByName(name);\n            if (isPluginParameter(param)) {\n                O[name] = param.getParameterObject();\n                O[name].name = name;\n                if (isAutomatedPluginParameter(param)) {\n                    O[name].automated = param.enabled;\n                }\n            }\n        });\n        return O;\n    }\n    buildParameterUpdatePayload(sender_id, sources = []) {\n        const msg = {\n            sender_id,\n            message: \"updateParameters\",\n            parameters: this.buildPluginParameterJSON(sources)\n        };\n        return msg;\n    }\n    sendParameterUpdates(channel, sources = []) {\n        channel.postMessage(this.buildParameterUpdatePayload(undefined, sources), location.origin);\n    }\n    broadcastParameterUpdates(sender_id, sources) {\n        const msg = this.buildParameterUpdatePayload(sender_id, sources);\n        this.windowMessageList.forEach(function (w) {\n            w.postMessage(msg, location.origin);\n        });\n    }\n    broadcastStateChange(level, term, value) {\n        var msg = {\n            message: \"updateState\",\n            level,\n            term,\n            value\n        };\n        this.windowMessageList.forEach(function (w) {\n            w.postMessage(msg, location.origin);\n        });\n    }\n    setParameterMessage(e) {\n        const updateObjects = [];\n        const parameters = JSON.parse(e.data.parameters);\n        Object.keys(parameters).forEach((name) => {\n            const parameterObject = this.owner.parameters.getParameterByName(name);\n            if (isPluginParameter(parameterObject)) {\n                parameterObject.setValue(parameters[name].value, false);\n                updateObjects.push(name);\n            }\n        });\n        return updateObjects;\n    }\n    destroy() {\n        window.removeEventListener(\"message\", this);\n    }\n    addEventListener(type, listener, options) {\n        this.eventTarget.addEventListener(type, listener, options);\n    }\n    removeEventListener(type, listener, options) {\n        this.eventTarget.removeEventListener(type, listener, options);\n    }\n    handleEvent(e) {\n        if (!this.windowMessageList.includes(e.source)) {\n            return;\n        }\n        const window = e.source;\n        switch (e.data.message) {\n            case \"setParameterByName\":\n                if (e.data.parameter.name) {\n                    const parameterObject = this.owner.parameters.getParameterByName(e.data.parameter.name);\n                    if (isPluginParameter(parameterObject)) {\n                        parameterObject.setValue(e.data.parameter.value, false);\n                        this.broadcastParameterUpdates(e.data.sender_id, [e.data.parameter.name]);\n                    }\n                }\n                break;\n            case \"setParametersByObject\":\n                if (e.data.parameter) {\n                    const updateObjects = this.setParameterMessage(e);\n                    this.broadcastParameterUpdates(e.data.sender_id, updateObjects);\n                }\n                break;\n            case \"requestParameters\":\n                if (typeof e.data.name == \"string\") {\n                    this.sendParameterUpdates(window, [e.data.name]);\n                }\n                else {\n                    this.sendParameterUpdates(window);\n                }\n                break;\n            case \"requestSessionState\":\n                this.broadcastStateChange(\"session\", e.data.term, this.owner.sessionDataInterface.requestTerm(e.data.term));\n                break;\n            case \"requestTrackState\":\n                this.broadcastStateChange(\"track\", e.data.term, this.owner.trackDataInterface.requestTerm(e.data.term));\n                break;\n            case \"requestUserState\":\n                this.broadcastStateChange(\"user\", e.data.term, this.owner.userDataInterface.requestTerm(e.data.term));\n                break;\n            case \"requestPluginState\":\n                this.broadcastStateChange(\"plugin\", e.data.term, this.owner.pluginDataInterface.requestTerm(e.data.term));\n                break;\n            case \"customMessage\":\n                break;\n            default:\n                throw (\"Unknown message type \\\"\" + e.data.message + \"\\\"\");\n        }\n    }\n    sendState(level, term) {\n        if (level == \"session\") {\n            this.broadcastStateChange(\"session\", term, this.owner.sessionDataInterface.requestTerm(term));\n        }\n        else if (level == \"track\") {\n            this.broadcastStateChange(\"track\", term, this.owner.trackDataInterface.requestTerm(term));\n        }\n        else if (level == \"user\") {\n            this.broadcastStateChange(\"user\", term, this.owner.userDataInterface.requestTerm(term));\n        }\n        else if (level == \"plugin\") {\n            this.broadcastStateChange(\"plugin\", term, this.owner.pluginDataInterface.requestTerm(term));\n        }\n        else {\n            throw \"Invalid state level option\";\n        }\n    }\n    updateInterfaces(automationOnly = false) {\n        if (automationOnly === undefined) {\n            automationOnly = false;\n        }\n        if (automationOnly) {\n            const parameterNames = this.owner.parameters.getParameterNames();\n            const sources = parameterNames.filter((name) => {\n                const param = this.owner.parameters.getParameterByName(name);\n                return (isAutomatedPluginParameter(param) && param.enabled === true);\n            });\n            if (sources.length > 0) {\n                this.broadcastParameterUpdates(undefined, sources);\n            }\n        }\n        else {\n            this.broadcastParameterUpdates();\n        }\n    }\n    closeWindows() {\n        while (this.windowMessageList.length > 0) {\n            const w = this.windowMessageList.pop();\n            w.close();\n        }\n        window.removeEventListener(\"message\", this);\n    }\n    registerWindow(w) {\n        if (this.windowMessageList.includes(w)) {\n            this.windowMessageList.splice(this.windowMessageList.indexOf(w), 1);\n        }\n        this.windowMessageList.push(w);\n        w.pluginInstance = this.owner;\n        this.sendParameterUpdates(w);\n        return true;\n    }\n    removeWindow(w) {\n        if (this.windowMessageList.includes(w)) {\n            this.windowMessageList.splice(this.windowMessageList.indexOf(w), 1);\n        }\n    }\n}\n","// Add getInputs to all AudioNodes to ease deployment\n/*globals AudioNode, Worker, console, window, document, Promise, XMLHttpRequest */\n/*eslint-env browser */\n/*jshint esversion: 6 */\nimport { ParameterManager } from \"./ParameterManager\";\nimport { PluginInterfaceMessageHub } from \"./PluginInterfaceMessageHub\";\nimport { PluginFeatureInterface } from \"./PluginFeatureInterface/index\";\nimport { LinkedStore } from \"../LinkedStore\";\nimport { LinkedStoreInterface } from \"./LinkedStoreInterface\";\nimport { of } from \"rxjs\";\n// if (typeof AudioNode === \"function\" && window.importScripts === undefined) {\n//     AudioNode.prototype.getInputs = function () {\n//         return [this];\n//     };\n// }\nexport class BasePlugin {\n    constructor(factory, pluginOwner, prototypeObject) {\n        this.factory = factory;\n        this.pluginOwner = pluginOwner;\n        this.prototypeObject = prototypeObject;\n        this.inputList = [];\n        this.outputList = [];\n        this.delaySamples = 0;\n        this.eventTarget = new EventTarget();\n        this.externalInterface = new PluginInterfaceMessageHub(this);\n        this.context = this.factory.context;\n        this.featureMap = new PluginFeatureInterface(this);\n        this.parameters = new ParameterManager(this, this.externalInterface);\n        this.PluginData = new LinkedStore(\"Plugin\");\n        this.sessionDataInterface = new LinkedStoreInterface(this, this.factory.SessionData);\n        this.userDataInterface = new LinkedStoreInterface(this, this.factory.UserData);\n        this.trackDataInterface = new LinkedStoreInterface(this, this.TrackData);\n        this.pluginDataInterface = new LinkedStoreInterface(this, this.PluginData);\n        this.SessionData = this.factory.SessionData;\n        this.UserData = this.factory.UserData;\n        this.name = this.prototypeObject.name;\n        this.uniqueID = this.prototypeObject.uniqueID;\n        this.version = this.prototypeObject.version;\n        this.parameters.addEventListener(\"parameterset\", (e) => {\n            this.eventTarget.dispatchEvent(new CustomEvent(\"parameterset\", { detail: e.detail }));\n        });\n    }\n    start() { }\n    stop(ct) { }\n    onloaded() { }\n    onunloaded() { }\n    deconstruct() { }\n    deleteIO(node, list) {\n        var i = list.findIndex((e) => {\n            return e === node;\n        });\n        if (i === -1) {\n            return false;\n        }\n        list.splice(i, 1);\n        return true;\n    }\n    changeOwner(newOwner) {\n        this.pluginOwner = newOwner;\n    }\n    delete() {\n        this.sessionDataInterface.destroy();\n        this.userDataInterface.destroy();\n        this.trackDataInterface.destroy();\n        this.pluginDataInterface.destroy();\n        this.stop();\n        this.onunloaded();\n        if (this.deconstruct && typeof this.deconstruct == \"function\") {\n            this.deconstruct();\n        }\n    }\n    // Depcrecated - Use .delete() instead\n    destroy() {\n        console.error(\"DEPRECATED - Use .delete() instead\");\n        this.delete();\n    }\n    addInput(node) {\n        this.inputList.push(node);\n        return this.inputList;\n    }\n    deleteInput(node) {\n        this.deleteIO(node, this.inputList);\n        return this.inputList;\n    }\n    addOutput(node) {\n        this.outputList.push(node);\n        return this.outputList;\n    }\n    ;\n    deleteOutput(node) {\n        this.deleteIO(node, this.outputList);\n        return this.outputList;\n    }\n    ;\n    setProcessingDelayAsSeconds(seconds) {\n        const fs = this.factory.context.sampleRate;\n        if (typeof seconds == \"number\" && isFinite(seconds) && seconds >= 0) {\n            return this.setProcessingDelayAsSamples(seconds * fs) / fs;\n        }\n        throw new Error(\"setProcessingDelayAsSeconds Invalid argument\");\n    }\n    setProcessingDelayAsSamples(samples) {\n        if (typeof samples == \"number\" && isFinite(samples) && samples >= 0) {\n            this.delaySamples = samples;\n            const e = new Event(\"alterdelay\");\n            this.eventTarget.dispatchEvent(e);\n            return this.delaySamples;\n        }\n        else {\n            throw new Error(\"setProcessingDelayAsSamples Invalid argument\");\n        }\n    }\n    connect(dest, output, input) {\n        if (dest instanceof AudioParam) {\n            this.outputs[0].connect(dest, output);\n        }\n        else {\n            this.outputs[0].connect(dest, output, input);\n        }\n    }\n    disconnect(dest, output, input) {\n        if (dest === undefined) {\n            this.outputs[0].disconnect();\n        }\n        else {\n            if (dest instanceof AudioParam) {\n                this.outputs[0].disconnect(dest, output);\n            }\n            else {\n                this.outputs[0].disconnect(dest, output, input);\n            }\n        }\n    }\n    getInputs() { return this.inputList; }\n    getOutputs() { return this.outputList; }\n    getParameterNames() { return this.parameters.getParameterNames(); }\n    getParameterByName(name) { return this.parameters.getParameterByName(name); }\n    getParameterObject() { return this.parameters.getParameterObject(); }\n    setParameterByName(name, value, updateInterfaces = true) { return this.parameters.setParameterByName(name, value, updateInterfaces); }\n    setParametersByObject(object, updateInterfaces) { return this.parameters.setParametersByObject(object, updateInterfaces); }\n    addEventListener(type, listener, options) {\n        return this.eventTarget.addEventListener(type, listener, options);\n    }\n    removeEventListener(type, listener, options) {\n        return this.eventTarget.removeEventListener(type, listener, options);\n    }\n    isReadyPromise() {\n        return Promise.resolve(true);\n    }\n    loadingProgress$() {\n        return of({\n            numberOfAssets: 0,\n            loaded: true,\n            numberOfAssetsLoaded: 0\n        });\n    }\n    get owner() { return this.pluginOwner; }\n    get numInputs() { return this.inputList.length; }\n    get numOutputs() { return this.outputList.length; }\n    get numParameters() { return this.parameters.numParameters; }\n    get inputs() { return this.inputList; }\n    get outputs() { return this.outputList; }\n    get processingDelayAsSamples() { return this.delaySamples; }\n    set processingDelayAsSamples(samples) { this.setProcessingDelayAsSamples(samples); }\n    get processingDelayAsSeconds() { return this.delaySamples / this.factory.context.sampleRate; }\n    set processingDelayAsSeconds(seconds) { this.setProcessingDelayAsSeconds(seconds); }\n    get TrackData() { var _a; return (_a = this.pluginOwner) === null || _a === void 0 ? void 0 : _a.TrackData; }\n}\n","import { PluginAsset } from \"../../Factory/PluginAssets/PluginAsset\";\nimport { PluginParameter } from \"./PluginParameter\";\nexport class AssetParameter extends PluginParameter {\n    constructor(owner, name, visibleName, exposed = true) {\n        super(owner, name, \"String\", visibleName, exposed);\n    }\n    loadAsset() {\n        this.loadAssetPromise = this.selectedAsset.fetch()\n            .then((buffer) => {\n            this.audioBuffer = buffer;\n            this.selectedAsset.registerToPlugin(this.owner);\n            if (typeof this.onloadCallback == \"function\") {\n                this.onloadCallback(buffer);\n            }\n            return this;\n        }, (e) => {\n            if (typeof this.onerrorCallback == \"function\") {\n                this.onerrorCallback(e);\n            }\n            return this;\n        });\n        return this.loadAssetPromise;\n    }\n    setValue(v, updateInterfaces = true) {\n        let newSelectedAsset;\n        if (v instanceof PluginAsset) {\n            newSelectedAsset = v;\n        }\n        else if (typeof v === \"string\" || typeof v === \"number\") {\n            newSelectedAsset = this.owner.factory.pluginAssets.findAssetById(Number(v));\n            if (newSelectedAsset === undefined) {\n                newSelectedAsset = this.owner.factory.pluginAssets.findAssetByUrl(v.toString());\n            }\n        }\n        else {\n            if (v.hasOwnProperty('asset')) {\n                newSelectedAsset = this.owner.factory.pluginAssets.findAssetByUrl(v.asset);\n            }\n            else if (v.hasOwnProperty('id')) {\n                newSelectedAsset = this.owner.factory.pluginAssets.findAssetById(v.id);\n            }\n        }\n        if (newSelectedAsset === undefined) {\n            console.warn(\"No asset given, \", v);\n            return this.selectedAsset;\n        }\n        if (this.selectedAsset === undefined || this.selectedAsset.id != newSelectedAsset.id) {\n            // asset has changed url.\n            if (this.selectedAsset !== undefined) {\n                this.selectedAsset.deregisterFromPlugin(this.owner);\n            }\n            this.selectedAsset = newSelectedAsset;\n            this.loadAsset();\n            this.triggerParameterSet(updateInterfaces);\n        }\n        this.trigger();\n        return this.selectedAsset;\n    }\n    destroy() {\n    }\n    getResource() {\n        if (this.loadAssetPromise) {\n            return this.loadAssetPromise;\n        }\n        else {\n            return this.loadAsset();\n        }\n    }\n    toString() {\n        return this.selectedAsset.toString();\n    }\n    getParameterObject() {\n        return {\n            value: this.selectedAsset ? this.selectedAsset.toJSON() : undefined,\n            loaded: (this.audioBuffer !== undefined),\n            visibleName: this.name,\n            type: \"AssetParameter\",\n            name: this.name\n        };\n    }\n    get onload() {\n        return this.onloadCallback;\n    }\n    set onload(f) {\n        this.onloadCallback = f;\n    }\n    get onerror() {\n        return this.onerrorCallback;\n    }\n    set onerror(f) {\n        this.onerrorCallback = f;\n    }\n    get isReadyPromise() {\n        return this.loadAssetPromise;\n    }\n    get type() {\n        return `Asset`;\n    }\n    get buffer() {\n        return this.audioBuffer;\n    }\n    get value() {\n        if (this.selectedAsset) {\n            return this.selectedAsset.id;\n        }\n        else {\n            return undefined;\n        }\n    }\n    set value(v) {\n        this.setValue(v, true);\n    }\n}\n","import { PluginParameter } from \"./PluginParameter\";\n/* jshint esversion: 6 */\nexport class ButtonParameter extends PluginParameter {\n    constructor(owner, name, visibleName, exposed = true) {\n        super(owner, name, \"Button\", visibleName, exposed);\n        this.onclickFunction = () => { };\n    }\n    destroy() {\n    }\n    getParameterObject() {\n        return {\n            visibleName: this.visibleName,\n            type: \"ButtonParameter\",\n            name: this.name\n        };\n    }\n    get type() {\n        return \"Button\";\n    }\n    ;\n    get onclick() {\n        return this.onclickFunction;\n    }\n    set onclick(f) {\n        this.onclickFunction = f;\n    }\n}\n","export function isPluginParameterObject(object) {\n    return 'name' in object && 'visibleName' in object && 'type' in object;\n}\nexport function isPluginBaseParameter(object) {\n    return 'getParameterObject' in object;\n}\nexport function isPluginParameter(object) {\n    return isPluginBaseParameter(object) && 'setValue' in object;\n}\nexport function isAutomatedPluginParameter(object) {\n    return isPluginParameter(object) && 'getValueAtTimePoint' in object;\n}\n","/* jshint esversion: 6 */\nimport { PluginParameter } from \"./PluginParameter\";\nimport { ParameterStepAutomation } from \"./ParameterAutomation\";\nexport class ListParameter extends PluginParameter {\n    constructor(owner, name, _defaultValue, listOfValues, toStringFunc, visibleName, exposed = true) {\n        super(owner, name, \"Button\", visibleName, exposed);\n        this._defaultValue = _defaultValue;\n        this.listOfValues = listOfValues;\n        this.toStringFunc = toStringFunc;\n        this.listIndex = listOfValues.indexOf(_defaultValue);\n    }\n    setV(v, updateInterfaces = true) {\n        const i = this.listOfValues.indexOf(v);\n        if (i === undefined || i < 0) {\n            throw (\"Not in list range\");\n        }\n        if (this.boundAudioParam) {\n            this.boundAudioParam.value = this.update(v);\n        }\n        if (this.listIndex !== i) {\n            this.listIndex = i;\n            this.triggerParameterSet(updateInterfaces);\n        }\n        this.trigger();\n        return this.listOfValues[this.listIndex];\n    }\n    isAutomatable() {\n        if (!this.automatable) {\n            throw new Error(`${this.type} is not automatable`);\n        }\n        return true;\n    }\n    destroy() {\n    }\n    setValue(v) {\n        this.setV(v, true);\n        return this.value;\n    }\n    increment() {\n        var v = this.listIndex + 1;\n        if (v >= this.listOfValues.length) {\n            v = 0;\n        }\n        return this.setValue(this.listOfValues[this.listIndex]);\n    }\n    decrement() {\n        var v = this.listIndex - 1;\n        if (v < 0) {\n            v = this.listOfValues.length - 1;\n        }\n        return this.setValue(this.listOfValues[this.listIndex]);\n    }\n    addOptionToList(t) {\n        if (this.listOfValues.includes(t) === false) {\n            this.listOfValues.push(t);\n        }\n        return this.listOfValues;\n    }\n    deleteOptionFromList(t) {\n        const index = this.listOfValues.indexOf(t);\n        const _value = this.listOfValues[this.listIndex];\n        if (index == -1) {\n            return;\n        }\n        const removedValue = this.listOfValues.splice(index, 1);\n        if (_value === removedValue[0]) {\n            this.listIndex = this.listIndex % this.listOfValues.length;\n        }\n        else {\n            this.listIndex = this.listOfValues.indexOf(_value);\n        }\n        return this.listOfValues;\n    }\n    toString() {\n        const v = this.value;\n        if (typeof this.toStringFunc == \"function\") {\n            return this.toStringFunc(v);\n        }\n        else if (typeof v.toString == \"function\") {\n            return v.toString();\n        }\n        else {\n            return String(v);\n        }\n    }\n    getParameterObject() {\n        return {\n            value: this.value,\n            options: this.listOfValues,\n            defaultValue: this._defaultValue,\n            minimum: 0,\n            maximum: this.listOfValues.length,\n            visibleName: this.name,\n            type: \"ListParameter\",\n            name: this.name\n        };\n    }\n    getValueAtTimePoint(time) {\n        if (this.isAutomatable()) {\n            return this.automation.getValueAtTimePoint(time);\n        }\n    }\n    start(time, contextTime) {\n        if (this.isAutomatable()) {\n            return this.automation.start(time, contextTime);\n        }\n    }\n    stop(contextTime) {\n        if (this.isAutomatable()) {\n            return this.automation.stop(contextTime);\n        }\n    }\n    bindToAudioParam(ap) {\n        if (ap instanceof AudioParam) {\n            this.audioParameter = ap;\n            this.audioParameter.value = this.update(this.listOfValues[this.listIndex]);\n            if (ap.setValueAtTime) {\n                this.automation = new ParameterStepAutomation(this, this.audioParameter, 0, this.listValues.length, this.toStringFunc);\n            }\n            else {\n                console.warn(\"Cannot bind automation as AudioParameter is not automatable\");\n            }\n        }\n        else {\n            throw (\"Argument 1 is not a valid AudioParameter object\");\n        }\n    }\n    get type() {\n        return \"List\";\n    }\n    get defaultValue() {\n        return this._defaultValue;\n    }\n    get listValues() {\n        return this.listOfValues;\n    }\n    get value() {\n        if (this.audioParameter) {\n            return this.translate(this.audioParameter.value);\n        }\n        return this.listOfValues[this.listIndex];\n    }\n    set value(v) {\n        this.setValue(v);\n    }\n    get boundAudioParam() {\n        return this.audioParameter;\n    }\n    get automatable() {\n        return this.automation !== undefined;\n    }\n    get automationPoints() {\n        return this.automation;\n    }\n    get enabled() {\n        return this.automation.enabled;\n    }\n    set enabled(e) {\n        this.automation.enabled = (e === true);\n    }\n}\n","/* jshint esversion: 6 */\nimport { PluginParameter } from \"./PluginParameter\";\nimport { ParameterLinearAutomation } from \"./ParameterAutomation\";\nexport class NumberParameter extends PluginParameter {\n    constructor(owner, name, defaultValue, minimum, maximum, toStringFunc, visibleName, exposed = true) {\n        super(owner, name, \"Number\", visibleName, exposed);\n        this.defaultValue = defaultValue;\n        this.minimum = minimum;\n        this.maximum = maximum;\n        this.toStringFunc = toStringFunc;\n        this.type = \"Number\";\n        this._stepSize = 0;\n        this._value = this.defaultValue;\n    }\n    setValue(v, updateInterfaces = true) {\n        if (this.automation && this.automation.enabled) {\n            throw new Error(\"Automation is enabled, cannot set the value!\");\n        }\n        if (this.minimum) {\n            v = Math.max(v, this.minimum);\n        }\n        if (this.maximum) {\n            v = Math.min(v, this.maximum);\n        }\n        if (this._stepSize > 0) {\n            v = Math.round(v / this._stepSize);\n            v = v * this._stepSize;\n        }\n        v = this.update(v);\n        if (this.audioParameter) {\n            if (this.automation) {\n                if (this.owner.factory.context.state == 'suspended') {\n                    this.audioParameter.value = v;\n                }\n                else {\n                    this.audioParameter.setValueAtTime(v, this.owner.factory.context.currentTime);\n                }\n            }\n            else {\n                this.audioParameter.value = v;\n            }\n        }\n        if (this._value !== v) {\n            this._value = v;\n            this.triggerParameterSet(updateInterfaces);\n        }\n        this.trigger();\n        return this._value;\n    }\n    destroy() {\n    }\n    getValueAtTimePoint(time) {\n        return this.automation.getValueAtTimePoint(time);\n    }\n    start(time, contextTime) {\n        this.automation.start(time, contextTime);\n    }\n    stop(time) {\n        this.automation.stop(time);\n    }\n    bindToAudioParam(ap) {\n        if (typeof ap == \"object\" && ap.value != undefined) {\n            this.audioParameter = ap;\n            this.audioParameter.value = this.update(this._value);\n            if (ap.setValueAtTime) {\n                this.automation = new ParameterLinearAutomation(this, this.audioParameter, this.minimum, this.maximum, this.toStringFunc);\n            }\n            else {\n                console.warn(\"Cannot bind automation as AudioParameter is not automatable\");\n            }\n        }\n        else {\n            throw new Error(\"Argument 1 is not a valid AudioParameter object\");\n        }\n    }\n    toString() {\n        const v = this.value;\n        if (typeof this.toStringFunc == \"function\") {\n            return this.toStringFunc(v);\n        }\n        else {\n            return String(v);\n        }\n    }\n    getParameterObject() {\n        return {\n            value: this.value,\n            defaultValue: this.defaultValue,\n            minimum: this.minimum,\n            maximum: this.maximum,\n            visibleName: this.name,\n            type: \"NumberParameter\",\n            name: this.name\n        };\n    }\n    get value() {\n        if (this.audioParameter) {\n            if (this.automation && this.automation.length > 0) {\n                const t = this.owner.factory.getCurrentProgramTime();\n                return this.automation.getCurrentTimeValue(t);\n            }\n            return this.translate(this.audioParameter.value);\n        }\n        return this._value;\n    }\n    set value(v) {\n        this.setValue(v, true);\n    }\n    get stepSize() { return this._stepSize; }\n    set stepSize(n) {\n        if (!isFinite(n) || n < 0) {\n            throw new Error(\"Invalid step size\");\n        }\n        this._stepSize = n;\n    }\n    get boundAudioParam() { return this.audioParameter; }\n    get automatable() { return this.automation !== undefined; }\n    get automationPoints() { return this.automation; }\n    get enabled() { var _a; return (_a = this.automation) === null || _a === void 0 ? void 0 : _a.enabled; }\n    set enabled(t) {\n        if (this.automatable) {\n            this.automation.enabled = (t === true);\n        }\n    }\n}\n","/* jshint esversion: 6 */\nclass TimePoint {\n    constructor(owner, _time, _value, toStringFunc) {\n        this.owner = owner;\n        this._time = _time;\n        this._value = _value;\n        this.toStringFunc = toStringFunc;\n        if (typeof this._time != \"number\" || !isFinite(this._time) || this._time < 0) {\n            throw new Error(\"Invalid Constructor: Time must be a positive number\");\n        }\n        if (typeof this._value != \"number\" || !isFinite(this._value)) {\n            throw new Error(\"Invalid Constructor: Value must be a number\");\n        }\n    }\n    setValue(v) {\n        if (typeof v != \"number\" || !isFinite(v)) {\n            throw (\"Value must be a number\");\n        }\n        return this._value;\n    }\n    setTime(t) {\n        if (typeof t == \"number\" && isFinite(t) && t >= 0) {\n            this._time = t;\n        }\n        return this._time;\n    }\n    toString() {\n        if (typeof this.toStringFunc == \"function\") {\n            return this.toStringFunc(this._value);\n        }\n        return String(this._value);\n    }\n    get time() {\n        return this.time;\n    }\n    set time(t) {\n        this.setTime(t);\n    }\n    get value() {\n        return this.value;\n    }\n    set value(v) {\n        this.setValue(v);\n    }\n}\nclass TimePointList {\n    constructor(min_value, max_value, toStringFunc) {\n        this.toStringFunc = toStringFunc;\n        this.automationPoints = [];\n        if (typeof min_value != \"number\" || !isFinite(min_value)) {\n            throw (\"Invalid Constructor: min_value be a number\");\n        }\n        if (typeof max_value != \"number\" || !isFinite(max_value)) {\n            throw (\"Invalid Constructor: max_value be a number\");\n        }\n        if (min_value == max_value) {\n            throw (\"Invalid Constructor: max_value cannot equal to min_value\");\n        }\n        if (max_value < min_value) {\n            throw (\"Invalid Constructor: min_value cannot be greater than max_value\");\n        }\n        this.minimum = min_value;\n        this.maximum = max_value;\n    }\n    getPointAtTime(time) {\n        return this.automationPoints.find((p) => {\n            p.time == time;\n        });\n    }\n    hasPointAtTime(time) {\n        return this.getPointAtTime(time) !== undefined;\n    }\n    sortPoints() {\n        return this.automationPoints.sort(function (a, b) {\n            if (a.time > b.time) {\n                return 1;\n            }\n            else {\n                return -1;\n            }\n        });\n    }\n    insertPoint(time, value) {\n        if (typeof time != \"number\" || !isFinite(time) || time < 0) {\n            throw (\"Time must be a positive number\");\n        }\n        if (typeof value != \"number\" || !isFinite(value)) {\n            throw (\"Value must be a number\");\n        }\n        if (this.hasPointAtTime(time)) {\n            throw (\"Already a value entry at time \" + time);\n        }\n        var point = new TimePoint(this, time, value, this.toStringFunc);\n        this.automationPoints.push(point);\n        this.automationPoints = this.sortPoints();\n        return point;\n    }\n    getPoints(start_time, end_time) {\n        if (start_time === undefined) {\n            start_time = 0;\n        }\n        if (end_time === undefined) {\n            end_time = Infinity;\n        }\n        return this.automationPoints.filter(function (point) {\n            return point.time >= start_time && point.time < end_time;\n        });\n    }\n    deletePoint(time) {\n        var index = this.automationPoints.findIndex(function (point) {\n            return point.time == time;\n        });\n        if (index >= 0) {\n            this.automationPoints.splice(index, 1);\n        }\n        return this.automationPoints.length;\n    }\n    getStaticValueAsString(value) {\n        if (this.toStringFunc) {\n            return this.toStringFunc(value);\n        }\n        return String(value);\n    }\n    getValueAtTimePoint(time) {\n        return this.getPointAtTime(time);\n    }\n    updatePoint(time, options) {\n        const point = this.automationPoints.find(point => point.time == time);\n        if (point) {\n            if (typeof options.time == \"number\" && options.time != point.time) {\n                if (this.hasPointAtTime(time)) {\n                    throw new Error(`A time-point already exists at ${String(options.time)} seconds`);\n                }\n                else {\n                    point.time = options.time;\n                    this.automationPoints = this.sortPoints();\n                }\n            }\n            point.value = options.value;\n        }\n        return point;\n    }\n    get length() {\n        return this.automationPoints.length;\n    }\n}\nclass ParameterAutomation extends TimePointList {\n    constructor(parameter, min_value, max_value, toStringFunc) {\n        super(min_value, max_value, toStringFunc);\n        this.parameter = parameter;\n        this.isEnabled = false;\n    }\n    get enabled() {\n        return this.isEnabled;\n    }\n    set enabled(t) {\n        if (this.length > 0) {\n            this.isEnabled = (t === true);\n        }\n    }\n}\nexport class ParameterLinearAutomation extends ParameterAutomation {\n    constructor(owner, parameter, min_value, max_value, toStringFunc) {\n        super(parameter, min_value, max_value, toStringFunc);\n        this.owner = owner;\n    }\n    linearInterpolation(time, pointA, pointB) {\n        let t1 = pointA.time;\n        let t2 = pointB.time;\n        time -= t1;\n        t2 -= t1;\n        t1 = 0;\n        const p = time / t2;\n        return pointA.value * (1 - p) + pointB.value * p;\n    }\n    getCurrentTimeValue(time) {\n        if (this.automationPoints.length == 0) {\n            return this.owner.value;\n        }\n        if (this.automationPoints.length == 1) {\n            return this.automationPoints[0].value;\n        }\n        var firstPoint = this.automationPoints.reduce(function (point, nextPoint) {\n            if (nextPoint.time <= time) {\n                return nextPoint;\n            }\n            else {\n                return point;\n            }\n        }, this.automationPoints[0]);\n        var secondPoint = this.automationPoints.find(function (point) {\n            return point.time > firstPoint.time;\n        });\n        if (secondPoint === undefined || firstPoint.time > time) {\n            return firstPoint.value;\n        }\n        return this.linearInterpolation(time, firstPoint, secondPoint);\n    }\n    start(time, contextTime) {\n        if (this.enabled) {\n            const startPosition = this.owner.update(this.getCurrentTimeValue(time));\n            this.parameter.setValueAtTime(startPosition, contextTime);\n            this.automationPoints.forEach((p) => {\n                if (p.time > time) {\n                    const t = p.time - time;\n                    const v = this.owner.update(p.value);\n                    this.parameter.linearRampToValueAtTime(v, t + contextTime);\n                }\n            });\n        }\n    }\n    stop(contextTime) {\n        if (contextTime === undefined) {\n            contextTime = 0;\n        }\n        this.parameter.cancelScheduledValues(contextTime);\n    }\n}\nexport class ParameterStepAutomation extends ParameterAutomation {\n    constructor(owner, parameter, min_value, max_value, toStringFunc) {\n        super(parameter, min_value, max_value, toStringFunc);\n        this.owner = owner;\n    }\n    getCurrentTimeValue(time) {\n        if (this.automationPoints.length == 0) {\n            throw (\"No automation points available\");\n        }\n        if (this.automationPoints.length == 1) {\n            return this.automationPoints[0].value;\n        }\n        const nearestPoint = this.automationPoints.reduce(function (point, nextPoint) {\n            if (nextPoint.time <= time) {\n                return nextPoint;\n            }\n            else {\n                return point;\n            }\n        }, this.automationPoints[0]);\n        return nearestPoint.value;\n    }\n    start(time, contextTime) {\n        var startPosition = this.owner.update(this.getCurrentTimeValue(time));\n        this.parameter.setValueAtTime(startPosition, contextTime);\n        this.automationPoints.forEach(p => {\n            if (p.time > time) {\n                var t = p.time - time;\n                var v = this.owner.update(p.value);\n                this.parameter.setValueAtTime(v, t + contextTime);\n            }\n        });\n    }\n    stop(contextTime) {\n        this.parameter.cancelScheduledValues(contextTime);\n    }\n}\n","export class PluginParameter {\n    constructor(owner, _name, dataType, _visibleName, _exposed = true) {\n        this.owner = owner;\n        this._name = _name;\n        this._visibleName = _visibleName;\n        this._exposed = _exposed;\n        this.eventTarget = new EventTarget();\n        this._updateFunction = (v) => {\n            return v;\n        };\n        this._translateFunction = (v) => {\n            return v;\n        };\n        this._triggerFunction = () => { };\n        var update, translate, trigger;\n        var eventTarget = new EventTarget();\n        update = translate = function (v) {\n            return v;\n        };\n        trigger = function () { };\n    }\n    destroy() { }\n    setValue(v) {\n        throw new Error('Cannot set this parameter');\n    }\n    toString() {\n        return \"PluginParameter\";\n    }\n    ;\n    getParameterObject() {\n        return {\n            name: this.name,\n            visibleName: this.visibleName,\n            type: \"PluginParameter\"\n        };\n    }\n    addEventListener(type, listener, options) {\n        return this.eventTarget.addEventListener(type, listener, options);\n    }\n    removeEventListener(type, listener, options) {\n        return this.eventTarget.removeEventListener(type, listener, options);\n    }\n    triggerParameterSet(updateInterfaces = true) {\n        if (updateInterfaces === undefined) {\n            updateInterfaces = true;\n        }\n        const opts = {\n            detail: {\n                parameter: this.getParameterObject(),\n                updateInterfaces: updateInterfaces\n            }\n        };\n        this.eventTarget.dispatchEvent(new CustomEvent(\"parameterset\", opts));\n    }\n    bindToAudioParam(ap) {\n        throw (\"Cannot bind this parameter type to an audio parameter\");\n    }\n    get boundAudioParam() {\n        return undefined;\n    }\n    get name() {\n        return this._name;\n    }\n    get visibleName() {\n        if (this._visibleName !== undefined && this._visibleName.length > 0) {\n            return this.visibleName;\n        }\n        else {\n            return this.name;\n        }\n    }\n    get exposed() {\n        return this._exposed;\n    }\n    set exposed(e) {\n        this._exposed = e === true;\n    }\n    get update() {\n        return this._updateFunction;\n    }\n    set update(f) {\n        this._updateFunction = f;\n    }\n    get translate() {\n        return this._translateFunction;\n    }\n    set translate(f) {\n        this._translateFunction = f;\n    }\n    get trigger() {\n        return this._triggerFunction;\n    }\n    set trigger(f) {\n        this._triggerFunction = f;\n    }\n}\n","import { PluginParameter } from \"./PluginParameter\";\nexport class StringParameter extends PluginParameter {\n    constructor(owner, name, defaultValue, maxLength, toStringFunc, visibleName, exposed = true) {\n        super(owner, name, \"String\", visibleName, exposed);\n        this.defaultValue = defaultValue;\n        this.maxLength = maxLength;\n        this.toStringFunc = toStringFunc;\n        this.type = \"String\";\n        this._value = defaultValue;\n    }\n    setValue(v, updateInterfaces = true) {\n        let newValue;\n        if (typeof v === \"string\") {\n            newValue = v;\n        }\n        else {\n            newValue = JSON.stringify(v);\n        }\n        if (this.maxLength && newValue.length > this.maxLength) {\n            throw new Error(`String longer than ${this.maxLength} characters`);\n        }\n        if (this.boundAudioParam) {\n            this.boundAudioParam.value = this.update(v);\n        }\n        if (this._value !== v) {\n            this._value = v;\n            this.triggerParameterSet(updateInterfaces);\n        }\n        this.trigger();\n        return this._value;\n    }\n    destroy() { }\n    bindToAudioParam(ap) {\n        if (typeof ap == \"object\" && ap.value != undefined) {\n            this.audioParameter = ap;\n            this.audioParameter.value = this.update(this._value);\n        }\n        else {\n            throw new Error(\"Argument 1 is not a valid AudioParameter object\");\n        }\n    }\n    toString() {\n        const v = this._value;\n        if (typeof this.toStringFunc == \"function\") {\n            return this.toStringFunc.call(this, v);\n        }\n        else {\n            return v;\n        }\n    }\n    getParameterObject() {\n        return {\n            value: this.value,\n            defaultValue: this.defaultValue,\n            maxLength: this.maxLength,\n            visibleName: this.name,\n            type: \"StringParameter\",\n            name: this.name\n        };\n    }\n    get value() {\n        if (this.boundAudioParam) {\n            return this.translate(this.boundAudioParam.value);\n        }\n        return this._value;\n    }\n    set value(t) { this.setValue(t, true); }\n    get boundAudioParam() { return this.audioParameter; }\n}\n","/* jshint esversion: 6 */\nimport { PluginParameter } from \"./PluginParameter\";\nimport { ParameterStepAutomation } from \"./ParameterAutomation\";\nexport class SwitchParameter extends PluginParameter {\n    constructor(owner, name, defaultValue, minState, maxState, toStringFunc, visibleName, exposed = true) {\n        super(owner, name, \"Number\", visibleName, exposed);\n        this.defaultValue = defaultValue;\n        this.minState = minState;\n        this.maxState = maxState;\n        this.toStringFunc = toStringFunc;\n        this.type = \"Switch\";\n        this._value = this.defaultValue;\n    }\n    setValue(v, updateInterfaces = true) {\n        if (v < this.minState) {\n            throw new Error(\"Set value is less than \" + this.minState);\n        }\n        if (v > this.maxState) {\n            throw new Error(\"Set value is greater than \" + this.maxState);\n        }\n        if (this.audioParameter) {\n            this.audioParameter.value = this.update(v);\n        }\n        if (this._value !== v) {\n            this._value = v;\n            this.triggerParameterSet(updateInterfaces);\n        }\n        this.trigger();\n        return v;\n    }\n    destroy() { }\n    increment() {\n        let v = this._value - 1;\n        if (v < this.minState) {\n            v = this.maxState;\n        }\n        return this.setValue(v);\n    }\n    decrement() {\n        let v = this._value - 1;\n        if (v < this.minState) {\n            v = this.maxState;\n        }\n        return this.setValue(v);\n    }\n    bindToAudioParam(ap) {\n        if (typeof ap == \"object\" && ap.value != undefined) {\n            this.audioParameter = ap;\n            this.audioParameter.value = this.update(this._value);\n            if (ap.setValueAtTime) {\n                this.automation = new ParameterStepAutomation(this, this.audioParameter, this.minState, this.maxState, this.toStringFunc);\n            }\n            else {\n                console.warn(\"Cannot bind automation as AudioParameter is not automatable\");\n            }\n        }\n        else {\n            throw new Error(\"Argument 1 is not a valid AudioParameter object\");\n        }\n    }\n    toString() {\n        const v = this._value;\n        if (typeof this.toStringFunc == \"function\") {\n            return this.toStringFunc.call(this, v);\n        }\n        else {\n            return String(v);\n        }\n    }\n    getParameterObject() {\n        return {\n            value: this.value,\n            defaultValue: this.defaultValue,\n            minimum: this.minState,\n            maximum: this.maxState,\n            visibleName: this.name,\n            type: \"SwitchParameter\",\n            name: this.name\n        };\n    }\n    get value() {\n        if (this.audioParameter) {\n            return this.translate(this.audioParameter.value);\n        }\n        return this._value;\n    }\n    set value(v) { this.setValue(v, true); }\n    get boundAudioParam() { return this.audioParameter; }\n    get automatable() { return this.automation !== undefined; }\n    get automationPoints() { return this.automation; }\n    get enabled() { var _a; return (_a = this.automation) === null || _a === void 0 ? void 0 : _a.enabled; }\n    set enabled(t) {\n        if (this.automatable) {\n            this.automation.enabled = (t === true);\n        }\n    }\n    getValueAtTimePoint(time) {\n        return this.automation.getValueAtTimePoint(time);\n    }\n    start(time, contextTime) {\n        this.automation.start(time, contextTime);\n    }\n    stop(time) {\n        this.automation.stop(time);\n    }\n}\n","import { PluginParameter } from \"./PluginParameter\";\nexport class URLParameter extends PluginParameter {\n    constructor(owner, name, defaultValue, maxLength, toStringFunc, visibleName, exposed = true) {\n        super(owner, name, \"String\", visibleName, exposed);\n        this.defaultValue = defaultValue;\n        this.maxLength = maxLength;\n        this.toStringFunc = toStringFunc;\n        this.type = \"URL\";\n    }\n    getResource(type) {\n        if (this.resourceObject == undefined) {\n            this.resourceObject = new Promise(function (resolve, reject) {\n                const xhr = new XMLHttpRequest();\n                xhr.open(\"GET\", this._value);\n                xhr.responseType = type;\n                xhr.onload = function (e) {\n                    if (xhr.status == 200) {\n                        resolve(xhr.response);\n                    }\n                    else {\n                        reject({\n                            code: xhr.status,\n                            message: e.target\n                        });\n                    }\n                };\n                xhr.onerror = function (e) {\n                    reject({\n                        code: xhr.status,\n                        message: \"error\"\n                    });\n                };\n                xhr.ontimeout = function (e) {\n                    reject({\n                        code: xhr.status,\n                        message: \"timeout\"\n                    });\n                };\n                xhr.send();\n            });\n        }\n        return this.resourceObject;\n    }\n    setValue(v, updateInterfaces = true) {\n        if (this.maxLength && v.length > this.maxLength) {\n            throw new Error(`String longer than ${this.maxLength} characters`);\n        }\n        if (this._value !== v) {\n            this.resourceObject = undefined;\n            this._value = v;\n            this.triggerParameterSet(updateInterfaces);\n        }\n        this.trigger();\n        return this._value;\n    }\n    toString() {\n        if (typeof this.toStringFunc == \"function\") {\n            return this.toStringFunc.call(this, this._value);\n        }\n        else {\n            return this._value;\n        }\n    }\n    getParameterObject() {\n        return {\n            value: this.value,\n            defaultValue: this.defaultValue,\n            maxLength: this.maxLength,\n            visibleName: this.name,\n            type: \"URLParameter\",\n            name: this.name\n        };\n    }\n    get value() { return this._value; }\n    ;\n    set value(t) { this.setValue(t); }\n}\n","/* jshint esversion: 6 */\nimport { OutputNode } from \"../../Extractors/OutputNode\";\nexport class SubFactoryFeatureSender {\n    constructor(owner, FactoryFeatureMap) {\n        this.owner = owner;\n        this.FactoryFeatureMap = FactoryFeatureMap;\n        this.outputNodes = [];\n    }\n    updateFeatures(featureObject, outputIndex = 0) {\n        if (this.outputNodes[outputIndex] === undefined) {\n            if (outputIndex > 1) {\n                throw (\"Requested an output that does not exist\");\n            }\n            this.outputNodes[outputIndex] = new OutputNode(this, this.owner.chainStart, outputIndex);\n        }\n        for (let si = 0; si < featureObject.length; si++) {\n            let extractor = this.outputNodes[outputIndex].findExtractor(featureObject[si].frameSize);\n            if (!extractor) {\n                extractor = this.outputNodes[outputIndex].addExtractor(featureObject[si].frameSize);\n            }\n            extractor.setFeatures(featureObject[si].features);\n        }\n    }\n    ;\n    rejoinExtractors() {\n        for (const outputNode of this.outputNodes) {\n            outputNode.rejoinExtractors();\n        }\n    }\n    postFeatures(featureObject) {\n        /*\n            Called by the individual extractor instances:\n            featureObject = {'frameSize': frameSize,\n            'outputIndex': outputIndex,\n            'results':[]}\n        */\n        this.FactoryFeatureMap.postFeatures({\n            'source': this,\n            'outputIndex': featureObject.outputIndex,\n            'frameSize': featureObject.frameSize,\n            'results': featureObject.results\n        });\n    }\n    ;\n    destroy() { }\n}\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n/* jshint esversion: 6 */\nimport { LinkedStore } from \"../../LinkedStore\";\nimport { SubFactoryFeatureSender } from \"./SubFactoryFeatureSender/index\";\nvar AudioPluginChainManagerState;\n(function (AudioPluginChainManagerState) {\n    AudioPluginChainManagerState[AudioPluginChainManagerState[\"READY\"] = 0] = \"READY\";\n    AudioPluginChainManagerState[AudioPluginChainManagerState[\"CLOSED\"] = 1] = \"CLOSED\";\n})(AudioPluginChainManagerState || (AudioPluginChainManagerState = {}));\nexport class AudioPluginChainManager {\n    constructor(PluginFactory, chainStart, chainStop) {\n        this.PluginFactory = PluginFactory;\n        this.chainStart = chainStart;\n        this.chainStop = chainStop;\n        this.plugin_list = [];\n        this.state = AudioPluginChainManagerState.READY;\n        this.delaySamples = 0;\n        this.featureSender = new SubFactoryFeatureSender(this, this.PluginFactory.FeatureMap);\n        this.semanticStores = [];\n        this.eventTarget = new EventTarget();\n        this.factoryName = '';\n        this.TrackData = new LinkedStore(\"Track\");\n        chainStart.disconnect();\n        chainStart.connect(chainStop);\n    }\n    rebuild() {\n        let i = 0, l = this.plugin_list.length - 1;\n        while (i < l) {\n            const currentNode = this.plugin_list[i++];\n            const nextNode = this.plugin_list[i];\n            currentNode.reconnect(nextNode);\n        }\n    }\n    isolate() {\n        this.plugin_list.forEach((e) => {\n            e.disconnect();\n        });\n    }\n    cutChain() {\n        try {\n            if (this.plugin_list.length > 0) {\n                this.chainStart.disconnect(this.plugin_list[0].input);\n                this.plugin_list[this.plugin_list.length - 1].output.disconnect(this.chainStop);\n            }\n            else {\n                this.chainStart.disconnect(this.chainStop);\n            }\n        }\n        catch (_a) {\n            console.warn('could not disconnect plugin chain!');\n        }\n        return true;\n    }\n    joinChain() {\n        if (this.plugin_list.length > 0) {\n            this.chainStart.connect(this.plugin_list[0].input);\n            this.plugin_list[this.plugin_list.length - 1].output.connect(this.chainStop);\n        }\n        else {\n            this.chainStart.connect(this.chainStop);\n        }\n        this.featureSender.rejoinExtractors();\n    }\n    buildNewPlugin(prototypeObject) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.state === AudioPluginChainManagerState.CLOSED) {\n                throw new Error(\"SubFactory has been destroyed! Cannot add new plugins\");\n            }\n            const node = yield prototypeObject.createPluginInstance(this);\n            return node;\n        });\n    }\n    getDelayCompensation() {\n        let sum = 0;\n        for (const plugin of this.plugin_list) {\n            if (!plugin.isBypassed()) {\n                sum += plugin.node.processingDelayAsSamples;\n            }\n        }\n        return sum;\n    }\n    bypassPlugin(plugin_instance, state) {\n        // Check is a member of this chain\n        if (this.plugin_list.includes(plugin_instance) === false) {\n            return;\n        }\n        plugin_instance.bypass(state);\n    }\n    getPrototypes() {\n        return this.PluginFactory.getPrototypes();\n    }\n    getFactory() {\n        return this.PluginFactory;\n    }\n    ;\n    destroy(reconnect = false) {\n        if (this.state === AudioPluginChainManagerState.READY) {\n            for (const pluginInstanceo of this.plugin_list) {\n                this.destroyPlugin(pluginInstanceo);\n            }\n            this.chainStart.disconnect();\n            if (reconnect === true) {\n                this.chainStart.connect(this.chainStop);\n            }\n            this.featureSender.destroy();\n            this.state = AudioPluginChainManagerState.CLOSED;\n        }\n    }\n    createPlugin(prototypeObject) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.state === AudioPluginChainManagerState.CLOSED) {\n                return;\n            }\n            let node;\n            try {\n                node = yield this.buildNewPlugin(prototypeObject);\n            }\n            catch (e) {\n            }\n            this.cutChain();\n            this.plugin_list.push(node);\n            this.isolate();\n            this.rebuild();\n            this.joinChain();\n            node.addEventListener(\"alterdelay\", this);\n            node.node.onloaded.call(node.node);\n            this.updateDelayCompensation();\n            this.eventTarget.dispatchEvent(new Event(\"change\"));\n            return node;\n        });\n    }\n    removePlugin(plugin_object) {\n        if (this.state === AudioPluginChainManagerState.CLOSED) {\n            return;\n        }\n        var index = this.getPluginIndex(plugin_object);\n        if (index >= 0) {\n            this.cutChain();\n            plugin_object.removeEventListener(\"alterdelay\", this);\n            plugin_object.node.stop.call(plugin_object.node);\n            plugin_object.node.onunloaded.call(plugin_object.node);\n            this.plugin_list.splice(index, 1);\n            this.isolate();\n            this.rebuild();\n            this.joinChain();\n            this.updateDelayCompensation();\n            this.eventTarget.dispatchEvent(new Event(\"change\"));\n        }\n    }\n    destroyPlugin(plugin_object) {\n        if (this.state === AudioPluginChainManagerState.CLOSED) {\n            return;\n        }\n        this.removePlugin(plugin_object);\n        this.PluginFactory.deletePlugin(plugin_object);\n        this.updateDelayCompensation();\n    }\n    getPlugins() {\n        return this.plugin_list;\n    }\n    getAllPlugins() {\n        return this.PluginFactory.getAllPluginsObject();\n    }\n    ;\n    getPluginIndex(plugin_object) {\n        if (this.state === AudioPluginChainManagerState.CLOSED) {\n            return;\n        }\n        return this.plugin_list.indexOf(plugin_object);\n    }\n    movePlugin(plugin_object, new_index) {\n        if (this.state === AudioPluginChainManagerState.CLOSED) {\n            return;\n        }\n        if (this.PluginFactory.getAllPlugins().includes(plugin_object) === false) {\n            throw new Error(\"Plugin does not exist\");\n        }\n        const index = this.getPluginIndex(plugin_object);\n        let obj;\n        this.cutChain();\n        this.isolate();\n        if (plugin_object.node.owner !== this) {\n            // Different sub-factory\n            plugin_object.node.owner.removePlugin(plugin_object);\n            plugin_object.node.changeOwner(this);\n            obj = [plugin_object];\n        }\n        else {\n            obj = this.plugin_list.splice(index, 1);\n            plugin_object.node.onunloaded.call(plugin_object.node);\n        }\n        if (new_index === 0) {\n            this.plugin_list = obj.concat(this.plugin_list);\n        }\n        else if (new_index >= this.plugin_list.length) {\n            this.plugin_list = this.plugin_list.concat(obj);\n        }\n        else {\n            const holdLow = this.plugin_list.slice(0, new_index);\n            const holdHigh = this.plugin_list.slice(new_index);\n            this.plugin_list = holdLow.concat(obj.concat(holdHigh));\n        }\n        this.rebuild();\n        this.joinChain();\n        plugin_object.node.onloaded.call(plugin_object.node);\n        this.updateDelayCompensation();\n        this.eventTarget.dispatchEvent(new Event(\"change\"));\n    }\n    copyPlugin(plugin_object, copy_index) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (copy_index === undefined) {\n                copy_index = this.plugin_list.length;\n            }\n            if (typeof copy_index != \"number\" || copy_index < 0 || copy_index > this.plugin_list.length) {\n                throw (\"Plugin copy index outside of the chain scope.\");\n            }\n            let node;\n            try {\n                node = yield this.buildNewPlugin(plugin_object.prototypeObject);\n            }\n            catch (e) {\n                console.log(e);\n                throw new Error(\"Plugin did not get created! Aborting\");\n            }\n            node.node.parameters.setParametersByObject(plugin_object.node.parameters.getParameterObject(), false);\n            this.cutChain();\n            this.isolate();\n            this.plugin_list.splice(copy_index, 0, node);\n            this.rebuild();\n            this.joinChain();\n            this.updateDelayCompensation();\n            node.node.onloaded.call(node.node);\n            this.eventTarget.dispatchEvent(new Event(\"change\"));\n            return node;\n        });\n    }\n    duplicateAudioPluginChainManager(sourceAudioPluginChainManager) {\n        return __awaiter(this, void 0, void 0, function* () {\n            for (const plugin of sourceAudioPluginChainManager.getPlugins()) {\n                yield this.copyPlugin(plugin);\n            }\n            return this;\n        });\n    }\n    recursiveProcessing(base, list) {\n        const l = list.length;\n        for (let i = 0; i < l; i++) {\n            const entry = list[i];\n            base[entry.name].apply(base, entry.parameters);\n            if (entry.features && entry.features.length > 0) {\n                this.recursiveProcessing(base.result[entry.name], entry.features);\n            }\n        }\n    }\n    updateDelayCompensation() {\n        const sum = this.getDelayCompensation();\n        if (this.delaySamples != sum) {\n            this.delaySamples = sum;\n            this.eventTarget.dispatchEvent(new Event(\"alterdelay\"));\n        }\n        return this.delaySamples;\n    }\n    handleEvent(e) {\n        if (e.type == \"alterdelay\") {\n            this.updateDelayCompensation();\n        }\n    }\n    addEventListener(type, listener, options) {\n        return this.eventTarget.addEventListener(type, listener, options);\n    }\n    removeEventListener(type, listener, options) {\n        return this.eventTarget.removeEventListener(type, listener, options);\n    }\n    get SessionData() { return this.PluginFactory.SessionData; }\n    get UserData() { return this.PluginFactory.UserData; }\n    get processingDelayAsSamples() { return this.updateDelayCompensation(); }\n    get processingDelayAsSeconds() { return this.processingDelayAsSamples / this.PluginFactory.context.sampleRate; }\n}\n","import { TimeData } from \"js-xtract\";\nexport class Extractor {\n    constructor(parent, frameSize) {\n        this.parent = parent;\n        this.frameSize = frameSize;\n        this.features = [];\n        this.context = this.parent.output.context;\n        this.analyser = parent.output.context.createAnalyser();\n        this.analyser.fftSize = frameSize;\n        parent.output.connect(this.analyser);\n    }\n    getXtractData() {\n        if (this.timeData === undefined) {\n            this.timeData = new TimeData(this.analyser.fftSize, this.context.sampleRate);\n        }\n        const dst = new Float32Array(this.analyser.fftSize);\n        if (this.analyser.getFloatTimeDomainData) {\n            this.analyser.getFloatTimeDomainData(dst);\n        }\n        else {\n            const view = new Uint8Array(this.analyser.fftSize);\n            this.analyser.getByteTimeDomainData(view);\n            for (let i = 0; i < this.analyser.fftSize; i++) {\n                dst[i] = view[i];\n                dst[i] = (dst[i] / 127.5) - 1;\n            }\n        }\n        this.timeData.copyDataFrom(dst);\n        return this.timeData;\n    }\n    frameCallback() {\n        // Perform a callback on each frame\n        // The function callback has the arguments (current_frame, previous_frame, previous_result)\n        if (this.callbackObject === undefined) {\n            this.callbackObject = this.parent.output.context.createScriptProcessor(this.analyser.fftSize, 1, 1);\n            this.analyser.connect(this.callbackObject);\n            this.callbackObject.onaudioprocess = (e) => {\n                const current_frame = this.getXtractData();\n                const message = {\n                    'numberOfChannels': 1,\n                    'results': []\n                };\n                message.results[0] = {\n                    'channel': 0,\n                    'results': []\n                };\n                this.postFeatures(message);\n                for (let c = 0; c < e.outputBuffer.numberOfChannels && c < e.inputBuffer.numberOfChannels; c++) {\n                    e.outputBuffer.copyToChannel(e.inputBuffer.getChannelData(c), c);\n                }\n            };\n        }\n        // For chrome and other efficiency browsers\n        if (!this.fooGain) {\n            this.fooGain = this.context.createGain();\n            this.fooGain.gain.value = 0;\n            this.callbackObject.connect(this.fooGain);\n            this.fooGain.connect(this.context.destination);\n        }\n    }\n    clearCallback() {\n        //this === Extractor\n        if (this.callbackObject) {\n            this.callbackObject.disconnect();\n            this.fooGain.disconnect();\n            this.fooGain = undefined;\n            this.callbackObject.onaudioprocess = undefined;\n            this.callbackObject = undefined;\n        }\n    }\n    setFeatures(featureList) {\n        this.features = featureList;\n        if (this.features.length === 0) {\n            this.clearCallback();\n        }\n        else {\n            this.frameCallback();\n        }\n    }\n    rejoinExtractor() {\n        this.parent.output.connect(this.extractor);\n    }\n    postFeatures(resultsJSON) {\n        const obj = {\n            'outputIndex': this.parent.index,\n            'frameSize': this.frameSize,\n            'results': resultsJSON\n        };\n        this.parent.postFeatures(obj);\n    }\n    get extractor() { return this.analyser; }\n}\n","import { Extractor } from \"./Extractor\";\nimport { WorkerExtractor } from \"./WorkerExtractor\";\nexport class OutputNode {\n    constructor(parent, output, index) {\n        this.parent = parent;\n        this.output = output;\n        this.index = index;\n        this.extractors = [];\n    }\n    addExtractor(frameSize) {\n        let obj;\n        if (window.Worker) {\n            obj = new WorkerExtractor(this, frameSize);\n        }\n        else {\n            obj = new Extractor(this, frameSize);\n        }\n        this.extractors.push(obj);\n        return obj;\n    }\n    findExtractor(frameSize) {\n        return this.extractors.find((e) => e.frameSize === frameSize);\n    }\n    deleteExtractor(frameSize) {\n        const extractor = this.findExtractor(frameSize);\n        if (extractor) {\n            const index = this.extractors.indexOf(extractor);\n            this.extractors.splice(index, 1);\n        }\n    }\n    rejoinExtractors() {\n        this.extractors.forEach(function (e) {\n            e.rejoinExtractor();\n        });\n    }\n    postFeatures(resultObject) {\n        this.parent.postFeatures(resultObject);\n    }\n}\n","export class WorkerExtractor {\n    constructor(parent, frameSize) {\n        this.parent = parent;\n        this.frameSize = frameSize;\n        this.worker = new Worker(\"../feature-worker.js\", { type: \"module\" });\n        this.features = [];\n        this.analyser = parent.output.context.createScriptProcessor(frameSize, parent.output.numberOfOutputs, 1);\n        parent.output.connect(this.analyser);\n        this.worker.onerror = (errorEvent) => {\n            console.error(errorEvent);\n        };\n        this.worker.onmessage = (e) => {\n            if (e.data.state === 2) {\n                this.response(e);\n            }\n            else if (e.data.state === 1) {\n                this.extractor.onaudioprocess = this.onaudiocallback;\n            }\n        };\n    }\n    onaudiocallback(e) {\n        var c, frames = [];\n        for (c = 0; c < e.inputBuffer.numberOfChannels; c++) {\n            frames[c] = e.inputBuffer.getChannelData(c);\n        }\n        this.worker.postMessage({\n            'state': 2,\n            'frames': frames\n        });\n    }\n    response(msg) {\n        this.postFeatures(msg.data.response);\n    }\n    postFeatures(resultsJSON) {\n        const obj = {\n            'outputIndex': this.parent.index,\n            'frameSize': this.frameSize,\n            'results': resultsJSON\n        };\n        this.parent.postFeatures(obj);\n    }\n    rejoinExtractor() {\n        this.parent.output.connect(this.extractor);\n    }\n    ;\n    setFeatures(featureList) {\n        var self = this;\n        var configMessage = {\n            'state': 1,\n            'sampleRate': this.parent.output.context.sampleRate,\n            'featureList': featureList,\n            'numChannels': this.parent.output.numberOfOutputs,\n            'frameSize': this.frameSize\n        };\n        this.features = featureList;\n        if (featureList && featureList.length > 0) {\n            this.worker.postMessage({ 'state': 0 });\n            this.worker.postMessage(configMessage);\n        }\n        else {\n            this.extractor.onaudioprocess = undefined;\n        }\n    }\n    get extractor() { return this.analyser; }\n}\n","import { uniqueMergeArray } from \"../../utility/uniqueMergeArray\";\nclass FrameSizeToFeatures {\n    constructor() {\n        this.receiverMap = new Map();\n    }\n    requestFeatures(frameSize, receiver, features) {\n        if (this.receiverMap.has(frameSize) === false) {\n            this.receiverMap.set(frameSize, new Map());\n        }\n        const receiverMapFeatures = this.receiverMap.get(frameSize);\n        if (receiverMapFeatures.has(receiver)) {\n            receiverMapFeatures.set(receiver, uniqueMergeArray(receiverMapFeatures.get(receiver), features));\n        }\n        else {\n            receiverMapFeatures.set(receiver, features);\n        }\n        // Now get all the features we need to export\n        let allFeatures = [];\n        for (const [receiver, receiverFeatures] of receiverMapFeatures) {\n            allFeatures = uniqueMergeArray(receiverFeatures, allFeatures);\n        }\n        return allFeatures;\n    }\n    revokeAllFeatures(frameSize) {\n        return this.revokeFeatures(frameSize, undefined, undefined);\n    }\n    revokeAllReceiverFeatures(frameSize, receiver) {\n        return this.revokeFeatures(frameSize, receiver, undefined);\n    }\n    revokeFeatures(frameSize, receiver, featuresToRemove) {\n        if (this.receiverMap.has(frameSize) === false) {\n            return;\n        }\n        const receiverMapFeatures = this.receiverMap.get(frameSize);\n        if (receiver === undefined) {\n            // If receiver is undefined, then we are killing the whole frameSize map\n            for (const [receiverFromMap, receiverFeatures] of receiverMapFeatures) {\n                this.revokeFeatures(frameSize, receiverFromMap, receiverFeatures);\n            }\n            return this.getFeatures(frameSize);\n        }\n        if (receiverMapFeatures.has(receiver) === false) {\n            return;\n        }\n        const featureList = receiverMapFeatures.get(receiver);\n        if (featuresToRemove === undefined) {\n            // If features is undefined, remove all features\n            // But, an empty list is valid\n            featuresToRemove = featureList;\n        }\n        const reducedFeatureList = featureList.filter(feature => featuresToRemove.includes(feature) === false);\n        if (reducedFeatureList.length === 0) {\n            // Have no features!\n            receiverMapFeatures.delete(receiver);\n        }\n        else {\n            receiverMapFeatures.set(receiver, reducedFeatureList);\n        }\n        const remainingFeatures = this.getFeatures(frameSize);\n        if (remainingFeatures.length === 0) {\n            // The frameSize has no features left\n            this.receiverMap.delete(frameSize);\n        }\n        return remainingFeatures;\n    }\n    getFeatures(frameSize) {\n        const receiverMapFeatures = this.receiverMap.get(frameSize);\n        if (receiverMapFeatures === undefined) {\n            return [];\n        }\n        let allFeatures = [];\n        for (const [receiver, receiverFeatures] of receiverMapFeatures) {\n            allFeatures = uniqueMergeArray(receiverFeatures, allFeatures);\n        }\n        return allFeatures;\n    }\n}\nclass SourceMap {\n    constructor(source) {\n        this.source = source;\n        this.outputMap = new Map();\n    }\n    getOutputMap(outputIndex) {\n        return this.outputMap.get(outputIndex);\n    }\n    keys() {\n        return this.outputMap.keys();\n    }\n    values() {\n        return this.outputMap.values();\n    }\n    entries() {\n        return this.outputMap.entries();\n    }\n    getFeatures(outputIndex, frameSize) {\n        const output = this.getOutputMap(outputIndex);\n        if (output === undefined) {\n            return undefined;\n        }\n        return output.getFeatures(frameSize);\n    }\n    getOrAddOutputMap(outputIndex) {\n        const output = this.getOutputMap(outputIndex);\n        if (output === undefined) {\n            this.outputMap.set(outputIndex, new FrameSizeToFeatures());\n            return this.getOutputMap(outputIndex);\n        }\n        return output;\n    }\n    requestFeatures(outputIndex, frameSize, features, receiver) {\n        const output = this.getOrAddOutputMap(outputIndex);\n        const featureRequest = {\n            outputIndex: outputIndex,\n            frameSize: frameSize,\n            features: []\n        };\n        featureRequest.features = output.requestFeatures(frameSize, receiver, features);\n        this.source.updateFeatures([featureRequest]);\n    }\n    revokeFeatures(outputIndex, frameSize, receiver, featuresToRemove) {\n        if (outputIndex === undefined) {\n            for (const _outputIndex of this.outputMap.keys()) {\n                this.revokeFeatures(_outputIndex, frameSize, receiver, featuresToRemove);\n            }\n            return;\n        }\n        const output = this.getOutputMap(outputIndex);\n        if (output === undefined) {\n            return;\n        }\n        if (frameSize === undefined) {\n            for (const _frameSize of output.receiverMap.keys()) {\n                this.revokeFeatures(outputIndex, _frameSize, receiver, featuresToRemove);\n            }\n            return;\n        }\n        const featureRequest = {\n            outputIndex: outputIndex,\n            frameSize: frameSize,\n            features: []\n        };\n        featureRequest.features = output.revokeFeatures(frameSize, receiver, featuresToRemove);\n        if (featureRequest.features.length === 0) {\n            this.outputMap.delete(outputIndex);\n        }\n        this.source.updateFeatures([featureRequest]);\n    }\n}\nexport class FeatureMap {\n    constructor(factory) {\n        this.factory = factory;\n        this.Mappings = new Map();\n    }\n    findOrCreateSourceRequestMap(pluginSender) {\n        const requests = this.Mappings.get(pluginSender);\n        if (requests === undefined) {\n            const requestMap = new SourceMap(pluginSender);\n            this.Mappings.set(pluginSender, requestMap);\n            return requestMap;\n        }\n        return requests;\n    }\n    requestFeatures(requestor, pluginSender, featureObject) {\n        // Grab any existing map or build a new one\n        //pluginSender.updateFeatures([featureObject]);\n        const sourceMap = this.findOrCreateSourceRequestMap(pluginSender);\n        sourceMap.requestFeatures(featureObject.outputIndex, featureObject.frameSize, featureObject.features, requestor);\n    }\n    ;\n    deleteFeaturesFromSource(source) {\n        // This will imediately kill the source\n        // Used when deleting the plugin!\n        const sourceMap = this.Mappings.get(source);\n        if (sourceMap === undefined) {\n            return;\n        }\n        sourceMap.revokeFeatures();\n        this.Mappings.delete(source);\n    }\n    deleteFeatures(requestor, pluginSender, featureObject) {\n        if (pluginSender === undefined && featureObject === undefined) {\n            // Bork everything to this plugin!\n            for (const sourceMap of this.Mappings.values()) {\n                sourceMap.revokeFeatures(undefined, undefined, requestor, undefined); // Will bork any lists with that requestor\n            }\n        }\n        else {\n            const sourceMap = this.Mappings.get(pluginSender);\n            if (sourceMap === undefined) {\n                return;\n            }\n            // Depending on the level of info in featureObject...\n            sourceMap.revokeFeatures(featureObject === null || featureObject === void 0 ? void 0 : featureObject.outputIndex, featureObject === null || featureObject === void 0 ? void 0 : featureObject.frameSize, requestor, featureObject === null || featureObject === void 0 ? void 0 : featureObject.features);\n        }\n    }\n    ;\n    getFeatureList(requestor, pluginSender) { }\n    ;\n    postFeatures(featureObject) {\n        // Receive from the Sender objects\n        // Trigger distributed search for results transmission\n        // First get the instance mapping for output/frame\n        const source = this.Mappings.get(featureObject.source);\n        if (!source) {\n            return;\n        }\n        const outputMap = source.getOutputMap(featureObject.outputIndex);\n        if (outputMap === undefined) {\n            return;\n        }\n        for (const [receiver, features] of outputMap.receiverMap.get(featureObject.frameSize)) {\n            // Right now just send all features around\n            receiver.postFeatures(featureObject);\n        }\n    }\n    ;\n}\n","/* jshint esversion: 6 */\nimport { SynthesiserBasePlugin } from \"../SynthesiserBasePlugin/index\";\nexport class MidiSynthesisInstance {\n    constructor(node) {\n        this.node = node;\n        this.output = this.node.context.createGain();\n        this.node.getOutputs()[0].connect(this.output);\n    }\n    destroy() {\n        this.node.destroy();\n    }\n    ;\n    get prototypeObject() { return this.node.prototypeObject; }\n    get externalInterface() { return this.node.externalInterface; }\n}\nexport function isMidiSynthesisInstance(object) {\n    return object.node instanceof SynthesiserBasePlugin;\n}\n","/* jshint esversion: 6 */\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { LinkedStore } from '../LinkedStore';\nexport class MidiSynthesiserHost {\n    constructor(factory) {\n        this.factory = factory;\n        this.ev = new EventTarget();\n        this.connections = [];\n        this.SessionData = this.factory.SessionData;\n        this.UserData = this.factory.UserData;\n        this.TrackData = new LinkedStore(\"Track\");\n    }\n    unloadSynthesiserSlot() {\n        if (this.midiSynthSlot) {\n            this.midiSynthSlot.node.cancelAllEvents(this.factory.context.currentTime);\n            this.midiSynthSlot.node.disconnect();\n            this.midiSynthSlot = undefined;\n        }\n    }\n    buildNewSynthesiserObject(prototypeObject) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.unloadSynthesiserSlot();\n            this.factory.deletePlugin(this.midiSynthSlot);\n            if (prototypeObject.hasMidiInput == false || prototypeObject.hasMidiOutput == true) {\n                throw new Error(\"Prototype is not a MidiSynthesis type. hasMidiInput must be true and hasMidiOutput must be false\");\n            }\n            const node = yield prototypeObject.createPluginInstance(this);\n            return node;\n        });\n    }\n    addEventListener(type, listener, options) {\n        return this.ev.addEventListener(type, listener, options);\n    }\n    removeEventListener(type, listener, options) {\n        return this.ev.removeEventListener(type, listener, options);\n    }\n    connect(destinationNode, output, input) {\n        if (destinationNode === undefined) {\n            throw (\"Must define an AudioNode object\");\n        }\n        const exists = this.connections.find((conn) => {\n            return conn.destinationNode == destinationNode && conn.output == output && conn.input == input;\n        });\n        if (exists) {\n            return;\n        }\n        else {\n            this.connections.push({\n                destinationNode: destinationNode,\n                output: output,\n                input: input\n            });\n        }\n        if (this.midiSynthSlot === undefined) {\n            console.warn(\"MIDI Synthesiser is not loaded, connections will be validated on load\");\n        }\n        else {\n            this.midiSynthSlot.node.connect(destinationNode, output, input);\n        }\n    }\n    disconnect(destinationNode, output, input) {\n        if (destinationNode === undefined) {\n            if (this.midiSynthSlot) {\n                this.midiSynthSlot.node.disconnect();\n            }\n            this.connections = [];\n        }\n        else if (typeof destinationNode == \"number\" && typeof output == \"undefined\") {\n            output = destinationNode;\n            destinationNode = undefined;\n            this.connections = this.connections.filter(function (conn) {\n                if (conn.output == output) {\n                    if (this.midiSynthSlot) {\n                        this.midiSynthSlot.node.disconnect(conn.destinationNode, conn.output);\n                    }\n                    return false;\n                }\n                else {\n                    return true;\n                }\n            });\n        }\n        else if (typeof destinationNode == \"object\" && typeof output == \"undefined\") {\n            this.connections = this.connections.filter(function (conn) {\n                if (conn.destinationNode == destinationNode) {\n                    if (this.midiSynthSlot) {\n                        this.midiSynthSlot.node.disconnect(conn.destinationNode);\n                    }\n                    return false;\n                }\n                else {\n                    return true;\n                }\n            });\n        }\n        else if (typeof destinationNode == \"object\" && typeof output == \"number\") {\n            this.connections = this.connections.filter(function (conn) {\n                if (conn.destinationNode == destinationNode && conn.output == output) {\n                    if (this.midiSynthSlot) {\n                        this.midiSynthSlot.node.disconnect(conn.destinationNode, conn.output);\n                    }\n                    return false;\n                }\n                else {\n                    return true;\n                }\n            });\n        }\n        else if (typeof destinationNode == \"object\" && typeof output == \"number\" && typeof input == \"number\") {\n            this.connections = this.connections.filter(function (conn) {\n                if (conn.destinationNode == destinationNode && conn.output == output && conn.input == input) {\n                    if (this.midiSynthSlot) {\n                        this.midiSynthSlot.node.disconnect(conn.destinationNode, conn.output, conn.input);\n                    }\n                    return false;\n                }\n                else {\n                    return true;\n                }\n            });\n        }\n    }\n    scheduleEvent(msg, t) {\n        if (this.midiSynthSlot) {\n            this.midiSynthSlot.node.scheduleEvent(msg, t);\n        }\n        else {\n            throw (\"MIDI Synthesiser not loaded\");\n        }\n    }\n    cancelAllEvents(t) {\n        if (this.midiSynthSlot) {\n            this.midiSynthSlot.node.cancelAllEvents(t);\n        }\n        else {\n            throw (\"MIDI Synthesiser not loaded\");\n        }\n    }\n    start() {\n        if (this.midiSynthSlot) {\n            this.midiSynthSlot.node.start();\n        }\n        else {\n            throw (\"MIDI Synthesiser not loaded\");\n        }\n    }\n    stop() {\n        if (this.midiSynthSlot) {\n            this.midiSynthSlot.node.stop();\n        }\n        else {\n            throw (\"MIDI Synthesiser not loaded\");\n        }\n    }\n    loadMidiSynthesiserModule(prototype) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (prototype.hasMidiInput == false || prototype.hasMidiOutput == true) {\n                throw new Error(\"Prototype is not a MidiSynthesis type. hasMidiInput must be true and hasMidiOutput must be false\");\n            }\n            let node;\n            try {\n                node = yield this.buildNewSynthesiserObject(prototype);\n            }\n            catch (e) {\n                console.log(e);\n                throw new Error(\"Plugin did not get created! Aborting\");\n            }\n            ;\n            node.node.onloaded.call(node.node);\n            this.midiSynthSlot = node;\n            this.connections.forEach(function (conn) {\n                this.midiSynthSlot.node.connect(conn.destinationNode, conn.output, conn.input);\n            });\n            this.ev.dispatchEvent(new Event(\"loaded\"));\n            return this.midiSynthSlot;\n        });\n    }\n    destroy() {\n        this.unloadSynthesiserSlot();\n        this.connections = undefined;\n    }\n    get midiSynthesiser() { return this.midiSynthSlot; }\n}\n","/*eslint-env browser */\n/* jshint esversion:6 */\nclass PluginAsset {\n    constructor(pluginAssetManager, id, name, url, image_url, pack, _assetObject) {\n        this.pluginAssetManager = pluginAssetManager;\n        this.id = id;\n        this.name = name;\n        this.image_url = image_url;\n        this.pack = pack;\n        this._assetObject = _assetObject;\n        this.usedBy = new Set();\n        this.assetURL = new URL(url, window.location.origin);\n    }\n    abortScheduleForCleanup() {\n        if (this.assetCleanupId !== undefined) {\n            window.clearTimeout(this.assetCleanupId);\n            this.assetCleanupId = undefined;\n        }\n    }\n    scheduleForCleanup() {\n        if (this.assetCleanupId !== undefined) {\n            return;\n        }\n        this.assetCleanupId = window.setTimeout(() => {\n            this._assetObject === undefined;\n            this.assetCleanupId = undefined;\n        }, 10000);\n    }\n    fetchAsset() {\n        this.abortScheduleForCleanup();\n        this.fetchPromise = this.pluginAssetManager.fetchAssetFunction(this)\n            .then((ab) => {\n            this._assetObject = ab;\n            this.fetchPromise = undefined;\n            return this._assetObject;\n        });\n    }\n    fetch() {\n        if (this._assetObject instanceof AudioBuffer) {\n            return Promise.resolve(this._assetObject);\n        }\n        else if (this.fetchPromise === undefined) {\n            this.fetchAsset();\n        }\n        return this.fetchPromise;\n    }\n    toJSON() {\n        return { asset: this.assetURL.pathname };\n    }\n    toString() {\n        return JSON.stringify(this.toJSON());\n    }\n    registerToPlugin(plugin) {\n        this.abortScheduleForCleanup();\n        this.usedBy.add(plugin);\n    }\n    deregisterFromPlugin(plugin) {\n        this.usedBy.delete(plugin);\n        if (this.usedBy.size === 0) {\n            this.scheduleForCleanup();\n        }\n    }\n    get url() { return this.assetURL.href; }\n    get assetObject() { return this.assetObject; }\n    get fetched() {\n        return (this._assetObject instanceof AudioBuffer || this.fetchPromise !== undefined);\n    }\n}\nexport { PluginAsset };\n","/*eslint-env browser */\n/* jshint esversion:6 */\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { PluginAssetsList } from \"./PluginAssetsList\";\nimport { fetchAssetAsArrayBuffer } from \"./defaultAssetFetch\";\nfunction findPackByName(assetPackList, name) {\n    return assetPackList.find(function (l) {\n        return l.name == name;\n    });\n}\nexport class PluginAssetManager {\n    constructor(factoryContext) {\n        this.factoryContext = factoryContext;\n        this.assetFetchFunction = fetchAssetAsArrayBuffer;\n        this.assetPacks = [];\n    }\n    findPackByName(name) {\n        return this.assetPacks.find(l => l.name == name);\n    }\n    addPackToList(id, name, image_url, resourceType) {\n        if (typeof name != \"string\") {\n            throw new Error(\"addAssetUrlToList Argument-1 must be a type of string\");\n        }\n        if (this.findPackByName(name)) {\n            throw new Error(`Pack with name ${name} already in this list`);\n        }\n        const assetPack = new PluginAssetsList(this, id, name, image_url, resourceType);\n        this.assetPacks.push(assetPack);\n        return assetPack;\n    }\n    removeAssetPackFromList(assetPack) {\n        const index = this.assetPacks.indexOf(assetPack);\n        if (index == -1) {\n            return this.assetPacks;\n        }\n        this.assetPacks.splice(index, 1);\n        return this.assetPacks;\n    }\n    removeAssetPackFromListByName(name) {\n        if (typeof name != \"string\") {\n            throw \"removeAssetUrlFromList Argument-1 must be a type of string\";\n        }\n        const asset = this.findPackByName(name);\n        return this.removeAssetPackFromList(asset);\n    }\n    importFromAssetLists(oldContext) {\n        oldContext.assetPacks.forEach((originalAssetPack) => {\n            const newContextPack = this.addPackToList(originalAssetPack.id, originalAssetPack.name, originalAssetPack.image_url, originalAssetPack.resourceType);\n            originalAssetPack.assetObjects.forEach((originalAsset) => {\n                let assetObject;\n                if (originalAsset.assetObject !== undefined) {\n                    assetObject = this.factoryContext.context.createBuffer(originalAsset.assetObject.numberOfChannels, originalAsset.assetObject.length, originalAsset.assetObject.sampleRate);\n                    for (var i = 0; i < assetObject.numberOfChannels; i++) {\n                        assetObject.copyToChannel(originalAsset.assetObject.getChannelData(i), i, 0);\n                    }\n                }\n                //id, name, url, image_url, assetObject\n                newContextPack.addAssetUrlToList(originalAsset.id, originalAsset.name, originalAsset.url, originalAsset.image_url, assetObject);\n            });\n        });\n    }\n    setDefaultAssetFetchFunction(func) {\n        if (typeof func === \"function\") {\n            this.assetFetchFunction = func;\n        }\n    }\n    fetchAssetFunction(assetObject) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const ab = yield this.assetFetchFunction(assetObject);\n            return yield this.factoryContext.context.decodeAudioData(ab);\n        });\n    }\n    getAllAssets() {\n        return this.assetPacks.map(l => l.assetObjects).flat();\n    }\n    getAllAssetsByResourceType(resourceType) {\n        if (typeof resourceType == \"string\" && resourceType.length > 0) {\n            return this.assetPacks.filter((list) => list.resourceType == resourceType).map(l => l.assetObjects).flat();\n        }\n        else {\n            return this.getAllAssets();\n        }\n    }\n    findAssetByUrl(url) {\n        const fullUrl = new URL(url, window.location.origin);\n        return this.getAllAssets().find((asset) => {\n            const assetFullUrl = new URL(asset.url, window.location.origin);\n            return (fullUrl.hostname === assetFullUrl.hostname && fullUrl.pathname === assetFullUrl.pathname);\n        });\n    }\n    findAssetById(id) {\n        return this.getAllAssets().find((asset) => asset.id === id);\n    }\n    destroy() {\n        this.assetFetchFunction = undefined;\n    }\n}\n","/*eslint-env browser */\n/* jshint esversion:6 */\nimport { PluginAsset } from \"./PluginAsset\";\nclass PluginAssetsList {\n    constructor(pluginAssetManager, id, name, image_url, resourceType) {\n        this.pluginAssetManager = pluginAssetManager;\n        this.id = id;\n        this.name = name;\n        this.image_url = image_url;\n        this.resourceType = resourceType;\n        this.assetObjects = [];\n    }\n    findAssetByUrl(url) {\n        return this.assetObjects.find((asset) => {\n            return asset.url == url;\n        });\n    }\n    addAssetUrlToList(id, name, url, image_url, assetObject) {\n        if (typeof url != \"string\") {\n            throw new Error(\"addAssetUrlToList Argument-2 must be a type of string\");\n        }\n        if (this.findAssetByUrl(url)) {\n            throw new Error(`URL ${url} already in this list`);\n        }\n        this.assetObjects.push(new PluginAsset(this.pluginAssetManager, id, name, url, image_url, this, assetObject));\n        return this.assetObjects;\n    }\n    removeAssetFromList(asset) {\n        const index = this.assetObjects.findIndex((listObjects) => asset.url == listObjects.url);\n        if (index == -1) {\n            throw new Error(\"Asset not in this list\");\n        }\n        this.assetObjects.splice(index, 1);\n        return this.assetObjects;\n    }\n    removeAssetUrlFromList(url) {\n        if (typeof url != \"string\") {\n            throw new Error(\"removeAssetUrlFromList Argument-1 must be a type of string\");\n        }\n        const asset = this.findAssetByUrl(url);\n        return this.removeAssetFromList(asset);\n    }\n    ;\n}\nexport { PluginAssetsList };\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nexport function fetchAssetAsArrayBuffer(assetObject) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const r = yield fetch(assetObject.url);\n        return yield r.arrayBuffer();\n    });\n}\n","// This defines a master object for holding all the plugins and communicating\n// This object will also handle creation and destruction of plugins\n/*globals Promise, document, console, LinkedStore, Worker, window, XMLHttpRequest */\n/*eslint-env browser */\n/* jshint esversion:6 */\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { LinkedStore } from '../LinkedStore';\nimport { PluginAssetManager } from './PluginAssets/PluginAssetManager';\nimport { PluginPrototype, SynthesiserPrototype } from \"./PluginPrototype\";\nimport { FeatureMap } from \"./FeatureMap/index\";\nimport { AudioPluginChainManager } from \"./AudioPluginChainManager/index\";\nimport { MidiSynthesiserHost } from \"./MidiSynthesiserHost\";\nimport { PluginUserInterfaceMessageHub } from \"./PluginUserInterfaceMessageHub\";\nimport { isPluginInstance } from './PluginInstance';\nimport { isMidiSynthesisInstance } from './MidiSynthesisInstance';\nexport class PluginFactory {\n    constructor(context, rootURL) {\n        this.context = context;\n        this.rootURL = rootURL;\n        this.plugin_prototypes = [];\n        this.audioPluginChainManagers = [];\n        this.synthesiserHosts = [];\n        this.pluginsList = [];\n        this.audioStarted = false;\n        this.PluginGUI = new PluginUserInterfaceMessageHub(this);\n        this.stores = [];\n        this.SessionData = new LinkedStore(\"Session\");\n        this.UserData = new LinkedStore(\"User\");\n        this.FeatureMap = new FeatureMap(this);\n        this.pluginAssets = new PluginAssetManager(this);\n    }\n    copyFactory(factory, newcontext) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const BFactory = new PluginFactory(newcontext, this.rootURL);\n            for (const proto of this.plugin_prototypes) {\n                yield BFactory.addPrototype(proto.proto, proto.name, proto.version, proto.uniqueID);\n            }\n            BFactory.pluginAssets.importFromAssetLists(this.pluginAssets);\n            return BFactory;\n        });\n    }\n    pluginAudioStart(node, program_time, context_time) {\n        node.start.call(node, program_time, context_time);\n        node.parameters.getParameterNames().forEach(function (n) {\n            var p = node.parameters.getParameterByName(n);\n            if (p.enabled) {\n                p.start(program_time, context_time);\n            }\n        });\n    }\n    pluginAudioStop(node) {\n        const ct = this.context.currentTime;\n        node.stop.call(node, ct);\n        node.parameters.getParameterNames().forEach(function (n) {\n            var p = node.parameters.getParameterByName(n);\n            if (p.enabled) {\n                p.stop(ct);\n            }\n        });\n    }\n    triggerAudioStart(program_time, context_time) {\n        this.pluginsList.forEach((n) => {\n            this.pluginAudioStart(n.node, program_time, context_time);\n        });\n    }\n    triggerAudioStop() {\n        this.pluginsList.forEach((n) => {\n            this.pluginAudioStop(n.node);\n        });\n    }\n    destroyFactory() {\n        this.triggerAudioStop();\n        for (const subFactory of Array.from(this.audioPluginChainManagers)) {\n            this.destroyAudioPluginChainManager(subFactory);\n        }\n        for (const synthesiserHost of Array.from(this.synthesiserHosts)) {\n            this.destroyMidiSynthesiserHost(synthesiserHost);\n        }\n        for (const plugin of Array.from(this.pluginsList)) {\n            this.deletePlugin(plugin);\n        }\n        for (const prototype of Array.from(this.plugin_prototypes)) {\n            this.deletePrototype(prototype);\n        }\n        this.pluginAssets.destroy();\n    }\n    ;\n    loadPrototypeModule(resourceObject, mustModule = false) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let module;\n            try {\n                module = global.require(resourceObject.url);\n                if (typeof module === \"function\") {\n                    return this.addPrototype(module, module.prototype.name, module.prototype.version, module.prototype.uniqueID);\n                }\n                else {\n                    throw new Error(\"Is not a module plugin\");\n                }\n            }\n            catch (e) {\n                if (mustModule === true) {\n                    throw new Error(\"Cannot load using modular systems\");\n                }\n                else {\n                    console.warn(\"Could not load using modular systems\");\n                    return this.loadPluginScript(resourceObject);\n                }\n            }\n            ;\n        });\n    }\n    ;\n    loadResource(resourceObject) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (typeof resourceObject !== \"object\") {\n                throw new Error(\"Error\");\n            }\n            else if (typeof resourceObject.url !== \"string\") {\n                throw new Error(\"resourceObject.url must be a string\");\n            }\n            else if (typeof resourceObject.test !== \"function\") {\n                throw new Error(\"resourceObject.test must be a function\");\n            }\n            const response = resourceObject.test();\n            if (response !== false && response !== true) {\n                throw new Error(\"resourceObject.test must return true or false\");\n            }\n            if (!resourceObject.type) {\n                resourceObject.type = \"javascript\";\n            }\n            resourceObject.type = resourceObject.type.toLowerCase();\n            switch (resourceObject.type) {\n                case \"javascript\":\n                    if (!response) {\n                        yield this.loadResource(resourceObject);\n                    }\n                    if (typeof resourceObject.returnObject === \"string\") {\n                        if (window.hasOwnProperty(resourceObject.returnObject)) {\n                            return (window[resourceObject.returnObject]);\n                        }\n                    }\n                    break;\n                default:\n                    throw new Error(\"Invalid type \" + String(resourceObject.type));\n            }\n        });\n    }\n    ;\n    loadPluginScript(resourceObject) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (resourceObject) {\n                if (typeof resourceObject.returnObject !== \"string\") {\n                    throw new Error(\"resourceObject.returnObject must be the name of the prototype function\");\n                }\n                const plugin = yield this.loadResource(resourceObject);\n                return yield this.addPrototype(plugin, plugin.prototype.name, plugin.prototype.version, plugin.prototype.uniqueID);\n            }\n        });\n    }\n    ;\n    injectPrototype(prototypeExecutable, name, version, uniqueID) {\n        if (typeof prototypeExecutable != \"function\") {\n            throw (\"Invalid executable function\");\n        }\n        return this.addPrototype(prototypeExecutable, name, version, uniqueID);\n    }\n    ;\n    addPrototype(plugin_proto, name, version, uniqueID, hasMidiInput = false, hasMidiOutput = false) {\n        if (typeof plugin_proto !== \"function\") {\n            throw new Error(\"The Prototype must be a function!\");\n        }\n        const testObj = {\n            proto: plugin_proto,\n            name,\n            version,\n            uniqueID\n        };\n        const obj = this.plugin_prototypes.find((e) => {\n            let match = 0;\n            for (const param in testObj) {\n                if (e[param] === this[param]) {\n                    match++;\n                }\n                else {\n                    return false;\n                }\n            }\n            return match === 4;\n        });\n        if (obj) {\n            throw new Error(\"The plugin must be unique!\");\n        }\n        if (hasMidiInput === false && hasMidiOutput === false) {\n            const newPluginPrototpye = new PluginPrototype(plugin_proto, this, name, version, uniqueID);\n            this.plugin_prototypes.push(newPluginPrototpye);\n            return newPluginPrototpye;\n        }\n        else if (hasMidiInput === true && hasMidiOutput === false) {\n            const newPluginPrototpye = new SynthesiserPrototype(plugin_proto, this, name, version, uniqueID);\n            this.plugin_prototypes.push(newPluginPrototpye);\n            return newPluginPrototpye;\n        }\n    }\n    ;\n    deletePrototype(plugin_proto) {\n        const index = this.plugin_prototypes.indexOf(plugin_proto);\n        if (index === -1) {\n            return;\n        }\n        this.plugin_prototypes.splice(index, 1);\n    }\n    ;\n    getPrototypes() {\n        return this.plugin_prototypes;\n    }\n    ;\n    getAudioPluginPrototypes() {\n        return this.plugin_prototypes.filter(function (proto) {\n            return proto.hasMidiInput == false && proto.hasMidiOutput == false;\n        });\n    }\n    ;\n    getMidiSynthPrototypes() {\n        return this.plugin_prototypes.filter(function (proto) {\n            return proto.hasMidiInput == true && proto.hasMidiOutput == false;\n        });\n    }\n    ;\n    getMidiPluginPrototypes() {\n        return this.plugin_prototypes.filter(function (proto) {\n            return proto.hasMidiInput == true && proto.hasMidiOutput == true;\n        });\n    }\n    ;\n    getAllPlugins() {\n        return this.pluginsList;\n    }\n    ;\n    getAllPluginsObject() {\n        const obj = {\n            factory: this,\n            audioPluginChainManagers: this.audioPluginChainManagers.map(subFactory => {\n                return {\n                    subFactory: subFactory,\n                    plugins: subFactory.getPlugins()\n                };\n            })\n        };\n        return obj;\n    }\n    ;\n    createAudioPluginChainManager(chainStart, chainStop) {\n        const node = new AudioPluginChainManager(this, chainStart, chainStop);\n        this.audioPluginChainManagers.push(node);\n        return node;\n    }\n    ;\n    duplicateAudioPluginChainManager(sourceChainManager, chainStart, chainStop) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const node = this.createAudioPluginChainManager(chainStart, chainStop);\n            for (const plugin_object of sourceChainManager.getPlugins()) {\n                const newPlugin = yield node.createPlugin(plugin_object.prototypeObject);\n                newPlugin.node.parameters.setParametersByObject(plugin_object.node.parameters.getParameterObject);\n            }\n            return node;\n        });\n    }\n    ;\n    destroyAudioPluginChainManager(SubFactory) {\n        var index = this.audioPluginChainManagers.findIndex((element) => {\n            if (element === SubFactory) {\n                return true;\n            }\n            return false;\n        });\n        if (index >= 0) {\n            this.audioPluginChainManagers.splice(index, 1);\n            SubFactory.destroy();\n        }\n    }\n    ;\n    createMidiSynthesiserHost(factory) {\n        if (factory === undefined) {\n            factory = this;\n        }\n        const host = new MidiSynthesiserHost(factory);\n        this.synthesiserHosts.push(host);\n        return host;\n    }\n    ;\n    destroyMidiSynthesiserHost(host) {\n        var index = this.synthesiserHosts.findIndex((element) => {\n            if (element === host) {\n                return true;\n            }\n            return false;\n        });\n        if (index >= 0) {\n            this.synthesiserHosts.splice(index, 1);\n            host.destroy();\n        }\n    }\n    ;\n    registerPluginInstance(instance) {\n        if (this.pluginsList.find(p => p === instance)) {\n            throw new Error(\"Plugin Instance not unique\");\n        }\n        this.pluginsList.push(instance);\n        if (this.audioStarted) {\n            const context_time = this.context.currentTime;\n            const program_time = this.getCurrentProgramTime();\n            this.pluginAudioStart(instance.node, program_time, context_time);\n        }\n        return true;\n    }\n    ;\n    deletePlugin(plugin) {\n        const index = this.pluginsList.indexOf(plugin);\n        if (index >= 0) {\n            // Also check it isn't rogue attached to a plugin chain\n            if (isPluginInstance(plugin)) {\n                this.audioPluginChainManagers.forEach((subFactory) => {\n                    if (subFactory.getPlugins().includes(plugin)) {\n                        subFactory.removePlugin(plugin);\n                    }\n                });\n            }\n            else if (isMidiSynthesisInstance(plugin)) {\n                this.synthesiserHosts.forEach(host => {\n                    if (host.midiSynthesiser === plugin) {\n                        host.unloadSynthesiserSlot();\n                    }\n                });\n            }\n            this.pluginsList.splice(index, 1);\n            plugin.node.delete();\n            plugin.node.externalInterface.closeWindows();\n        }\n    }\n    getCurrentProgramTime() {\n        if (this.audioStarted) {\n            return this.context.currentTime - this.audioStartContextTime + this.audioStartProgramTime;\n        }\n        else {\n            return this.audioStartProgramTime;\n        }\n    }\n    setCurrentProgramTime(time) {\n        if (this.audioStarted) {\n            throw new Error(\"Must stop playback to set the current program time\");\n        }\n        if (typeof time == \"number\" && time >= 0) {\n            this.audioStartProgramTime = time;\n            this.PluginGUI.pollAllPlugins();\n        }\n    }\n    audioStart(program_time, context_time) {\n        if (context_time === undefined) {\n            context_time = this.context.currentTime;\n        }\n        if (program_time === undefined) {\n            program_time = 0;\n            console.warn(\"Assuming start time at 0\");\n        }\n        if (!this.audioStarted) {\n            this.setCurrentProgramTime(program_time);\n            this.audioStartContextTime = context_time;\n            this.triggerAudioStart(program_time, context_time);\n            this.audioStarted = true;\n        }\n    }\n    audioStop() {\n        if (this.audioStarted) {\n            this.triggerAudioStop();\n            this.audioStarted = false;\n        }\n    }\n    createStore(storeName) {\n        let node = this.findStore(storeName);\n        if (node === undefined) {\n            node = new LinkedStore(storeName);\n            this.stores.push(node);\n        }\n        return node;\n    }\n    ;\n    getStores() {\n        return this.stores;\n    }\n    ;\n    findStore(storeName) {\n        return this.stores.find(a => a.name === storeName);\n    }\n    ;\n    createFactoryCopy(context) {\n        return this.copyFactory(this, context);\n    }\n    get hasAudioStarted() { return this.audioStarted; }\n    get pluginRootURL() { return this.rootURL; }\n    set pluginRootURL(t) { this.rootURL = t; }\n    get subFactories() { return this.audioPluginChainManagers; }\n}\n","/* jshint esversion: 6 */\nimport { AudioPlugin } from \"../BasePlugin/AudioPlugin\";\n/* jshint esversion: 6 */\nexport class PluginInstance {\n    constructor(node) {\n        this.node = node;\n        this._bypassed = false;\n        this.ev = new EventTarget();\n        this._in = this.node.context.createGain();\n        this._out = this.node.context.createGain();\n        this._in.connect(this.node.getInputs()[0]);\n        this.node.getOutputs()[0].connect(this._out);\n        this.node.addEventListener(\"parameterset\", this);\n        this.node.addEventListener(\"alterdelay\", this);\n    }\n    bypassEnable() {\n        this._in.disconnect();\n        this._in.connect(this._out);\n        this.node.getOutputs()[0].disconnect(this._out);\n        this._bypassed = true;\n        if (this.node.processingDelayAsSamples != 0) {\n            this.ev.dispatchEvent(new Event(\"alterdelay\"));\n        }\n        this.ev.dispatchEvent(new Event(\"bypassed\"));\n    }\n    bypassDisable() {\n        this._in.disconnect();\n        this._in.connect(this.node.getInputs()[0]);\n        this.node.getOutputs()[0].connect(this._out);\n        this._bypassed = false;\n        if (this.node.processingDelayAsSamples != 0) {\n            this.ev.dispatchEvent(new Event(\"alterdelay\"));\n        }\n        this.ev.dispatchEvent(new Event(\"bypassed\"));\n    }\n    bypass(state) {\n        state = (state === true);\n        if (state === this._bypassed) {\n            return this._bypassed;\n        }\n        if (state) {\n            this.bypassEnable();\n        }\n        else {\n            this.bypassDisable();\n        }\n        return this._bypassed;\n    }\n    isBypassed() {\n        return this._bypassed;\n    }\n    reconnect(new_next) {\n        this.connect(new_next);\n    }\n    connect(new_next) {\n        if (this.next_node !== undefined) {\n            this.disconnect();\n        }\n        if (new_next !== undefined && new_next.input !== undefined) {\n            this.next_node = new_next;\n            this._out.connect(this.next_node.input);\n            return true;\n        }\n        return false;\n    }\n    disconnect() {\n        if (this.next_node !== undefined) {\n            this._out.disconnect(this.next_node.input);\n            this.next_node = undefined;\n        }\n    }\n    destroy() {\n        this.node.destroy();\n        this.node.removeEventListener(\"parameterset\", this);\n        this.node.removeEventListener(\"alterdelay\", this);\n    }\n    handleEvent(e) {\n        this.ev.dispatchEvent(new Event(e.type));\n    }\n    addEventListener(type, listener, options) {\n        return this.ev.addEventListener(type, listener, options);\n    }\n    removeEventListener(type, listener, options) {\n        return this.ev.removeEventListener(type, listener, options);\n    }\n    get input() { return this._in; }\n    get output() { return this._out; }\n    get bypassed() { return this._bypassed; }\n    get prototypeObject() { return this.node.prototypeObject; }\n    get externalInterface() { return this.node.externalInterface; }\n}\nexport function isPluginInstance(object) {\n    return object.node instanceof AudioPlugin;\n}\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n/* jshint esversion: 6 */\nimport { PluginInstance } from \"./PluginInstance\";\nimport { MidiSynthesisInstance } from \"./MidiSynthesisInstance\";\nclass BasePluginPrototype {\n    constructor(proto, factory, name, version, uniqueID, hasMidiInput, hasMidiOutput) {\n        this.proto = proto;\n        this.factory = factory;\n        this.name = name;\n        this.version = version;\n        this.uniqueID = uniqueID;\n        this.hasMidiInput = hasMidiInput;\n        this.hasMidiOutput = hasMidiOutput;\n    }\n}\nexport class PluginPrototype extends BasePluginPrototype {\n    constructor(proto, factory, name, version, uniqueID) {\n        super(proto, factory, name, version, uniqueID, false, false);\n        this.proto = proto;\n        this.factory = factory;\n        this.name = name;\n        this.version = version;\n        this.uniqueID = uniqueID;\n    }\n    createPluginInstance(owner) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const plugin = new this.proto(this.factory, owner, this);\n            if (plugin.initialise) {\n                yield plugin.initialise();\n            }\n            const node = new PluginInstance(plugin);\n            this.factory.registerPluginInstance(node);\n            return node;\n        });\n    }\n}\nexport class SynthesiserPrototype extends BasePluginPrototype {\n    constructor(proto, factory, name, version, uniqueID) {\n        super(proto, factory, name, version, uniqueID, true, false);\n        this.proto = proto;\n        this.factory = factory;\n        this.name = name;\n        this.version = version;\n        this.uniqueID = uniqueID;\n    }\n    createPluginInstance(owner) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const plugin = new this.proto(this.factory, owner, this);\n            if (plugin.initialise) {\n                yield plugin.initialise();\n            }\n            const node = new MidiSynthesisInstance(plugin);\n            this.factory.registerPluginInstance(node);\n            return node;\n        });\n    }\n}\n","/* jshint esversion: 6 */\nexport class PluginUserInterfaceMessageHub {\n    constructor(factory) {\n        this.factory = factory;\n        this.default_interface = {\n            src: \"jsap_default.html\",\n            width: \"500px\",\n            height: \"500px\"\n        };\n    }\n    buildPluginInterface(plugin_object, interface_object) {\n        const iframe = document.createElement(\"iframe\");\n        iframe.src = interface_object.src;\n        if (interface_object.width) {\n            iframe.width = interface_object.width;\n        }\n        if (interface_object.height) {\n            iframe.height = interface_object.height;\n        }\n        iframe.style.border = \"0\";\n        //iframe.contentWindow.pluginInstance = plugin_object;\n        return iframe;\n    }\n    spawnPluginWindow(plugin_object, interface_object, opts) {\n        const w = window.open(interface_object.src, plugin_object.name, opts);\n        plugin_object.externalInterface.registerWindow(w);\n        return w;\n    }\n    setDefaultInterface(src, width, height) {\n        this.default_interface = {\n            src: src,\n            width: width,\n            height: height\n        };\n        return this.default_interface;\n    }\n    pollAllPlugins() {\n        this.factory.getAllPlugins().forEach(function (plugin) {\n            plugin.node.externalInterface.updateInterfaces(true);\n        });\n    }\n}\n","// Store for the semantic terms, each store holds its own data tree\n// Terms are added as key/value paris to a root node\nexport class LinkedStore {\n    constructor(storeName) {\n        this.storeName = storeName;\n        this.et = new EventTarget();\n    }\n    objectToXML(obj, root, doc) {\n        // Used if an object was passed as a term value\n        for (const term of obj.keys()) {\n            if (obj.hasOwnProperty(term)) {\n                const entry = obj[term];\n                if (typeof entry === \"string\") {\n                    root.setAttribute(term, entry);\n                }\n                else if (typeof entry == \"number\") {\n                    root.setAttribute(term, entry.toString());\n                }\n                else {\n                    let docNode;\n                    if (entry instanceof LinkedStore) {\n                        docNode = entry.toXML(doc);\n                    }\n                    else {\n                        docNode = doc.createElement(term);\n                        root.appendChild(docNode);\n                        if (entry instanceof Array) {\n                            this.arrayToXML(entry, docNode, doc);\n                        }\n                        else {\n                            this.objectToXML(entry, docNode, doc);\n                        }\n                    }\n                    root.appendChild(docNode);\n                }\n            }\n        }\n    }\n    arrayToXML(arr, root, doc) {\n        // Used to convert an array to a list of XML entries\n        var all_numbers = true, all_strings = true, i, l = arr.length;\n        all_numbers = arr.every(function (a) {\n            return typeof a === \"number\";\n        });\n        all_strings = arr.every(function (a) {\n            return typeof a === \"string\";\n        });\n        if (all_numbers || all_strings) {\n            // An array of numbers or strings\n            arr.forEach(function (a, i) {\n                root.setAttribute(\"index-\" + i, a);\n            });\n        }\n        else {\n            // An array of objects\n            arr.forEach(function (a, i) {\n                var node = document.createElement(\"value\");\n                node.setAttribute(\"index\", i);\n                this.objectToXML(a, node, doc);\n                root.appendChild(node);\n            });\n        }\n    }\n    addEventListener(type, listener, options) {\n        return this.et.addEventListener(type, listener, options);\n    }\n    removeEventListener(type, callback, options) {\n        return this.et.removeEventListener(type, callback, options);\n    }\n    setTerm(term, value) {\n        if (typeof term !== \"string\" || term.length === 0) {\n            throw (\"term must be a string\");\n        }\n        this.root.set(term, value);\n        this.et.dispatchEvent(new CustomEvent(\"altered\", { detail: { term: term, value: value } }));\n    }\n    setTerms(termsObject) {\n        if (typeof termsObject !== \"object\") {\n            throw (\"setTerms takes an object of term/value pairs\");\n        }\n        for (const term in termsObject) {\n            if (termsObject.hasOwnProperty(term)) {\n                this.setTerm(term, termsObject[term]);\n            }\n        }\n    }\n    deleteTerm(term) {\n        this.setTerm(term, undefined);\n    }\n    getTerm(term) {\n        if (typeof term !== \"string\" || term.length === 0) {\n            throw (\"term must be a string\");\n        }\n        return this.root.get(term);\n    }\n    hasTerm(term) {\n        if (typeof term !== \"string\" || term.length === 0) {\n            throw (\"term must be a string\");\n        }\n        return this.root.has(term);\n    }\n    toJSON() {\n        return JSON.parse(JSON.stringify(this.root));\n    }\n    toXML(doc) {\n        let node;\n        if (!doc) {\n            doc = document.implementation.createDocument(null, this.storeName, null);\n            node = doc.firstElementChild;\n        }\n        else {\n            node = doc.createElement(this.storeName);\n        }\n        this.objectToXML(this.root, node, doc);\n        return node;\n    }\n    get name() {\n        return this.storeName;\n    }\n    set name(newName) {\n        if (this.storeName !== undefined) {\n            throw new Error(\"Name is already set\");\n        }\n        this.storeName = newName;\n    }\n}\n","/* jshint esversion: 6 */\nimport { BasePlugin } from \"../BasePlugin/index\";\nexport class SynthesiserBasePlugin extends BasePlugin {\n    constructor(factory, pluginOwner, prototypeObject) {\n        super(factory, pluginOwner, prototypeObject);\n        this.factory = factory;\n        this.prototypeObject = prototypeObject;\n        this.hasWarnedScheduleNotSet = false;\n        this.hasWarnedCancelNotSet = false;\n        this.editorType = \"roll\";\n    }\n    stop(ct) {\n        this.cancelAllEvents(ct);\n    }\n    addInput() {\n        throw new Error(\"Cannot add input to type \\\"SynthesiserBasePlugin\\\"\");\n    }\n    deleteInput() {\n        throw new Error(\"Cannot delete input to type \\\"SynthesiserBasePlugin\\\"\");\n    }\n    scheduleEvent(msg, contextTime) {\n        if (!this.hasWarnedScheduleNotSet) {\n            console.warn(\"WARNING - .scheduleEvent is not overridden\");\n            this.hasWarnedScheduleNotSet = true;\n        }\n    }\n    cancelAllEvents(contextTime) {\n        if (!this.hasWarnedCancelNotSet) {\n            console.warn(\"WARNING - .cancelAllEvents is not overridden\");\n            this.hasWarnedCancelNotSet = true;\n        }\n    }\n    setEditorType(type) {\n        if (type == \"roll\" || type == \"line\" || type == \"sequencer\") {\n            this.editorType = type;\n        }\n        return this.editorType;\n    }\n    getEditorType() { return this.editorType; }\n    isNoteActive(n) {\n        if (typeof n == \"number\" && n >= 0 && n < 128) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    getActiveNoteProperties() {\n        const obj = [];\n        for (var n = 0; n < 128; n++) {\n            obj.push({\n                code: n,\n                name: this.midiNoteToName(n)\n            });\n        }\n        return obj;\n    }\n    midiNoteToFrequency(m) {\n        return Math.pow(2.0, (m - 69) / 12) * 440;\n    }\n    frequencyToMidiNote(f) {\n        return Math.round(12.0 * Math.log2(f / 440)) + 69;\n    }\n    midiNoteToName(m) {\n        const notes = [\"A\", \"A#\", \"B\", \"C\", \"C#\", \"D\", \"D#\", \"E\", \"F\", \"F#\", \"G\", \"G#\"];\n        const root = m - 21;\n        const octave = Math.floor(root / 12);\n        const note = Math.floor((root + 36) % 12);\n        return notes[note] + String(octave);\n    }\n    noteNameToMidi(n) {\n        const notes = [\"A\", \"A#\", \"B\", \"C\", \"C#\", \"D\", \"D#\", \"E\", \"F\", \"F#\", \"G\", \"G#\"];\n        const octave = Number(n.slice(n.length - 1));\n        const note = notes.indexOf(n.slice(0, n.length - 1));\n        return octave * 12 + note + 21;\n    }\n    noteNameToMIDI(n) {\n        return this.noteNameToMidi;\n    }\n}\nexport function isSynthesiserBasePlugin(object) {\n    return object.inputs.length === 0 && object.outputs.length > 0 && `scheduleEvent` in object;\n}\n","export function uniqueMergeArray(a, b) {\n    const output = [];\n    for (const entry of a) {\n        if (output.includes(entry) === false) {\n            output.push(entry);\n        }\n    }\n    for (const entry of b) {\n        if (output.includes(entry) === false) {\n            output.push(entry);\n        }\n    }\n    return output;\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// This defines a master object for holding all the plugins and communicating\n// This object will also handle creation and destruction of plugins\n/*globals Promise, document, console, LinkedStore, Worker, window, XMLHttpRequest */\n/*eslint-env browser */\n/* jshint esversion:6 */\nexport * from './BasePlugin/index';\nexport * from './SynthesiserBasePlugin/index';\nexport * from './Factory/PluginFactory';\nexport * from './BasePlugin/AudioPlugin';\n"],"sourceRoot":""}